{
  "version": 3,
  "sources": ["../node_modules/debug/node_modules/ms/index.js", "../node_modules/debug/src/common.js", "../node_modules/debug/src/browser.js", "../node_modules/debug/src/node.js", "../node_modules/debug/src/index.js", "../node_modules/agent-base/dist/src/promisify.js", "../node_modules/agent-base/dist/src/index.js", "../node_modules/https-proxy-agent/dist/parse-proxy-response.js", "../node_modules/https-proxy-agent/dist/agent.js", "../node_modules/https-proxy-agent/dist/index.js", "../node_modules/openai/version.mjs", "../node_modules/openai/_shims/registry.mjs", "../node_modules/openai/_shims/MultipartBody.mjs", "../node_modules/openai/_shims/web-runtime.mjs", "../node_modules/openai/_shims/bun-runtime.mjs", "../node_modules/openai/_shims/index.mjs", "../node_modules/openai/error.mjs", "../node_modules/openai/streaming.mjs", "../node_modules/openai/uploads.mjs", "../node_modules/openai/uploads.mjs", "../node_modules/openai/uploads.mjs", "../node_modules/openai/core.mjs", "../node_modules/openai/core.mjs", "../node_modules/openai/core.mjs", "../node_modules/openai/pagination.mjs", "../node_modules/openai/resource.mjs", "../node_modules/openai/resources/chat/completions.mjs", "../node_modules/openai/resources/chat/chat.mjs", "../node_modules/openai/resources/audio/speech.mjs", "../node_modules/openai/resources/audio/transcriptions.mjs", "../node_modules/openai/resources/audio/translations.mjs", "../node_modules/openai/resources/audio/audio.mjs", "../node_modules/openai/resources/beta/assistants/files.mjs", "../node_modules/openai/resources/beta/assistants/assistants.mjs", "../node_modules/openai/lib/RunnableFunction.mjs", "../node_modules/openai/lib/chatCompletionUtils.mjs", "../node_modules/openai/lib/AbstractChatCompletionRunner.mjs", "../node_modules/openai/lib/ChatCompletionRunner.mjs", "../node_modules/openai/lib/ChatCompletionStream.mjs", "../node_modules/openai/lib/ChatCompletionStreamingRunner.mjs", "../node_modules/openai/resources/beta/chat/completions.mjs", "../node_modules/openai/resources/beta/chat/chat.mjs", "../node_modules/openai/resources/beta/threads/messages/files.mjs", "../node_modules/openai/resources/beta/threads/messages/messages.mjs", "../node_modules/openai/resources/beta/threads/runs/steps.mjs", "../node_modules/openai/resources/beta/threads/runs/runs.mjs", "../node_modules/openai/resources/beta/threads/threads.mjs", "../node_modules/openai/resources/beta/beta.mjs", "../node_modules/openai/resources/completions.mjs", "../node_modules/openai/resources/embeddings.mjs", "../node_modules/openai/resources/edits.mjs", "../node_modules/openai/resources/files.mjs", "../node_modules/openai/resources/fine-tunes.mjs", "../node_modules/openai/resources/fine-tuning/jobs.mjs", "../node_modules/openai/resources/fine-tuning/fine-tuning.mjs", "../node_modules/openai/resources/images.mjs", "../node_modules/openai/resources/models.mjs", "../node_modules/openai/resources/moderations.mjs", "../node_modules/openai/index.mjs", "../node_modules/openai/index.mjs", "../node_modules/@sentry/utils/esm/is.js", "../node_modules/@sentry/utils/esm/is.js", "../node_modules/@sentry/utils/esm/string.js", "../node_modules/@sentry/utils/esm/string.js", "../node_modules/@sentry/utils/esm/aggregate-errors.js", "../node_modules/@sentry/utils/esm/worldwide.js", "../node_modules/@sentry/utils/esm/browser.js", "../node_modules/@sentry/utils/esm/browser.js", "../node_modules/@sentry/utils/esm/debug-build.js", "../node_modules/@sentry/utils/esm/logger.js", "../node_modules/@sentry/utils/esm/dsn.js", "../node_modules/@sentry/utils/esm/error.js", "../node_modules/@sentry/utils/esm/object.js", "../node_modules/@sentry/utils/esm/node-stack-trace.js", "../node_modules/@sentry/utils/esm/stacktrace.js", "../node_modules/@sentry/utils/esm/instrument/_handlers.js", "../node_modules/@sentry/utils/esm/instrument/_handlers.js", "../node_modules/@sentry/utils/esm/instrument/console.js", "../node_modules/@sentry/utils/esm/misc.js", "../node_modules/@sentry/utils/esm/instrument/globalError.js", "../node_modules/@sentry/utils/esm/instrument/globalUnhandledRejection.js", "../node_modules/@sentry/utils/esm/env.js", "../node_modules/@sentry/utils/esm/node.js", "../node_modules/@sentry/utils/esm/memo.js", "../node_modules/@sentry/utils/esm/normalize.js", "../node_modules/@sentry/utils/esm/syncpromise.js", "../node_modules/@sentry/utils/esm/promisebuffer.js", "../node_modules/@sentry/utils/esm/cookie.js", "../node_modules/@sentry/utils/esm/url.js", "../node_modules/@sentry/utils/esm/requestdata.js", "../node_modules/@sentry/utils/esm/requestdata.js", "../node_modules/@sentry/utils/esm/severity.js", "../node_modules/@sentry/utils/esm/time.js", "../node_modules/@sentry/utils/esm/time.js", "../node_modules/@sentry/utils/esm/baggage.js", "../node_modules/@sentry/utils/esm/baggage.js", "../node_modules/@sentry/utils/esm/tracing.js", "../node_modules/@sentry/utils/esm/envelope.js", "../node_modules/@sentry/utils/esm/envelope.js", "../node_modules/@sentry/utils/esm/envelope.js", "../node_modules/@sentry/utils/esm/ratelimit.js", "../node_modules/@sentry/utils/esm/eventbuilder.js", "../node_modules/@sentry/utils/esm/lru.js", "../node_modules/@sentry/utils/esm/buildPolyfills/_nullishCoalesce.js", "../node_modules/@sentry/utils/esm/buildPolyfills/_optionalChain.js", "../node_modules/@sentry/core/esm/debug-build.js", "../node_modules/@sentry/core/esm/constants.js", "../node_modules/@sentry/core/esm/eventProcessors.js", "../node_modules/@sentry/core/esm/session.js", "../node_modules/@sentry/core/esm/scope.js", "../node_modules/@sentry/core/esm/hub.js", "../node_modules/@sentry/core/esm/tracing/utils.js", "../node_modules/@sentry/core/esm/tracing/errors.js", "../node_modules/@sentry/core/esm/tracing/span.js", "../node_modules/@sentry/core/esm/tracing/dynamicSamplingContext.js", "../node_modules/@sentry/core/esm/tracing/transaction.js", "../node_modules/@sentry/core/esm/utils/prepareEvent.js", "../node_modules/@sentry/core/esm/exports.js", "../node_modules/@sentry/core/esm/exports.js", "../node_modules/@sentry/core/esm/utils/hasTracingEnabled.js", "../node_modules/@sentry/core/esm/tracing/sampling.js", "../node_modules/@sentry/core/esm/tracing/hubextensions.js", "../node_modules/@sentry/core/esm/tracing/hubextensions.js", "../node_modules/@sentry/core/esm/tracing/trace.js", "../node_modules/@sentry/core/esm/tracing/trace.js", "../node_modules/@sentry/core/esm/envelope.js", "../node_modules/@sentry/core/esm/sessionflusher.js", "../node_modules/@sentry/core/esm/api.js", "../node_modules/@sentry/core/esm/api.js", "../node_modules/@sentry/core/esm/integration.js", "../node_modules/@sentry/core/esm/integration.js", "../node_modules/@sentry/core/esm/baseclient.js", "../node_modules/@sentry/core/esm/checkin.js", "../node_modules/@sentry/core/esm/server-runtime-client.js", "../node_modules/@sentry/core/esm/sdk.js", "../node_modules/@sentry/core/esm/transports/base.js", "../node_modules/@sentry/core/esm/version.js", "../node_modules/@sentry/core/esm/integrations/functiontostring.js", "../node_modules/@sentry/core/esm/integrations/inboundfilters.js", "../node_modules/@sentry/core/esm/integrations/linkederrors.js", "../node_modules/@sentry/core/esm/utils/isSentryRequestUrl.js", "../node_modules/@sentry/core/esm/integrations/requestdata.js", "../node_modules/@sentry-internal/tracing/esm/common/debug-build.js", "../node_modules/@sentry-internal/tracing/esm/node/integrations/utils/node-utils.js", "../node_modules/@sentry-internal/tracing/esm/node/integrations/express.js", "../node_modules/@sentry-internal/tracing/esm/node/integrations/postgres.js", "../node_modules/@sentry-internal/tracing/esm/node/integrations/mysql.js", "../node_modules/@sentry-internal/tracing/esm/node/integrations/mongo.js", "../node_modules/@sentry-internal/tracing/esm/node/integrations/prisma.js", "../node_modules/@sentry-internal/tracing/esm/node/integrations/graphql.js", "../node_modules/@sentry-internal/tracing/esm/node/integrations/apollo.js", "../node_modules/@sentry/node/esm/client.js", "../node_modules/@sentry/node/esm/client.js", "../node_modules/@sentry/node/esm/transports/http.js", "../node_modules/@sentry/node/esm/transports/http.js", "../node_modules/@sentry/node/esm/anr/index.js", "../node_modules/@sentry/node/esm/module.js", "../node_modules/@sentry/node/esm/anr/index.js", "../node_modules/@sentry/node/esm/nodeVersion.js", "../node_modules/@sentry/node/esm/async/domain.js", "../node_modules/@sentry/node/esm/async/domain.js", "../node_modules/@sentry/node/esm/async/hooks.js", "../node_modules/@sentry/node/esm/async/index.js", "../node_modules/@sentry/node/esm/integrations/console.js", "../node_modules/@sentry/node/esm/integrations/console.js", "../node_modules/@sentry/node/esm/debug-build.js", "../node_modules/@sentry/node/esm/integrations/utils/http.js", "../node_modules/@sentry/node/esm/integrations/utils/http.js", "../node_modules/@sentry/node/esm/integrations/http.js", "../node_modules/@sentry/node/esm/integrations/utils/errorhandling.js", "../node_modules/@sentry/node/esm/integrations/onuncaughtexception.js", "../node_modules/@sentry/node/esm/integrations/onunhandledrejection.js", "../node_modules/@sentry/node/esm/integrations/modules.js", "../node_modules/@sentry/node/esm/integrations/contextlines.js", "../node_modules/@sentry/node/esm/integrations/contextlines.js", "../node_modules/@sentry/node/esm/integrations/context.js", "../node_modules/@sentry/node/esm/integrations/localvariables.js", "../node_modules/@sentry/node/esm/integrations/undici/index.js", "../node_modules/@sentry/node/esm/integrations/spotlight.js", "../node_modules/@sentry/node/esm/integrations/spotlight.js", "../node_modules/@sentry/node/esm/sdk.js", "../node_modules/@sentry/node/esm/sdk.js", "../node_modules/@sentry/node/esm/index.js", "../node_modules/@sentry/bun/esm/client.js", "../node_modules/@sentry/bun/esm/client.js", "../node_modules/@sentry/bun/esm/integrations/bunserver.js", "../node_modules/@sentry/bun/esm/transports/index.js", "../node_modules/@sentry/bun/esm/sdk.js", "../node_modules/@sentry/bun/esm/index.js", "../src/controllers/thinking.ts"],
  "sourcesContent": [
    "/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n",
  "\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\t\tlet namespacesCache;\n\t\tlet enabledCache;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tif (enableOverride !== null) {\n\t\t\t\t\treturn enableOverride;\n\t\t\t\t}\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n\t\t\t\t}\n\n\t\t\t\treturn enabledCache;\n\t\t\t},\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\t\tcreateDebug.namespaces = namespaces;\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.slice(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n",
  "/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n",
  "/**\n * Module dependencies.\n */\n\nconst tty = require('tty');\nconst util = require('util');\n\n/**\n * This is the Node.js implementation of `debug()`.\n */\n\nexports.init = init;\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.destroy = util.deprecate(\n\t() => {},\n\t'Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.'\n);\n\n/**\n * Colors.\n */\n\nexports.colors = [6, 2, 3, 4, 5, 1];\n\ntry {\n\t// Optional dependency (as in, doesn't need to be installed, NOT like optionalDependencies in package.json)\n\t// eslint-disable-next-line import/no-extraneous-dependencies\n\tconst supportsColor = require('supports-color');\n\n\tif (supportsColor && (supportsColor.stderr || supportsColor).level >= 2) {\n\t\texports.colors = [\n\t\t\t20,\n\t\t\t21,\n\t\t\t26,\n\t\t\t27,\n\t\t\t32,\n\t\t\t33,\n\t\t\t38,\n\t\t\t39,\n\t\t\t40,\n\t\t\t41,\n\t\t\t42,\n\t\t\t43,\n\t\t\t44,\n\t\t\t45,\n\t\t\t56,\n\t\t\t57,\n\t\t\t62,\n\t\t\t63,\n\t\t\t68,\n\t\t\t69,\n\t\t\t74,\n\t\t\t75,\n\t\t\t76,\n\t\t\t77,\n\t\t\t78,\n\t\t\t79,\n\t\t\t80,\n\t\t\t81,\n\t\t\t92,\n\t\t\t93,\n\t\t\t98,\n\t\t\t99,\n\t\t\t112,\n\t\t\t113,\n\t\t\t128,\n\t\t\t129,\n\t\t\t134,\n\t\t\t135,\n\t\t\t148,\n\t\t\t149,\n\t\t\t160,\n\t\t\t161,\n\t\t\t162,\n\t\t\t163,\n\t\t\t164,\n\t\t\t165,\n\t\t\t166,\n\t\t\t167,\n\t\t\t168,\n\t\t\t169,\n\t\t\t170,\n\t\t\t171,\n\t\t\t172,\n\t\t\t173,\n\t\t\t178,\n\t\t\t179,\n\t\t\t184,\n\t\t\t185,\n\t\t\t196,\n\t\t\t197,\n\t\t\t198,\n\t\t\t199,\n\t\t\t200,\n\t\t\t201,\n\t\t\t202,\n\t\t\t203,\n\t\t\t204,\n\t\t\t205,\n\t\t\t206,\n\t\t\t207,\n\t\t\t208,\n\t\t\t209,\n\t\t\t214,\n\t\t\t215,\n\t\t\t220,\n\t\t\t221\n\t\t];\n\t}\n} catch (error) {\n\t// Swallow - we only care if `supports-color` is available; it doesn't have to be.\n}\n\n/**\n * Build up the default `inspectOpts` object from the environment variables.\n *\n *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js\n */\n\nexports.inspectOpts = Object.keys(process.env).filter(key => {\n\treturn /^debug_/i.test(key);\n}).reduce((obj, key) => {\n\t// Camel-case\n\tconst prop = key\n\t\t.substring(6)\n\t\t.toLowerCase()\n\t\t.replace(/_([a-z])/g, (_, k) => {\n\t\t\treturn k.toUpperCase();\n\t\t});\n\n\t// Coerce string value into JS value\n\tlet val = process.env[key];\n\tif (/^(yes|on|true|enabled)$/i.test(val)) {\n\t\tval = true;\n\t} else if (/^(no|off|false|disabled)$/i.test(val)) {\n\t\tval = false;\n\t} else if (val === 'null') {\n\t\tval = null;\n\t} else {\n\t\tval = Number(val);\n\t}\n\n\tobj[prop] = val;\n\treturn obj;\n}, {});\n\n/**\n * Is stdout a TTY? Colored output is enabled when `true`.\n */\n\nfunction useColors() {\n\treturn 'colors' in exports.inspectOpts ?\n\t\tBoolean(exports.inspectOpts.colors) :\n\t\ttty.isatty(process.stderr.fd);\n}\n\n/**\n * Adds ANSI color escape codes if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\tconst {namespace: name, useColors} = this;\n\n\tif (useColors) {\n\t\tconst c = this.color;\n\t\tconst colorCode = '\\u001B[3' + (c < 8 ? c : '8;5;' + c);\n\t\tconst prefix = `  ${colorCode};1m${name} \\u001B[0m`;\n\n\t\targs[0] = prefix + args[0].split('\\n').join('\\n' + prefix);\n\t\targs.push(colorCode + 'm+' + module.exports.humanize(this.diff) + '\\u001B[0m');\n\t} else {\n\t\targs[0] = getDate() + name + ' ' + args[0];\n\t}\n}\n\nfunction getDate() {\n\tif (exports.inspectOpts.hideDate) {\n\t\treturn '';\n\t}\n\treturn new Date().toISOString() + ' ';\n}\n\n/**\n * Invokes `util.format()` with the specified arguments and writes to stderr.\n */\n\nfunction log(...args) {\n\treturn process.stderr.write(util.format(...args) + '\\n');\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\tif (namespaces) {\n\t\tprocess.env.DEBUG = namespaces;\n\t} else {\n\t\t// If you set a process.env field to null or undefined, it gets cast to the\n\t\t// string 'null' or 'undefined'. Just delete instead.\n\t\tdelete process.env.DEBUG;\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n\treturn process.env.DEBUG;\n}\n\n/**\n * Init logic for `debug` instances.\n *\n * Create a new `inspectOpts` object in case `useColors` is set\n * differently for a particular `debug` instance.\n */\n\nfunction init(debug) {\n\tdebug.inspectOpts = {};\n\n\tconst keys = Object.keys(exports.inspectOpts);\n\tfor (let i = 0; i < keys.length; i++) {\n\t\tdebug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %o to `util.inspect()`, all on a single line.\n */\n\nformatters.o = function (v) {\n\tthis.inspectOpts.colors = this.useColors;\n\treturn util.inspect(v, this.inspectOpts)\n\t\t.split('\\n')\n\t\t.map(str => str.trim())\n\t\t.join(' ');\n};\n\n/**\n * Map %O to `util.inspect()`, allowing multiple lines if needed.\n */\n\nformatters.O = function (v) {\n\tthis.inspectOpts.colors = this.useColors;\n\treturn util.inspect(v, this.inspectOpts);\n};\n",
  "/**\n * Detect Electron renderer / nwjs process, which is node, but we should\n * treat as a browser.\n */\n\nif (typeof process === 'undefined' || process.type === 'renderer' || process.browser === true || process.__nwjs) {\n\tmodule.exports = require('./browser.js');\n} else {\n\tmodule.exports = require('./node.js');\n}\n",
  "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction promisify(fn) {\n    return function (req, opts) {\n        return new Promise((resolve, reject) => {\n            fn.call(this, req, opts, (err, rtn) => {\n                if (err) {\n                    reject(err);\n                }\n                else {\n                    resolve(rtn);\n                }\n            });\n        });\n    };\n}\nexports.default = promisify;\n//# sourceMappingURL=promisify.js.map",
  "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nconst events_1 = require(\"events\");\nconst debug_1 = __importDefault(require(\"debug\"));\nconst promisify_1 = __importDefault(require(\"./promisify\"));\nconst debug = debug_1.default('agent-base');\nfunction isAgent(v) {\n    return Boolean(v) && typeof v.addRequest === 'function';\n}\nfunction isSecureEndpoint() {\n    const { stack } = new Error();\n    if (typeof stack !== 'string')\n        return false;\n    return stack.split('\\n').some(l => l.indexOf('(https.js:') !== -1 || l.indexOf('node:https:') !== -1);\n}\nfunction createAgent(callback, opts) {\n    return new createAgent.Agent(callback, opts);\n}\n(function (createAgent) {\n    /**\n     * Base `http.Agent` implementation.\n     * No pooling/keep-alive is implemented by default.\n     *\n     * @param {Function} callback\n     * @api public\n     */\n    class Agent extends events_1.EventEmitter {\n        constructor(callback, _opts) {\n            super();\n            let opts = _opts;\n            if (typeof callback === 'function') {\n                this.callback = callback;\n            }\n            else if (callback) {\n                opts = callback;\n            }\n            // Timeout for the socket to be returned from the callback\n            this.timeout = null;\n            if (opts && typeof opts.timeout === 'number') {\n                this.timeout = opts.timeout;\n            }\n            // These aren't actually used by `agent-base`, but are required\n            // for the TypeScript definition files in `@types/node` :/\n            this.maxFreeSockets = 1;\n            this.maxSockets = 1;\n            this.maxTotalSockets = Infinity;\n            this.sockets = {};\n            this.freeSockets = {};\n            this.requests = {};\n            this.options = {};\n        }\n        get defaultPort() {\n            if (typeof this.explicitDefaultPort === 'number') {\n                return this.explicitDefaultPort;\n            }\n            return isSecureEndpoint() ? 443 : 80;\n        }\n        set defaultPort(v) {\n            this.explicitDefaultPort = v;\n        }\n        get protocol() {\n            if (typeof this.explicitProtocol === 'string') {\n                return this.explicitProtocol;\n            }\n            return isSecureEndpoint() ? 'https:' : 'http:';\n        }\n        set protocol(v) {\n            this.explicitProtocol = v;\n        }\n        callback(req, opts, fn) {\n            throw new Error('\"agent-base\" has no default implementation, you must subclass and override `callback()`');\n        }\n        /**\n         * Called by node-core's \"_http_client.js\" module when creating\n         * a new HTTP request with this Agent instance.\n         *\n         * @api public\n         */\n        addRequest(req, _opts) {\n            const opts = Object.assign({}, _opts);\n            if (typeof opts.secureEndpoint !== 'boolean') {\n                opts.secureEndpoint = isSecureEndpoint();\n            }\n            if (opts.host == null) {\n                opts.host = 'localhost';\n            }\n            if (opts.port == null) {\n                opts.port = opts.secureEndpoint ? 443 : 80;\n            }\n            if (opts.protocol == null) {\n                opts.protocol = opts.secureEndpoint ? 'https:' : 'http:';\n            }\n            if (opts.host && opts.path) {\n                // If both a `host` and `path` are specified then it's most\n                // likely the result of a `url.parse()` call... we need to\n                // remove the `path` portion so that `net.connect()` doesn't\n                // attempt to open that as a unix socket file.\n                delete opts.path;\n            }\n            delete opts.agent;\n            delete opts.hostname;\n            delete opts._defaultAgent;\n            delete opts.defaultPort;\n            delete opts.createConnection;\n            // Hint to use \"Connection: close\"\n            // XXX: non-documented `http` module API :(\n            req._last = true;\n            req.shouldKeepAlive = false;\n            let timedOut = false;\n            let timeoutId = null;\n            const timeoutMs = opts.timeout || this.timeout;\n            const onerror = (err) => {\n                if (req._hadError)\n                    return;\n                req.emit('error', err);\n                // For Safety. Some additional errors might fire later on\n                // and we need to make sure we don't double-fire the error event.\n                req._hadError = true;\n            };\n            const ontimeout = () => {\n                timeoutId = null;\n                timedOut = true;\n                const err = new Error(`A \"socket\" was not created for HTTP request before ${timeoutMs}ms`);\n                err.code = 'ETIMEOUT';\n                onerror(err);\n            };\n            const callbackError = (err) => {\n                if (timedOut)\n                    return;\n                if (timeoutId !== null) {\n                    clearTimeout(timeoutId);\n                    timeoutId = null;\n                }\n                onerror(err);\n            };\n            const onsocket = (socket) => {\n                if (timedOut)\n                    return;\n                if (timeoutId != null) {\n                    clearTimeout(timeoutId);\n                    timeoutId = null;\n                }\n                if (isAgent(socket)) {\n                    // `socket` is actually an `http.Agent` instance, so\n                    // relinquish responsibility for this `req` to the Agent\n                    // from here on\n                    debug('Callback returned another Agent instance %o', socket.constructor.name);\n                    socket.addRequest(req, opts);\n                    return;\n                }\n                if (socket) {\n                    socket.once('free', () => {\n                        this.freeSocket(socket, opts);\n                    });\n                    req.onSocket(socket);\n                    return;\n                }\n                const err = new Error(`no Duplex stream was returned to agent-base for \\`${req.method} ${req.path}\\``);\n                onerror(err);\n            };\n            if (typeof this.callback !== 'function') {\n                onerror(new Error('`callback` is not defined'));\n                return;\n            }\n            if (!this.promisifiedCallback) {\n                if (this.callback.length >= 3) {\n                    debug('Converting legacy callback function to promise');\n                    this.promisifiedCallback = promisify_1.default(this.callback);\n                }\n                else {\n                    this.promisifiedCallback = this.callback;\n                }\n            }\n            if (typeof timeoutMs === 'number' && timeoutMs > 0) {\n                timeoutId = setTimeout(ontimeout, timeoutMs);\n            }\n            if ('port' in opts && typeof opts.port !== 'number') {\n                opts.port = Number(opts.port);\n            }\n            try {\n                debug('Resolving socket for %o request: %o', opts.protocol, `${req.method} ${req.path}`);\n                Promise.resolve(this.promisifiedCallback(req, opts)).then(onsocket, callbackError);\n            }\n            catch (err) {\n                Promise.reject(err).catch(callbackError);\n            }\n        }\n        freeSocket(socket, opts) {\n            debug('Freeing socket %o %o', socket.constructor.name, opts);\n            socket.destroy();\n        }\n        destroy() {\n            debug('Destroying agent %o', this.constructor.name);\n        }\n    }\n    createAgent.Agent = Agent;\n    // So that `instanceof` works correctly\n    createAgent.prototype = createAgent.Agent.prototype;\n})(createAgent || (createAgent = {}));\nmodule.exports = createAgent;\n//# sourceMappingURL=index.js.map",
  "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst debug_1 = __importDefault(require(\"debug\"));\nconst debug = debug_1.default('https-proxy-agent:parse-proxy-response');\nfunction parseProxyResponse(socket) {\n    return new Promise((resolve, reject) => {\n        // we need to buffer any HTTP traffic that happens with the proxy before we get\n        // the CONNECT response, so that if the response is anything other than an \"200\"\n        // response code, then we can re-play the \"data\" events on the socket once the\n        // HTTP parser is hooked up...\n        let buffersLength = 0;\n        const buffers = [];\n        function read() {\n            const b = socket.read();\n            if (b)\n                ondata(b);\n            else\n                socket.once('readable', read);\n        }\n        function cleanup() {\n            socket.removeListener('end', onend);\n            socket.removeListener('error', onerror);\n            socket.removeListener('close', onclose);\n            socket.removeListener('readable', read);\n        }\n        function onclose(err) {\n            debug('onclose had error %o', err);\n        }\n        function onend() {\n            debug('onend');\n        }\n        function onerror(err) {\n            cleanup();\n            debug('onerror %o', err);\n            reject(err);\n        }\n        function ondata(b) {\n            buffers.push(b);\n            buffersLength += b.length;\n            const buffered = Buffer.concat(buffers, buffersLength);\n            const endOfHeaders = buffered.indexOf('\\r\\n\\r\\n');\n            if (endOfHeaders === -1) {\n                // keep buffering\n                debug('have not received end of HTTP headers yet...');\n                read();\n                return;\n            }\n            const firstLine = buffered.toString('ascii', 0, buffered.indexOf('\\r\\n'));\n            const statusCode = +firstLine.split(' ')[1];\n            debug('got proxy server response: %o', firstLine);\n            resolve({\n                statusCode,\n                buffered\n            });\n        }\n        socket.on('error', onerror);\n        socket.on('close', onclose);\n        socket.on('end', onend);\n        read();\n    });\n}\nexports.default = parseProxyResponse;\n//# sourceMappingURL=parse-proxy-response.js.map",
  "\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst net_1 = __importDefault(require(\"net\"));\nconst tls_1 = __importDefault(require(\"tls\"));\nconst url_1 = __importDefault(require(\"url\"));\nconst assert_1 = __importDefault(require(\"assert\"));\nconst debug_1 = __importDefault(require(\"debug\"));\nconst agent_base_1 = require(\"agent-base\");\nconst parse_proxy_response_1 = __importDefault(require(\"./parse-proxy-response\"));\nconst debug = debug_1.default('https-proxy-agent:agent');\n/**\n * The `HttpsProxyAgent` implements an HTTP Agent subclass that connects to\n * the specified \"HTTP(s) proxy server\" in order to proxy HTTPS requests.\n *\n * Outgoing HTTP requests are first tunneled through the proxy server using the\n * `CONNECT` HTTP request method to establish a connection to the proxy server,\n * and then the proxy server connects to the destination target and issues the\n * HTTP request from the proxy server.\n *\n * `https:` requests have their socket connection upgraded to TLS once\n * the connection to the proxy server has been established.\n *\n * @api public\n */\nclass HttpsProxyAgent extends agent_base_1.Agent {\n    constructor(_opts) {\n        let opts;\n        if (typeof _opts === 'string') {\n            opts = url_1.default.parse(_opts);\n        }\n        else {\n            opts = _opts;\n        }\n        if (!opts) {\n            throw new Error('an HTTP(S) proxy server `host` and `port` must be specified!');\n        }\n        debug('creating new HttpsProxyAgent instance: %o', opts);\n        super(opts);\n        const proxy = Object.assign({}, opts);\n        // If `true`, then connect to the proxy server over TLS.\n        // Defaults to `false`.\n        this.secureProxy = opts.secureProxy || isHTTPS(proxy.protocol);\n        // Prefer `hostname` over `host`, and set the `port` if needed.\n        proxy.host = proxy.hostname || proxy.host;\n        if (typeof proxy.port === 'string') {\n            proxy.port = parseInt(proxy.port, 10);\n        }\n        if (!proxy.port && proxy.host) {\n            proxy.port = this.secureProxy ? 443 : 80;\n        }\n        // ALPN is supported by Node.js >= v5.\n        // attempt to negotiate http/1.1 for proxy servers that support http/2\n        if (this.secureProxy && !('ALPNProtocols' in proxy)) {\n            proxy.ALPNProtocols = ['http 1.1'];\n        }\n        if (proxy.host && proxy.path) {\n            // If both a `host` and `path` are specified then it's most likely\n            // the result of a `url.parse()` call... we need to remove the\n            // `path` portion so that `net.connect()` doesn't attempt to open\n            // that as a Unix socket file.\n            delete proxy.path;\n            delete proxy.pathname;\n        }\n        this.proxy = proxy;\n    }\n    /**\n     * Called when the node-core HTTP client library is creating a\n     * new HTTP request.\n     *\n     * @api protected\n     */\n    callback(req, opts) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { proxy, secureProxy } = this;\n            // Create a socket connection to the proxy server.\n            let socket;\n            if (secureProxy) {\n                debug('Creating `tls.Socket`: %o', proxy);\n                socket = tls_1.default.connect(proxy);\n            }\n            else {\n                debug('Creating `net.Socket`: %o', proxy);\n                socket = net_1.default.connect(proxy);\n            }\n            const headers = Object.assign({}, proxy.headers);\n            const hostname = `${opts.host}:${opts.port}`;\n            let payload = `CONNECT ${hostname} HTTP/1.1\\r\\n`;\n            // Inject the `Proxy-Authorization` header if necessary.\n            if (proxy.auth) {\n                headers['Proxy-Authorization'] = `Basic ${Buffer.from(proxy.auth).toString('base64')}`;\n            }\n            // The `Host` header should only include the port\n            // number when it is not the default port.\n            let { host, port, secureEndpoint } = opts;\n            if (!isDefaultPort(port, secureEndpoint)) {\n                host += `:${port}`;\n            }\n            headers.Host = host;\n            headers.Connection = 'close';\n            for (const name of Object.keys(headers)) {\n                payload += `${name}: ${headers[name]}\\r\\n`;\n            }\n            const proxyResponsePromise = parse_proxy_response_1.default(socket);\n            socket.write(`${payload}\\r\\n`);\n            const { statusCode, buffered } = yield proxyResponsePromise;\n            if (statusCode === 200) {\n                req.once('socket', resume);\n                if (opts.secureEndpoint) {\n                    // The proxy is connecting to a TLS server, so upgrade\n                    // this socket connection to a TLS connection.\n                    debug('Upgrading socket connection to TLS');\n                    const servername = opts.servername || opts.host;\n                    return tls_1.default.connect(Object.assign(Object.assign({}, omit(opts, 'host', 'hostname', 'path', 'port')), { socket,\n                        servername }));\n                }\n                return socket;\n            }\n            // Some other status code that's not 200... need to re-play the HTTP\n            // header \"data\" events onto the socket once the HTTP machinery is\n            // attached so that the node core `http` can parse and handle the\n            // error status code.\n            // Close the original socket, and a new \"fake\" socket is returned\n            // instead, so that the proxy doesn't get the HTTP request\n            // written to it (which may contain `Authorization` headers or other\n            // sensitive data).\n            //\n            // See: https://hackerone.com/reports/541502\n            socket.destroy();\n            const fakeSocket = new net_1.default.Socket({ writable: false });\n            fakeSocket.readable = true;\n            // Need to wait for the \"socket\" event to re-play the \"data\" events.\n            req.once('socket', (s) => {\n                debug('replaying proxy buffer for failed request');\n                assert_1.default(s.listenerCount('data') > 0);\n                // Replay the \"buffered\" Buffer onto the fake `socket`, since at\n                // this point the HTTP module machinery has been hooked up for\n                // the user.\n                s.push(buffered);\n                s.push(null);\n            });\n            return fakeSocket;\n        });\n    }\n}\nexports.default = HttpsProxyAgent;\nfunction resume(socket) {\n    socket.resume();\n}\nfunction isDefaultPort(port, secure) {\n    return Boolean((!secure && port === 80) || (secure && port === 443));\n}\nfunction isHTTPS(protocol) {\n    return typeof protocol === 'string' ? /^https:?$/i.test(protocol) : false;\n}\nfunction omit(obj, ...keys) {\n    const ret = {};\n    let key;\n    for (key in obj) {\n        if (!keys.includes(key)) {\n            ret[key] = obj[key];\n        }\n    }\n    return ret;\n}\n//# sourceMappingURL=agent.js.map",
  "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nconst agent_1 = __importDefault(require(\"./agent\"));\nfunction createHttpsProxyAgent(opts) {\n    return new agent_1.default(opts);\n}\n(function (createHttpsProxyAgent) {\n    createHttpsProxyAgent.HttpsProxyAgent = agent_1.default;\n    createHttpsProxyAgent.prototype = agent_1.default.prototype;\n})(createHttpsProxyAgent || (createHttpsProxyAgent = {}));\nmodule.exports = createHttpsProxyAgent;\n//# sourceMappingURL=index.js.map",
  "export const VERSION = '4.20.0'; // x-release-please-version\n//# sourceMappingURL=version.mjs.map",
  "export let auto = false;\nexport let kind = undefined;\nexport let fetch = undefined;\nexport let Request = undefined;\nexport let Response = undefined;\nexport let Headers = undefined;\nexport let FormData = undefined;\nexport let Blob = undefined;\nexport let File = undefined;\nexport let ReadableStream = undefined;\nexport let getMultipartRequestOptions = undefined;\nexport let getDefaultAgent = undefined;\nexport let fileFromPath = undefined;\nexport let isFsReadStream = undefined;\nexport function setShims(shims, options = { auto: false }) {\n    if (auto) {\n        throw new Error(`you must \\`import 'openai/shims/${shims.kind}'\\` before importing anything else from openai`);\n    }\n    if (kind) {\n        throw new Error(`can't \\`import 'openai/shims/${shims.kind}'\\` after \\`import 'openai/shims/${kind}'\\``);\n    }\n    auto = options.auto;\n    kind = shims.kind;\n    fetch = shims.fetch;\n    Request = shims.Request;\n    Response = shims.Response;\n    Headers = shims.Headers;\n    FormData = shims.FormData;\n    Blob = shims.Blob;\n    File = shims.File;\n    ReadableStream = shims.ReadableStream;\n    getMultipartRequestOptions = shims.getMultipartRequestOptions;\n    getDefaultAgent = shims.getDefaultAgent;\n    fileFromPath = shims.fileFromPath;\n    isFsReadStream = shims.isFsReadStream;\n}\n//# sourceMappingURL=registry.mjs.map",
  "/**\n * Disclaimer: modules in _shims aren't intended to be imported by SDK users.\n */\nexport class MultipartBody {\n    constructor(body) {\n        this.body = body;\n    }\n    get [Symbol.toStringTag]() {\n        return 'MultipartBody';\n    }\n}\n//# sourceMappingURL=MultipartBody.mjs.map",
  "import { MultipartBody } from \"./MultipartBody.mjs\";\nexport function getRuntime({ manuallyImported } = {}) {\n    const recommendation = manuallyImported ?\n        `You may need to use polyfills`\n        : `Add one of these imports before your first \\`import … from 'openai'\\`:\n- \\`import 'openai/shims/node'\\` (if you're running on Node)\n- \\`import 'openai/shims/web'\\` (otherwise)\n`;\n    let _fetch, _Request, _Response, _Headers;\n    try {\n        // @ts-ignore\n        _fetch = fetch;\n        // @ts-ignore\n        _Request = Request;\n        // @ts-ignore\n        _Response = Response;\n        // @ts-ignore\n        _Headers = Headers;\n    }\n    catch (error) {\n        throw new Error(`this environment is missing the following Web Fetch API type: ${error.message}. ${recommendation}`);\n    }\n    return {\n        kind: 'web',\n        fetch: _fetch,\n        Request: _Request,\n        Response: _Response,\n        Headers: _Headers,\n        FormData: \n        // @ts-ignore\n        typeof FormData !== 'undefined' ? FormData : (class FormData {\n            // @ts-ignore\n            constructor() {\n                throw new Error(`file uploads aren't supported in this environment yet as 'FormData' is undefined. ${recommendation}`);\n            }\n        }),\n        Blob: typeof Blob !== 'undefined' ? Blob : (class Blob {\n            constructor() {\n                throw new Error(`file uploads aren't supported in this environment yet as 'Blob' is undefined. ${recommendation}`);\n            }\n        }),\n        File: \n        // @ts-ignore\n        typeof File !== 'undefined' ? File : (class File {\n            // @ts-ignore\n            constructor() {\n                throw new Error(`file uploads aren't supported in this environment yet as 'File' is undefined. ${recommendation}`);\n            }\n        }),\n        ReadableStream: \n        // @ts-ignore\n        typeof ReadableStream !== 'undefined' ? ReadableStream : (class ReadableStream {\n            // @ts-ignore\n            constructor() {\n                throw new Error(`streaming isn't supported in this environment yet as 'ReadableStream' is undefined. ${recommendation}`);\n            }\n        }),\n        getMultipartRequestOptions: async (\n        // @ts-ignore\n        form, opts) => ({\n            ...opts,\n            body: new MultipartBody(form),\n        }),\n        getDefaultAgent: (url) => undefined,\n        fileFromPath: () => {\n            throw new Error('The `fileFromPath` function is only supported in Node. See the README for more details: https://www.github.com/openai/openai-node#file-uploads');\n        },\n        isFsReadStream: (value) => false,\n    };\n}\n//# sourceMappingURL=web-runtime.mjs.map",
  "import { getRuntime as getWebRuntime } from \"./web-runtime.mjs\";\nimport { ReadStream as FsReadStream } from 'node:fs';\nexport function getRuntime() {\n    const runtime = getWebRuntime();\n    function isFsReadStream(value) {\n        return value instanceof FsReadStream;\n    }\n    return { ...runtime, isFsReadStream };\n}\n//# sourceMappingURL=bun-runtime.mjs.map",
  "/**\n * Disclaimer: modules in _shims aren't intended to be imported by SDK users.\n */\nimport * as shims from './registry.mjs';\nimport * as auto from 'openai/_shims/auto/runtime';\nif (!shims.kind) shims.setShims(auto.getRuntime(), { auto: true });\nexport * from './registry.mjs';\n",
  "// File generated from our OpenAPI spec by Stainless.\nimport { castToError } from \"./core.mjs\";\nexport class OpenAIError extends Error {\n}\nexport class APIError extends OpenAIError {\n    constructor(status, error, message, headers) {\n        super(`${APIError.makeMessage(status, error, message)}`);\n        this.status = status;\n        this.headers = headers;\n        const data = error;\n        this.error = data;\n        this.code = data?.['code'];\n        this.param = data?.['param'];\n        this.type = data?.['type'];\n    }\n    static makeMessage(status, error, message) {\n        const msg = error?.message ?\n            typeof error.message === 'string' ? error.message\n                : JSON.stringify(error.message)\n            : error ? JSON.stringify(error)\n                : message;\n        if (status && msg) {\n            return `${status} ${msg}`;\n        }\n        if (status) {\n            return `${status} status code (no body)`;\n        }\n        if (msg) {\n            return msg;\n        }\n        return '(no status code or body)';\n    }\n    static generate(status, errorResponse, message, headers) {\n        if (!status) {\n            return new APIConnectionError({ cause: castToError(errorResponse) });\n        }\n        const error = errorResponse?.['error'];\n        if (status === 400) {\n            return new BadRequestError(status, error, message, headers);\n        }\n        if (status === 401) {\n            return new AuthenticationError(status, error, message, headers);\n        }\n        if (status === 403) {\n            return new PermissionDeniedError(status, error, message, headers);\n        }\n        if (status === 404) {\n            return new NotFoundError(status, error, message, headers);\n        }\n        if (status === 409) {\n            return new ConflictError(status, error, message, headers);\n        }\n        if (status === 422) {\n            return new UnprocessableEntityError(status, error, message, headers);\n        }\n        if (status === 429) {\n            return new RateLimitError(status, error, message, headers);\n        }\n        if (status >= 500) {\n            return new InternalServerError(status, error, message, headers);\n        }\n        return new APIError(status, error, message, headers);\n    }\n}\nexport class APIUserAbortError extends APIError {\n    constructor({ message } = {}) {\n        super(undefined, undefined, message || 'Request was aborted.', undefined);\n        this.status = undefined;\n    }\n}\nexport class APIConnectionError extends APIError {\n    constructor({ message, cause }) {\n        super(undefined, undefined, message || 'Connection error.', undefined);\n        this.status = undefined;\n        // in some environments the 'cause' property is already declared\n        // @ts-ignore\n        if (cause)\n            this.cause = cause;\n    }\n}\nexport class APIConnectionTimeoutError extends APIConnectionError {\n    constructor({ message } = {}) {\n        super({ message: message ?? 'Request timed out.' });\n    }\n}\nexport class BadRequestError extends APIError {\n    constructor() {\n        super(...arguments);\n        this.status = 400;\n    }\n}\nexport class AuthenticationError extends APIError {\n    constructor() {\n        super(...arguments);\n        this.status = 401;\n    }\n}\nexport class PermissionDeniedError extends APIError {\n    constructor() {\n        super(...arguments);\n        this.status = 403;\n    }\n}\nexport class NotFoundError extends APIError {\n    constructor() {\n        super(...arguments);\n        this.status = 404;\n    }\n}\nexport class ConflictError extends APIError {\n    constructor() {\n        super(...arguments);\n        this.status = 409;\n    }\n}\nexport class UnprocessableEntityError extends APIError {\n    constructor() {\n        super(...arguments);\n        this.status = 422;\n    }\n}\nexport class RateLimitError extends APIError {\n    constructor() {\n        super(...arguments);\n        this.status = 429;\n    }\n}\nexport class InternalServerError extends APIError {\n}\n//# sourceMappingURL=error.mjs.map",
  "import { ReadableStream } from \"./_shims/index.mjs\";\nimport { OpenAIError } from \"./error.mjs\";\nimport { APIError } from 'openai/error';\nexport class Stream {\n    constructor(iterator, controller) {\n        this.iterator = iterator;\n        this.controller = controller;\n    }\n    static fromSSEResponse(response, controller) {\n        let consumed = false;\n        const decoder = new SSEDecoder();\n        async function* iterMessages() {\n            if (!response.body) {\n                controller.abort();\n                throw new OpenAIError(`Attempted to iterate over a response with no body`);\n            }\n            const lineDecoder = new LineDecoder();\n            const iter = readableStreamAsyncIterable(response.body);\n            for await (const chunk of iter) {\n                for (const line of lineDecoder.decode(chunk)) {\n                    const sse = decoder.decode(line);\n                    if (sse)\n                        yield sse;\n                }\n            }\n            for (const line of lineDecoder.flush()) {\n                const sse = decoder.decode(line);\n                if (sse)\n                    yield sse;\n            }\n        }\n        async function* iterator() {\n            if (consumed) {\n                throw new Error('Cannot iterate over a consumed stream, use `.tee()` to split the stream.');\n            }\n            consumed = true;\n            let done = false;\n            try {\n                for await (const sse of iterMessages()) {\n                    if (done)\n                        continue;\n                    if (sse.data.startsWith('[DONE]')) {\n                        done = true;\n                        continue;\n                    }\n                    if (sse.event === null) {\n                        let data;\n                        try {\n                            data = JSON.parse(sse.data);\n                        }\n                        catch (e) {\n                            console.error(`Could not parse message into JSON:`, sse.data);\n                            console.error(`From chunk:`, sse.raw);\n                            throw e;\n                        }\n                        if (data && data.error) {\n                            throw new APIError(undefined, data.error, undefined, undefined);\n                        }\n                        yield data;\n                    }\n                }\n                done = true;\n            }\n            catch (e) {\n                // If the user calls `stream.controller.abort()`, we should exit without throwing.\n                if (e instanceof Error && e.name === 'AbortError')\n                    return;\n                throw e;\n            }\n            finally {\n                // If the user `break`s, abort the ongoing request.\n                if (!done)\n                    controller.abort();\n            }\n        }\n        return new Stream(iterator, controller);\n    }\n    /**\n     * Generates a Stream from a newline-separated ReadableStream\n     * where each item is a JSON value.\n     */\n    static fromReadableStream(readableStream, controller) {\n        let consumed = false;\n        async function* iterLines() {\n            const lineDecoder = new LineDecoder();\n            const iter = readableStreamAsyncIterable(readableStream);\n            for await (const chunk of iter) {\n                for (const line of lineDecoder.decode(chunk)) {\n                    yield line;\n                }\n            }\n            for (const line of lineDecoder.flush()) {\n                yield line;\n            }\n        }\n        async function* iterator() {\n            if (consumed) {\n                throw new Error('Cannot iterate over a consumed stream, use `.tee()` to split the stream.');\n            }\n            consumed = true;\n            let done = false;\n            try {\n                for await (const line of iterLines()) {\n                    if (done)\n                        continue;\n                    if (line)\n                        yield JSON.parse(line);\n                }\n                done = true;\n            }\n            catch (e) {\n                // If the user calls `stream.controller.abort()`, we should exit without throwing.\n                if (e instanceof Error && e.name === 'AbortError')\n                    return;\n                throw e;\n            }\n            finally {\n                // If the user `break`s, abort the ongoing request.\n                if (!done)\n                    controller.abort();\n            }\n        }\n        return new Stream(iterator, controller);\n    }\n    [Symbol.asyncIterator]() {\n        return this.iterator();\n    }\n    /**\n     * Splits the stream into two streams which can be\n     * independently read from at different speeds.\n     */\n    tee() {\n        const left = [];\n        const right = [];\n        const iterator = this.iterator();\n        const teeIterator = (queue) => {\n            return {\n                next: () => {\n                    if (queue.length === 0) {\n                        const result = iterator.next();\n                        left.push(result);\n                        right.push(result);\n                    }\n                    return queue.shift();\n                },\n            };\n        };\n        return [\n            new Stream(() => teeIterator(left), this.controller),\n            new Stream(() => teeIterator(right), this.controller),\n        ];\n    }\n    /**\n     * Converts this stream to a newline-separated ReadableStream of\n     * JSON stringified values in the stream\n     * which can be turned back into a Stream with `Stream.fromReadableStream()`.\n     */\n    toReadableStream() {\n        const self = this;\n        let iter;\n        const encoder = new TextEncoder();\n        return new ReadableStream({\n            async start() {\n                iter = self[Symbol.asyncIterator]();\n            },\n            async pull(ctrl) {\n                try {\n                    const { value, done } = await iter.next();\n                    if (done)\n                        return ctrl.close();\n                    const bytes = encoder.encode(JSON.stringify(value) + '\\n');\n                    ctrl.enqueue(bytes);\n                }\n                catch (err) {\n                    ctrl.error(err);\n                }\n            },\n            async cancel() {\n                await iter.return?.();\n            },\n        });\n    }\n}\nclass SSEDecoder {\n    constructor() {\n        this.event = null;\n        this.data = [];\n        this.chunks = [];\n    }\n    decode(line) {\n        if (line.endsWith('\\r')) {\n            line = line.substring(0, line.length - 1);\n        }\n        if (!line) {\n            // empty line and we didn't previously encounter any messages\n            if (!this.event && !this.data.length)\n                return null;\n            const sse = {\n                event: this.event,\n                data: this.data.join('\\n'),\n                raw: this.chunks,\n            };\n            this.event = null;\n            this.data = [];\n            this.chunks = [];\n            return sse;\n        }\n        this.chunks.push(line);\n        if (line.startsWith(':')) {\n            return null;\n        }\n        let [fieldname, _, value] = partition(line, ':');\n        if (value.startsWith(' ')) {\n            value = value.substring(1);\n        }\n        if (fieldname === 'event') {\n            this.event = value;\n        }\n        else if (fieldname === 'data') {\n            this.data.push(value);\n        }\n        return null;\n    }\n}\n/**\n * A re-implementation of httpx's `LineDecoder` in Python that handles incrementally\n * reading lines from text.\n *\n * https://github.com/encode/httpx/blob/920333ea98118e9cf617f246905d7b202510941c/httpx/_decoders.py#L258\n */\nclass LineDecoder {\n    constructor() {\n        this.buffer = [];\n        this.trailingCR = false;\n    }\n    decode(chunk) {\n        let text = this.decodeText(chunk);\n        if (this.trailingCR) {\n            text = '\\r' + text;\n            this.trailingCR = false;\n        }\n        if (text.endsWith('\\r')) {\n            this.trailingCR = true;\n            text = text.slice(0, -1);\n        }\n        if (!text) {\n            return [];\n        }\n        const trailingNewline = LineDecoder.NEWLINE_CHARS.has(text[text.length - 1] || '');\n        let lines = text.split(LineDecoder.NEWLINE_REGEXP);\n        if (lines.length === 1 && !trailingNewline) {\n            this.buffer.push(lines[0]);\n            return [];\n        }\n        if (this.buffer.length > 0) {\n            lines = [this.buffer.join('') + lines[0], ...lines.slice(1)];\n            this.buffer = [];\n        }\n        if (!trailingNewline) {\n            this.buffer = [lines.pop() || ''];\n        }\n        return lines;\n    }\n    decodeText(bytes) {\n        if (bytes == null)\n            return '';\n        if (typeof bytes === 'string')\n            return bytes;\n        // Node:\n        if (typeof Buffer !== 'undefined') {\n            if (bytes instanceof Buffer) {\n                return bytes.toString();\n            }\n            if (bytes instanceof Uint8Array) {\n                return Buffer.from(bytes).toString();\n            }\n            throw new OpenAIError(`Unexpected: received non-Uint8Array (${bytes.constructor.name}) stream chunk in an environment with a global \"Buffer\" defined, which this library assumes to be Node. Please report this error.`);\n        }\n        // Browser\n        if (typeof TextDecoder !== 'undefined') {\n            if (bytes instanceof Uint8Array || bytes instanceof ArrayBuffer) {\n                this.textDecoder ?? (this.textDecoder = new TextDecoder('utf8'));\n                return this.textDecoder.decode(bytes);\n            }\n            throw new OpenAIError(`Unexpected: received non-Uint8Array/ArrayBuffer (${bytes.constructor.name}) in a web platform. Please report this error.`);\n        }\n        throw new OpenAIError(`Unexpected: neither Buffer nor TextDecoder are available as globals. Please report this error.`);\n    }\n    flush() {\n        if (!this.buffer.length && !this.trailingCR) {\n            return [];\n        }\n        const lines = [this.buffer.join('')];\n        this.buffer = [];\n        this.trailingCR = false;\n        return lines;\n    }\n}\n// prettier-ignore\nLineDecoder.NEWLINE_CHARS = new Set(['\\n', '\\r', '\\x0b', '\\x0c', '\\x1c', '\\x1d', '\\x1e', '\\x85', '\\u2028', '\\u2029']);\nLineDecoder.NEWLINE_REGEXP = /\\r\\n|[\\n\\r\\x0b\\x0c\\x1c\\x1d\\x1e\\x85\\u2028\\u2029]/g;\nfunction partition(str, delimiter) {\n    const index = str.indexOf(delimiter);\n    if (index !== -1) {\n        return [str.substring(0, index), delimiter, str.substring(index + delimiter.length)];\n    }\n    return [str, '', ''];\n}\n/**\n * Most browsers don't yet have async iterable support for ReadableStream,\n * and Node has a very different way of reading bytes from its \"ReadableStream\".\n *\n * This polyfill was pulled from https://github.com/MattiasBuelens/web-streams-polyfill/pull/122#issuecomment-1627354490\n */\nfunction readableStreamAsyncIterable(stream) {\n    if (stream[Symbol.asyncIterator])\n        return stream;\n    const reader = stream.getReader();\n    return {\n        async next() {\n            try {\n                const result = await reader.read();\n                if (result?.done)\n                    reader.releaseLock(); // release lock when stream becomes closed\n                return result;\n            }\n            catch (e) {\n                reader.releaseLock(); // release lock when stream becomes errored\n                throw e;\n            }\n        },\n        async return() {\n            const cancelPromise = reader.cancel();\n            reader.releaseLock();\n            await cancelPromise;\n            return { done: true, value: undefined };\n        },\n        [Symbol.asyncIterator]() {\n            return this;\n        },\n    };\n}\n//# sourceMappingURL=streaming.mjs.map",
  "import { FormData, File, getMultipartRequestOptions, isFsReadStream, } from \"./_shims/index.mjs\";\nexport { fileFromPath } from \"./_shims/index.mjs\";\nexport const isResponseLike = (value) => value != null &&\n    typeof value === 'object' &&\n    typeof value.url === 'string' &&\n    typeof value.blob === 'function';\nexport const isFileLike = (value) => value != null &&\n    typeof value === 'object' &&\n    typeof value.name === 'string' &&\n    typeof value.lastModified === 'number' &&\n    isBlobLike(value);\n/**\n * The BlobLike type omits arrayBuffer() because @types/node-fetch@^2.6.4 lacks it; but this check\n * adds the arrayBuffer() method type because it is available and used at runtime\n */\nexport const isBlobLike = (value) => value != null &&\n    typeof value === 'object' &&\n    typeof value.size === 'number' &&\n    typeof value.type === 'string' &&\n    typeof value.text === 'function' &&\n    typeof value.slice === 'function' &&\n    typeof value.arrayBuffer === 'function';\nexport const isUploadable = (value) => {\n    return isFileLike(value) || isResponseLike(value) || isFsReadStream(value);\n};\n/**\n * Helper for creating a {@link File} to pass to an SDK upload method from a variety of different data formats\n * @param value the raw content of the file.  Can be an {@link Uploadable}, {@link BlobLikePart}, or {@link AsyncIterable} of {@link BlobLikePart}s\n * @param {string=} name the name of the file. If omitted, toFile will try to determine a file name from bits if possible\n * @param {Object=} options additional properties\n * @param {string=} options.type the MIME type of the content\n * @param {number=} options.lastModified the last modified timestamp\n * @returns a {@link File} with the given properties\n */\nexport async function toFile(value, name, options = {}) {\n    // If it's a promise, resolve it.\n    value = await value;\n    if (isResponseLike(value)) {\n        const blob = await value.blob();\n        name || (name = new URL(value.url).pathname.split(/[\\\\/]/).pop() ?? 'unknown_file');\n        return new File([blob], name, options);\n    }\n    const bits = await getBytes(value);\n    name || (name = getName(value) ?? 'unknown_file');\n    if (!options.type) {\n        const type = bits[0]?.type;\n        if (typeof type === 'string') {\n            options = { ...options, type };\n        }\n    }\n    return new File(bits, name, options);\n}\nasync function getBytes(value) {\n    let parts = [];\n    if (typeof value === 'string' ||\n        ArrayBuffer.isView(value) || // includes Uint8Array, Buffer, etc.\n        value instanceof ArrayBuffer) {\n        parts.push(value);\n    }\n    else if (isBlobLike(value)) {\n        parts.push(await value.arrayBuffer());\n    }\n    else if (isAsyncIterableIterator(value) // includes Readable, ReadableStream, etc.\n    ) {\n        for await (const chunk of value) {\n            parts.push(chunk); // TODO, consider validating?\n        }\n    }\n    else {\n        throw new Error(`Unexpected data type: ${typeof value}; constructor: ${value?.constructor?.name}; props: ${propsForError(value)}`);\n    }\n    return parts;\n}\nfunction propsForError(value) {\n    const props = Object.getOwnPropertyNames(value);\n    return `[${props.map((p) => `\"${p}\"`).join(', ')}]`;\n}\nfunction getName(value) {\n    return (getStringFromMaybeBuffer(value.name) ||\n        getStringFromMaybeBuffer(value.filename) ||\n        // For fs.ReadStream\n        getStringFromMaybeBuffer(value.path)?.split(/[\\\\/]/).pop());\n}\nconst getStringFromMaybeBuffer = (x) => {\n    if (typeof x === 'string')\n        return x;\n    if (typeof Buffer !== 'undefined' && x instanceof Buffer)\n        return String(x);\n    return undefined;\n};\nconst isAsyncIterableIterator = (value) => value != null && typeof value === 'object' && typeof value[Symbol.asyncIterator] === 'function';\nexport const isMultipartBody = (body) => body && typeof body === 'object' && body.body && body[Symbol.toStringTag] === 'MultipartBody';\n/**\n * Returns a multipart/form-data request if any part of the given request body contains a File / Blob value.\n * Otherwise returns the request as is.\n */\nexport const maybeMultipartFormRequestOptions = async (opts) => {\n    if (!hasUploadableValue(opts.body))\n        return opts;\n    const form = await createForm(opts.body);\n    return getMultipartRequestOptions(form, opts);\n};\nexport const multipartFormRequestOptions = async (opts) => {\n    const form = await createForm(opts.body);\n    return getMultipartRequestOptions(form, opts);\n};\nexport const createForm = async (body) => {\n    const form = new FormData();\n    await Promise.all(Object.entries(body || {}).map(([key, value]) => addFormValue(form, key, value)));\n    return form;\n};\nconst hasUploadableValue = (value) => {\n    if (isUploadable(value))\n        return true;\n    if (Array.isArray(value))\n        return value.some(hasUploadableValue);\n    if (value && typeof value === 'object') {\n        for (const k in value) {\n            if (hasUploadableValue(value[k]))\n                return true;\n        }\n    }\n    return false;\n};\nconst addFormValue = async (form, key, value) => {\n    if (value === undefined)\n        return;\n    if (value == null) {\n        throw new TypeError(`Received null for \"${key}\"; to pass null in FormData, you must use the string 'null'`);\n    }\n    // TODO: make nested formats configurable\n    if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n        form.append(key, String(value));\n    }\n    else if (isUploadable(value)) {\n        const file = await toFile(value);\n        form.append(key, file);\n    }\n    else if (Array.isArray(value)) {\n        await Promise.all(value.map((entry) => addFormValue(form, key + '[]', entry)));\n    }\n    else if (typeof value === 'object') {\n        await Promise.all(Object.entries(value).map(([name, prop]) => addFormValue(form, `${key}[${name}]`, prop)));\n    }\n    else {\n        throw new TypeError(`Invalid value given to form, expected a string, number, boolean, object, Array, File or Blob but got ${value} instead`);\n    }\n};\n//# sourceMappingURL=uploads.mjs.map",
  "import { FormData, File, getMultipartRequestOptions, isFsReadStream, } from \"./_shims/index.mjs\";\nexport { fileFromPath } from \"./_shims/index.mjs\";\nexport const isResponseLike = (value) => value != null &&\n    typeof value === 'object' &&\n    typeof value.url === 'string' &&\n    typeof value.blob === 'function';\nexport const isFileLike = (value) => value != null &&\n    typeof value === 'object' &&\n    typeof value.name === 'string' &&\n    typeof value.lastModified === 'number' &&\n    isBlobLike(value);\n/**\n * The BlobLike type omits arrayBuffer() because @types/node-fetch@^2.6.4 lacks it; but this check\n * adds the arrayBuffer() method type because it is available and used at runtime\n */\nexport const isBlobLike = (value) => value != null &&\n    typeof value === 'object' &&\n    typeof value.size === 'number' &&\n    typeof value.type === 'string' &&\n    typeof value.text === 'function' &&\n    typeof value.slice === 'function' &&\n    typeof value.arrayBuffer === 'function';\nexport const isUploadable = (value) => {\n    return isFileLike(value) || isResponseLike(value) || isFsReadStream(value);\n};\n/**\n * Helper for creating a {@link File} to pass to an SDK upload method from a variety of different data formats\n * @param value the raw content of the file.  Can be an {@link Uploadable}, {@link BlobLikePart}, or {@link AsyncIterable} of {@link BlobLikePart}s\n * @param {string=} name the name of the file. If omitted, toFile will try to determine a file name from bits if possible\n * @param {Object=} options additional properties\n * @param {string=} options.type the MIME type of the content\n * @param {number=} options.lastModified the last modified timestamp\n * @returns a {@link File} with the given properties\n */\nexport async function toFile(value, name, options = {}) {\n    // If it's a promise, resolve it.\n    value = await value;\n    if (isResponseLike(value)) {\n        const blob = await value.blob();\n        name || (name = new URL(value.url).pathname.split(/[\\\\/]/).pop() ?? 'unknown_file');\n        return new File([blob], name, options);\n    }\n    const bits = await getBytes(value);\n    name || (name = getName(value) ?? 'unknown_file');\n    if (!options.type) {\n        const type = bits[0]?.type;\n        if (typeof type === 'string') {\n            options = { ...options, type };\n        }\n    }\n    return new File(bits, name, options);\n}\nasync function getBytes(value) {\n    let parts = [];\n    if (typeof value === 'string' ||\n        ArrayBuffer.isView(value) || // includes Uint8Array, Buffer, etc.\n        value instanceof ArrayBuffer) {\n        parts.push(value);\n    }\n    else if (isBlobLike(value)) {\n        parts.push(await value.arrayBuffer());\n    }\n    else if (isAsyncIterableIterator(value) // includes Readable, ReadableStream, etc.\n    ) {\n        for await (const chunk of value) {\n            parts.push(chunk); // TODO, consider validating?\n        }\n    }\n    else {\n        throw new Error(`Unexpected data type: ${typeof value}; constructor: ${value?.constructor?.name}; props: ${propsForError(value)}`);\n    }\n    return parts;\n}\nfunction propsForError(value) {\n    const props = Object.getOwnPropertyNames(value);\n    return `[${props.map((p) => `\"${p}\"`).join(', ')}]`;\n}\nfunction getName(value) {\n    return (getStringFromMaybeBuffer(value.name) ||\n        getStringFromMaybeBuffer(value.filename) ||\n        // For fs.ReadStream\n        getStringFromMaybeBuffer(value.path)?.split(/[\\\\/]/).pop());\n}\nconst getStringFromMaybeBuffer = (x) => {\n    if (typeof x === 'string')\n        return x;\n    if (typeof Buffer !== 'undefined' && x instanceof Buffer)\n        return String(x);\n    return undefined;\n};\nconst isAsyncIterableIterator = (value) => value != null && typeof value === 'object' && typeof value[Symbol.asyncIterator] === 'function';\nexport const isMultipartBody = (body) => body && typeof body === 'object' && body.body && body[Symbol.toStringTag] === 'MultipartBody';\n/**\n * Returns a multipart/form-data request if any part of the given request body contains a File / Blob value.\n * Otherwise returns the request as is.\n */\nexport const maybeMultipartFormRequestOptions = async (opts) => {\n    if (!hasUploadableValue(opts.body))\n        return opts;\n    const form = await createForm(opts.body);\n    return getMultipartRequestOptions(form, opts);\n};\nexport const multipartFormRequestOptions = async (opts) => {\n    const form = await createForm(opts.body);\n    return getMultipartRequestOptions(form, opts);\n};\nexport const createForm = async (body) => {\n    const form = new FormData();\n    await Promise.all(Object.entries(body || {}).map(([key, value]) => addFormValue(form, key, value)));\n    return form;\n};\nconst hasUploadableValue = (value) => {\n    if (isUploadable(value))\n        return true;\n    if (Array.isArray(value))\n        return value.some(hasUploadableValue);\n    if (value && typeof value === 'object') {\n        for (const k in value) {\n            if (hasUploadableValue(value[k]))\n                return true;\n        }\n    }\n    return false;\n};\nconst addFormValue = async (form, key, value) => {\n    if (value === undefined)\n        return;\n    if (value == null) {\n        throw new TypeError(`Received null for \"${key}\"; to pass null in FormData, you must use the string 'null'`);\n    }\n    // TODO: make nested formats configurable\n    if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n        form.append(key, String(value));\n    }\n    else if (isUploadable(value)) {\n        const file = await toFile(value);\n        form.append(key, file);\n    }\n    else if (Array.isArray(value)) {\n        await Promise.all(value.map((entry) => addFormValue(form, key + '[]', entry)));\n    }\n    else if (typeof value === 'object') {\n        await Promise.all(Object.entries(value).map(([name, prop]) => addFormValue(form, `${key}[${name}]`, prop)));\n    }\n    else {\n        throw new TypeError(`Invalid value given to form, expected a string, number, boolean, object, Array, File or Blob but got ${value} instead`);\n    }\n};\n//# sourceMappingURL=uploads.mjs.map",
  "import { FormData, File, getMultipartRequestOptions, isFsReadStream, } from \"./_shims/index.mjs\";\nexport { fileFromPath } from \"./_shims/index.mjs\";\nexport const isResponseLike = (value) => value != null &&\n    typeof value === 'object' &&\n    typeof value.url === 'string' &&\n    typeof value.blob === 'function';\nexport const isFileLike = (value) => value != null &&\n    typeof value === 'object' &&\n    typeof value.name === 'string' &&\n    typeof value.lastModified === 'number' &&\n    isBlobLike(value);\n/**\n * The BlobLike type omits arrayBuffer() because @types/node-fetch@^2.6.4 lacks it; but this check\n * adds the arrayBuffer() method type because it is available and used at runtime\n */\nexport const isBlobLike = (value) => value != null &&\n    typeof value === 'object' &&\n    typeof value.size === 'number' &&\n    typeof value.type === 'string' &&\n    typeof value.text === 'function' &&\n    typeof value.slice === 'function' &&\n    typeof value.arrayBuffer === 'function';\nexport const isUploadable = (value) => {\n    return isFileLike(value) || isResponseLike(value) || isFsReadStream(value);\n};\n/**\n * Helper for creating a {@link File} to pass to an SDK upload method from a variety of different data formats\n * @param value the raw content of the file.  Can be an {@link Uploadable}, {@link BlobLikePart}, or {@link AsyncIterable} of {@link BlobLikePart}s\n * @param {string=} name the name of the file. If omitted, toFile will try to determine a file name from bits if possible\n * @param {Object=} options additional properties\n * @param {string=} options.type the MIME type of the content\n * @param {number=} options.lastModified the last modified timestamp\n * @returns a {@link File} with the given properties\n */\nexport async function toFile(value, name, options = {}) {\n    // If it's a promise, resolve it.\n    value = await value;\n    if (isResponseLike(value)) {\n        const blob = await value.blob();\n        name || (name = new URL(value.url).pathname.split(/[\\\\/]/).pop() ?? 'unknown_file');\n        return new File([blob], name, options);\n    }\n    const bits = await getBytes(value);\n    name || (name = getName(value) ?? 'unknown_file');\n    if (!options.type) {\n        const type = bits[0]?.type;\n        if (typeof type === 'string') {\n            options = { ...options, type };\n        }\n    }\n    return new File(bits, name, options);\n}\nasync function getBytes(value) {\n    let parts = [];\n    if (typeof value === 'string' ||\n        ArrayBuffer.isView(value) || // includes Uint8Array, Buffer, etc.\n        value instanceof ArrayBuffer) {\n        parts.push(value);\n    }\n    else if (isBlobLike(value)) {\n        parts.push(await value.arrayBuffer());\n    }\n    else if (isAsyncIterableIterator(value) // includes Readable, ReadableStream, etc.\n    ) {\n        for await (const chunk of value) {\n            parts.push(chunk); // TODO, consider validating?\n        }\n    }\n    else {\n        throw new Error(`Unexpected data type: ${typeof value}; constructor: ${value?.constructor?.name}; props: ${propsForError(value)}`);\n    }\n    return parts;\n}\nfunction propsForError(value) {\n    const props = Object.getOwnPropertyNames(value);\n    return `[${props.map((p) => `\"${p}\"`).join(', ')}]`;\n}\nfunction getName(value) {\n    return (getStringFromMaybeBuffer(value.name) ||\n        getStringFromMaybeBuffer(value.filename) ||\n        // For fs.ReadStream\n        getStringFromMaybeBuffer(value.path)?.split(/[\\\\/]/).pop());\n}\nconst getStringFromMaybeBuffer = (x) => {\n    if (typeof x === 'string')\n        return x;\n    if (typeof Buffer !== 'undefined' && x instanceof Buffer)\n        return String(x);\n    return undefined;\n};\nconst isAsyncIterableIterator = (value) => value != null && typeof value === 'object' && typeof value[Symbol.asyncIterator] === 'function';\nexport const isMultipartBody = (body) => body && typeof body === 'object' && body.body && body[Symbol.toStringTag] === 'MultipartBody';\n/**\n * Returns a multipart/form-data request if any part of the given request body contains a File / Blob value.\n * Otherwise returns the request as is.\n */\nexport const maybeMultipartFormRequestOptions = async (opts) => {\n    if (!hasUploadableValue(opts.body))\n        return opts;\n    const form = await createForm(opts.body);\n    return getMultipartRequestOptions(form, opts);\n};\nexport const multipartFormRequestOptions = async (opts) => {\n    const form = await createForm(opts.body);\n    return getMultipartRequestOptions(form, opts);\n};\nexport const createForm = async (body) => {\n    const form = new FormData();\n    await Promise.all(Object.entries(body || {}).map(([key, value]) => addFormValue(form, key, value)));\n    return form;\n};\nconst hasUploadableValue = (value) => {\n    if (isUploadable(value))\n        return true;\n    if (Array.isArray(value))\n        return value.some(hasUploadableValue);\n    if (value && typeof value === 'object') {\n        for (const k in value) {\n            if (hasUploadableValue(value[k]))\n                return true;\n        }\n    }\n    return false;\n};\nconst addFormValue = async (form, key, value) => {\n    if (value === undefined)\n        return;\n    if (value == null) {\n        throw new TypeError(`Received null for \"${key}\"; to pass null in FormData, you must use the string 'null'`);\n    }\n    // TODO: make nested formats configurable\n    if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n        form.append(key, String(value));\n    }\n    else if (isUploadable(value)) {\n        const file = await toFile(value);\n        form.append(key, file);\n    }\n    else if (Array.isArray(value)) {\n        await Promise.all(value.map((entry) => addFormValue(form, key + '[]', entry)));\n    }\n    else if (typeof value === 'object') {\n        await Promise.all(Object.entries(value).map(([name, prop]) => addFormValue(form, `${key}[${name}]`, prop)));\n    }\n    else {\n        throw new TypeError(`Invalid value given to form, expected a string, number, boolean, object, Array, File or Blob but got ${value} instead`);\n    }\n};\n//# sourceMappingURL=uploads.mjs.map",
  "var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _AbstractPage_client;\nimport { VERSION } from \"./version.mjs\";\nimport { Stream } from \"./streaming.mjs\";\nimport { OpenAIError, APIError, APIConnectionError, APIConnectionTimeoutError, APIUserAbortError, } from \"./error.mjs\";\nimport { kind as shimsKind, getDefaultAgent, fetch, } from \"./_shims/index.mjs\";\nimport { isMultipartBody } from \"./uploads.mjs\";\nexport { maybeMultipartFormRequestOptions, multipartFormRequestOptions, createForm, } from \"./uploads.mjs\";\nasync function defaultParseResponse(props) {\n    const { response } = props;\n    if (props.options.stream) {\n        debug('response', response.status, response.url, response.headers, response.body);\n        // Note: there is an invariant here that isn't represented in the type system\n        // that if you set `stream: true` the response type must also be `Stream<T>`\n        return Stream.fromSSEResponse(response, props.controller);\n    }\n    // fetch refuses to read the body when the status code is 204.\n    if (response.status === 204) {\n        return null;\n    }\n    if (props.options.__binaryResponse) {\n        return response;\n    }\n    const contentType = response.headers.get('content-type');\n    if (contentType?.includes('application/json')) {\n        const json = await response.json();\n        debug('response', response.status, response.url, response.headers, json);\n        return json;\n    }\n    const text = await response.text();\n    debug('response', response.status, response.url, response.headers, text);\n    // TODO handle blob, arraybuffer, other content types, etc.\n    return text;\n}\n/**\n * A subclass of `Promise` providing additional helper methods\n * for interacting with the SDK.\n */\nexport class APIPromise extends Promise {\n    constructor(responsePromise, parseResponse = defaultParseResponse) {\n        super((resolve) => {\n            // this is maybe a bit weird but this has to be a no-op to not implicitly\n            // parse the response body; instead .then, .catch, .finally are overridden\n            // to parse the response\n            resolve(null);\n        });\n        this.responsePromise = responsePromise;\n        this.parseResponse = parseResponse;\n    }\n    _thenUnwrap(transform) {\n        return new APIPromise(this.responsePromise, async (props) => transform(await this.parseResponse(props)));\n    }\n    /**\n     * Gets the raw `Response` instance instead of parsing the response\n     * data.\n     *\n     * If you want to parse the response body but still get the `Response`\n     * instance, you can use {@link withResponse()}.\n     *\n     * 👋 Getting the wrong TypeScript type for `Response`?\n     * Try setting `\"moduleResolution\": \"NodeNext\"` if you can,\n     * or add one of these imports before your first `import … from 'openai'`:\n     * - `import 'openai/shims/node'` (if you're running on Node)\n     * - `import 'openai/shims/web'` (otherwise)\n     */\n    asResponse() {\n        return this.responsePromise.then((p) => p.response);\n    }\n    /**\n     * Gets the parsed response data and the raw `Response` instance.\n     *\n     * If you just want to get the raw `Response` instance without parsing it,\n     * you can use {@link asResponse()}.\n     *\n     *\n     * 👋 Getting the wrong TypeScript type for `Response`?\n     * Try setting `\"moduleResolution\": \"NodeNext\"` if you can,\n     * or add one of these imports before your first `import … from 'openai'`:\n     * - `import 'openai/shims/node'` (if you're running on Node)\n     * - `import 'openai/shims/web'` (otherwise)\n     */\n    async withResponse() {\n        const [data, response] = await Promise.all([this.parse(), this.asResponse()]);\n        return { data, response };\n    }\n    parse() {\n        if (!this.parsedPromise) {\n            this.parsedPromise = this.responsePromise.then(this.parseResponse);\n        }\n        return this.parsedPromise;\n    }\n    then(onfulfilled, onrejected) {\n        return this.parse().then(onfulfilled, onrejected);\n    }\n    catch(onrejected) {\n        return this.parse().catch(onrejected);\n    }\n    finally(onfinally) {\n        return this.parse().finally(onfinally);\n    }\n}\nexport class APIClient {\n    constructor({ baseURL, maxRetries = 2, timeout = 600000, // 10 minutes\n    httpAgent, fetch: overridenFetch, }) {\n        this.baseURL = baseURL;\n        this.maxRetries = validatePositiveInteger('maxRetries', maxRetries);\n        this.timeout = validatePositiveInteger('timeout', timeout);\n        this.httpAgent = httpAgent;\n        this.fetch = overridenFetch ?? fetch;\n    }\n    authHeaders(opts) {\n        return {};\n    }\n    /**\n     * Override this to add your own default headers, for example:\n     *\n     *  {\n     *    ...super.defaultHeaders(),\n     *    Authorization: 'Bearer 123',\n     *  }\n     */\n    defaultHeaders(opts) {\n        return {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n            'User-Agent': this.getUserAgent(),\n            ...getPlatformHeaders(),\n            ...this.authHeaders(opts),\n        };\n    }\n    /**\n     * Override this to add your own headers validation:\n     */\n    validateHeaders(headers, customHeaders) { }\n    defaultIdempotencyKey() {\n        return `stainless-node-retry-${uuid4()}`;\n    }\n    get(path, opts) {\n        return this.methodRequest('get', path, opts);\n    }\n    post(path, opts) {\n        return this.methodRequest('post', path, opts);\n    }\n    patch(path, opts) {\n        return this.methodRequest('patch', path, opts);\n    }\n    put(path, opts) {\n        return this.methodRequest('put', path, opts);\n    }\n    delete(path, opts) {\n        return this.methodRequest('delete', path, opts);\n    }\n    methodRequest(method, path, opts) {\n        return this.request(Promise.resolve(opts).then((opts) => ({ method, path, ...opts })));\n    }\n    getAPIList(path, Page, opts) {\n        return this.requestAPIList(Page, { method: 'get', path, ...opts });\n    }\n    calculateContentLength(body) {\n        if (typeof body === 'string') {\n            if (typeof Buffer !== 'undefined') {\n                return Buffer.byteLength(body, 'utf8').toString();\n            }\n            if (typeof TextEncoder !== 'undefined') {\n                const encoder = new TextEncoder();\n                const encoded = encoder.encode(body);\n                return encoded.length.toString();\n            }\n        }\n        return null;\n    }\n    buildRequest(options) {\n        const { method, path, query, headers: headers = {} } = options;\n        const body = isMultipartBody(options.body) ? options.body.body\n            : options.body ? JSON.stringify(options.body, null, 2)\n                : null;\n        const contentLength = this.calculateContentLength(body);\n        const url = this.buildURL(path, query);\n        if ('timeout' in options)\n            validatePositiveInteger('timeout', options.timeout);\n        const timeout = options.timeout ?? this.timeout;\n        const httpAgent = options.httpAgent ?? this.httpAgent ?? getDefaultAgent(url);\n        const minAgentTimeout = timeout + 1000;\n        if (typeof httpAgent?.options?.timeout === 'number' &&\n            minAgentTimeout > (httpAgent.options.timeout ?? 0)) {\n            // Allow any given request to bump our agent active socket timeout.\n            // This may seem strange, but leaking active sockets should be rare and not particularly problematic,\n            // and without mutating agent we would need to create more of them.\n            // This tradeoff optimizes for performance.\n            httpAgent.options.timeout = minAgentTimeout;\n        }\n        if (this.idempotencyHeader && method !== 'get') {\n            if (!options.idempotencyKey)\n                options.idempotencyKey = this.defaultIdempotencyKey();\n            headers[this.idempotencyHeader] = options.idempotencyKey;\n        }\n        const reqHeaders = {\n            ...(contentLength && { 'Content-Length': contentLength }),\n            ...this.defaultHeaders(options),\n            ...headers,\n        };\n        // let builtin fetch set the Content-Type for multipart bodies\n        if (isMultipartBody(options.body) && shimsKind !== 'node') {\n            delete reqHeaders['Content-Type'];\n        }\n        // Strip any headers being explicitly omitted with null\n        Object.keys(reqHeaders).forEach((key) => reqHeaders[key] === null && delete reqHeaders[key]);\n        const req = {\n            method,\n            ...(body && { body: body }),\n            headers: reqHeaders,\n            ...(httpAgent && { agent: httpAgent }),\n            // @ts-ignore node-fetch uses a custom AbortSignal type that is\n            // not compatible with standard web types\n            signal: options.signal ?? null,\n        };\n        this.validateHeaders(reqHeaders, headers);\n        return { req, url, timeout };\n    }\n    /**\n     * Used as a callback for mutating the given `RequestInit` object.\n     *\n     * This is useful for cases where you want to add certain headers based off of\n     * the request properties, e.g. `method` or `url`.\n     */\n    async prepareRequest(request, { url, options }) { }\n    parseHeaders(headers) {\n        return (!headers ? {}\n            : Symbol.iterator in headers ?\n                Object.fromEntries(Array.from(headers).map((header) => [...header]))\n                : { ...headers });\n    }\n    makeStatusError(status, error, message, headers) {\n        return APIError.generate(status, error, message, headers);\n    }\n    request(options, remainingRetries = null) {\n        return new APIPromise(this.makeRequest(options, remainingRetries));\n    }\n    async makeRequest(optionsInput, retriesRemaining) {\n        const options = await optionsInput;\n        if (retriesRemaining == null) {\n            retriesRemaining = options.maxRetries ?? this.maxRetries;\n        }\n        const { req, url, timeout } = this.buildRequest(options);\n        await this.prepareRequest(req, { url, options });\n        debug('request', url, options, req.headers);\n        if (options.signal?.aborted) {\n            throw new APIUserAbortError();\n        }\n        const controller = new AbortController();\n        const response = await this.fetchWithTimeout(url, req, timeout, controller).catch(castToError);\n        if (response instanceof Error) {\n            if (options.signal?.aborted) {\n                throw new APIUserAbortError();\n            }\n            if (retriesRemaining) {\n                return this.retryRequest(options, retriesRemaining);\n            }\n            if (response.name === 'AbortError') {\n                throw new APIConnectionTimeoutError();\n            }\n            throw new APIConnectionError({ cause: response });\n        }\n        const responseHeaders = createResponseHeaders(response.headers);\n        if (!response.ok) {\n            if (retriesRemaining && this.shouldRetry(response)) {\n                return this.retryRequest(options, retriesRemaining, responseHeaders);\n            }\n            const errText = await response.text().catch((e) => castToError(e).message);\n            const errJSON = safeJSON(errText);\n            const errMessage = errJSON ? undefined : errText;\n            debug('response', response.status, url, responseHeaders, errMessage);\n            const err = this.makeStatusError(response.status, errJSON, errMessage, responseHeaders);\n            throw err;\n        }\n        return { response, options, controller };\n    }\n    requestAPIList(Page, options) {\n        const request = this.makeRequest(options, null);\n        return new PagePromise(this, request, Page);\n    }\n    buildURL(path, query) {\n        const url = isAbsoluteURL(path) ?\n            new URL(path)\n            : new URL(this.baseURL + (this.baseURL.endsWith('/') && path.startsWith('/') ? path.slice(1) : path));\n        const defaultQuery = this.defaultQuery();\n        if (!isEmptyObj(defaultQuery)) {\n            query = { ...defaultQuery, ...query };\n        }\n        if (query) {\n            url.search = this.stringifyQuery(query);\n        }\n        return url.toString();\n    }\n    stringifyQuery(query) {\n        return Object.entries(query)\n            .filter(([_, value]) => typeof value !== 'undefined')\n            .map(([key, value]) => {\n            if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n                return `${encodeURIComponent(key)}=${encodeURIComponent(value)}`;\n            }\n            if (value === null) {\n                return `${encodeURIComponent(key)}=`;\n            }\n            throw new OpenAIError(`Cannot stringify type ${typeof value}; Expected string, number, boolean, or null. If you need to pass nested query parameters, you can manually encode them, e.g. { query: { 'foo[key1]': value1, 'foo[key2]': value2 } }, and please open a GitHub issue requesting better support for your use case.`);\n        })\n            .join('&');\n    }\n    async fetchWithTimeout(url, init, ms, controller) {\n        const { signal, ...options } = init || {};\n        if (signal)\n            signal.addEventListener('abort', () => controller.abort());\n        const timeout = setTimeout(() => controller.abort(), ms);\n        return (this.getRequestClient()\n            // use undefined this binding; fetch errors if bound to something else in browser/cloudflare\n            .fetch.call(undefined, url, { signal: controller.signal, ...options })\n            .finally(() => {\n            clearTimeout(timeout);\n        }));\n    }\n    getRequestClient() {\n        return { fetch: this.fetch };\n    }\n    shouldRetry(response) {\n        // Note this is not a standard header.\n        const shouldRetryHeader = response.headers.get('x-should-retry');\n        // If the server explicitly says whether or not to retry, obey.\n        if (shouldRetryHeader === 'true')\n            return true;\n        if (shouldRetryHeader === 'false')\n            return false;\n        // Retry on request timeouts.\n        if (response.status === 408)\n            return true;\n        // Retry on lock timeouts.\n        if (response.status === 409)\n            return true;\n        // Retry on rate limits.\n        if (response.status === 429)\n            return true;\n        // Retry internal errors.\n        if (response.status >= 500)\n            return true;\n        return false;\n    }\n    async retryRequest(options, retriesRemaining, responseHeaders) {\n        // About the Retry-After header: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After\n        let timeoutMillis;\n        const retryAfterHeader = responseHeaders?.['retry-after'];\n        if (retryAfterHeader) {\n            const timeoutSeconds = parseInt(retryAfterHeader);\n            if (!Number.isNaN(timeoutSeconds)) {\n                timeoutMillis = timeoutSeconds * 1000;\n            }\n            else {\n                timeoutMillis = Date.parse(retryAfterHeader) - Date.now();\n            }\n        }\n        // If the API asks us to wait a certain amount of time (and it's a reasonable amount),\n        // just do what it says, but otherwise calculate a default\n        if (!timeoutMillis ||\n            !Number.isInteger(timeoutMillis) ||\n            timeoutMillis <= 0 ||\n            timeoutMillis > 60 * 1000) {\n            const maxRetries = options.maxRetries ?? this.maxRetries;\n            timeoutMillis = this.calculateDefaultRetryTimeoutMillis(retriesRemaining, maxRetries);\n        }\n        await sleep(timeoutMillis);\n        return this.makeRequest(options, retriesRemaining - 1);\n    }\n    calculateDefaultRetryTimeoutMillis(retriesRemaining, maxRetries) {\n        const initialRetryDelay = 0.5;\n        const maxRetryDelay = 8.0;\n        const numRetries = maxRetries - retriesRemaining;\n        // Apply exponential backoff, but not more than the max.\n        const sleepSeconds = Math.min(initialRetryDelay * Math.pow(2, numRetries), maxRetryDelay);\n        // Apply some jitter, take up to at most 25 percent of the retry time.\n        const jitter = 1 - Math.random() * 0.25;\n        return sleepSeconds * jitter * 1000;\n    }\n    getUserAgent() {\n        return `${this.constructor.name}/JS ${VERSION}`;\n    }\n}\nexport class AbstractPage {\n    constructor(client, response, body, options) {\n        _AbstractPage_client.set(this, void 0);\n        __classPrivateFieldSet(this, _AbstractPage_client, client, \"f\");\n        this.options = options;\n        this.response = response;\n        this.body = body;\n    }\n    hasNextPage() {\n        const items = this.getPaginatedItems();\n        if (!items.length)\n            return false;\n        return this.nextPageInfo() != null;\n    }\n    async getNextPage() {\n        const nextInfo = this.nextPageInfo();\n        if (!nextInfo) {\n            throw new OpenAIError('No next page expected; please check `.hasNextPage()` before calling `.getNextPage()`.');\n        }\n        const nextOptions = { ...this.options };\n        if ('params' in nextInfo) {\n            nextOptions.query = { ...nextOptions.query, ...nextInfo.params };\n        }\n        else if ('url' in nextInfo) {\n            const params = [...Object.entries(nextOptions.query || {}), ...nextInfo.url.searchParams.entries()];\n            for (const [key, value] of params) {\n                nextInfo.url.searchParams.set(key, value);\n            }\n            nextOptions.query = undefined;\n            nextOptions.path = nextInfo.url.toString();\n        }\n        return await __classPrivateFieldGet(this, _AbstractPage_client, \"f\").requestAPIList(this.constructor, nextOptions);\n    }\n    async *iterPages() {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        let page = this;\n        yield page;\n        while (page.hasNextPage()) {\n            page = await page.getNextPage();\n            yield page;\n        }\n    }\n    async *[(_AbstractPage_client = new WeakMap(), Symbol.asyncIterator)]() {\n        for await (const page of this.iterPages()) {\n            for (const item of page.getPaginatedItems()) {\n                yield item;\n            }\n        }\n    }\n}\n/**\n * This subclass of Promise will resolve to an instantiated Page once the request completes.\n *\n * It also implements AsyncIterable to allow auto-paginating iteration on an unawaited list call, eg:\n *\n *    for await (const item of client.items.list()) {\n *      console.log(item)\n *    }\n */\nexport class PagePromise extends APIPromise {\n    constructor(client, request, Page) {\n        super(request, async (props) => new Page(client, props.response, await defaultParseResponse(props), props.options));\n    }\n    /**\n     * Allow auto-paginating iteration on an unawaited list call, eg:\n     *\n     *    for await (const item of client.items.list()) {\n     *      console.log(item)\n     *    }\n     */\n    async *[Symbol.asyncIterator]() {\n        const page = await this;\n        for await (const item of page) {\n            yield item;\n        }\n    }\n}\nexport const createResponseHeaders = (headers) => {\n    return new Proxy(Object.fromEntries(\n    // @ts-ignore\n    headers.entries()), {\n        get(target, name) {\n            const key = name.toString();\n            return target[key.toLowerCase()] || target[key];\n        },\n    });\n};\n// This is required so that we can determine if a given object matches the RequestOptions\n// type at runtime. While this requires duplication, it is enforced by the TypeScript\n// compiler such that any missing / extraneous keys will cause an error.\nconst requestOptionsKeys = {\n    method: true,\n    path: true,\n    query: true,\n    body: true,\n    headers: true,\n    maxRetries: true,\n    stream: true,\n    timeout: true,\n    httpAgent: true,\n    signal: true,\n    idempotencyKey: true,\n    __binaryResponse: true,\n};\nexport const isRequestOptions = (obj) => {\n    return (typeof obj === 'object' &&\n        obj !== null &&\n        !isEmptyObj(obj) &&\n        Object.keys(obj).every((k) => hasOwn(requestOptionsKeys, k)));\n};\nconst getPlatformProperties = () => {\n    if (typeof Deno !== 'undefined' && Deno.build != null) {\n        return {\n            'X-Stainless-Lang': 'js',\n            'X-Stainless-Package-Version': VERSION,\n            'X-Stainless-OS': normalizePlatform(Deno.build.os),\n            'X-Stainless-Arch': normalizeArch(Deno.build.arch),\n            'X-Stainless-Runtime': 'deno',\n            'X-Stainless-Runtime-Version': Deno.version,\n        };\n    }\n    if (typeof EdgeRuntime !== 'undefined') {\n        return {\n            'X-Stainless-Lang': 'js',\n            'X-Stainless-Package-Version': VERSION,\n            'X-Stainless-OS': 'Unknown',\n            'X-Stainless-Arch': `other:${EdgeRuntime}`,\n            'X-Stainless-Runtime': 'edge',\n            'X-Stainless-Runtime-Version': process.version,\n        };\n    }\n    // Check if Node.js\n    if (Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]') {\n        return {\n            'X-Stainless-Lang': 'js',\n            'X-Stainless-Package-Version': VERSION,\n            'X-Stainless-OS': normalizePlatform(process.platform),\n            'X-Stainless-Arch': normalizeArch(process.arch),\n            'X-Stainless-Runtime': 'node',\n            'X-Stainless-Runtime-Version': process.version,\n        };\n    }\n    const browserInfo = getBrowserInfo();\n    if (browserInfo) {\n        return {\n            'X-Stainless-Lang': 'js',\n            'X-Stainless-Package-Version': VERSION,\n            'X-Stainless-OS': 'Unknown',\n            'X-Stainless-Arch': 'unknown',\n            'X-Stainless-Runtime': `browser:${browserInfo.browser}`,\n            'X-Stainless-Runtime-Version': browserInfo.version,\n        };\n    }\n    // TODO add support for Cloudflare workers, etc.\n    return {\n        'X-Stainless-Lang': 'js',\n        'X-Stainless-Package-Version': VERSION,\n        'X-Stainless-OS': 'Unknown',\n        'X-Stainless-Arch': 'unknown',\n        'X-Stainless-Runtime': 'unknown',\n        'X-Stainless-Runtime-Version': 'unknown',\n    };\n};\n// Note: modified from https://github.com/JS-DevTools/host-environment/blob/b1ab79ecde37db5d6e163c050e54fe7d287d7c92/src/isomorphic.browser.ts\nfunction getBrowserInfo() {\n    if (typeof navigator === 'undefined' || !navigator) {\n        return null;\n    }\n    // NOTE: The order matters here!\n    const browserPatterns = [\n        { key: 'edge', pattern: /Edge(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n        { key: 'ie', pattern: /MSIE(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n        { key: 'ie', pattern: /Trident(?:.*rv\\:(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n        { key: 'chrome', pattern: /Chrome(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n        { key: 'firefox', pattern: /Firefox(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n        { key: 'safari', pattern: /(?:Version\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?(?:\\W+Mobile\\S*)?\\W+Safari/ },\n    ];\n    // Find the FIRST matching browser\n    for (const { key, pattern } of browserPatterns) {\n        const match = pattern.exec(navigator.userAgent);\n        if (match) {\n            const major = match[1] || 0;\n            const minor = match[2] || 0;\n            const patch = match[3] || 0;\n            return { browser: key, version: `${major}.${minor}.${patch}` };\n        }\n    }\n    return null;\n}\nconst normalizeArch = (arch) => {\n    // Node docs:\n    // - https://nodejs.org/api/process.html#processarch\n    // Deno docs:\n    // - https://doc.deno.land/deno/stable/~/Deno.build\n    if (arch === 'x32')\n        return 'x32';\n    if (arch === 'x86_64' || arch === 'x64')\n        return 'x64';\n    if (arch === 'arm')\n        return 'arm';\n    if (arch === 'aarch64' || arch === 'arm64')\n        return 'arm64';\n    if (arch)\n        return `other:${arch}`;\n    return 'unknown';\n};\nconst normalizePlatform = (platform) => {\n    // Node platforms:\n    // - https://nodejs.org/api/process.html#processplatform\n    // Deno platforms:\n    // - https://doc.deno.land/deno/stable/~/Deno.build\n    // - https://github.com/denoland/deno/issues/14799\n    platform = platform.toLowerCase();\n    // NOTE: this iOS check is untested and may not work\n    // Node does not work natively on IOS, there is a fork at\n    // https://github.com/nodejs-mobile/nodejs-mobile\n    // however it is unknown at the time of writing how to detect if it is running\n    if (platform.includes('ios'))\n        return 'iOS';\n    if (platform === 'android')\n        return 'Android';\n    if (platform === 'darwin')\n        return 'MacOS';\n    if (platform === 'win32')\n        return 'Windows';\n    if (platform === 'freebsd')\n        return 'FreeBSD';\n    if (platform === 'openbsd')\n        return 'OpenBSD';\n    if (platform === 'linux')\n        return 'Linux';\n    if (platform)\n        return `Other:${platform}`;\n    return 'Unknown';\n};\nlet _platformHeaders;\nconst getPlatformHeaders = () => {\n    return (_platformHeaders ?? (_platformHeaders = getPlatformProperties()));\n};\nexport const safeJSON = (text) => {\n    try {\n        return JSON.parse(text);\n    }\n    catch (err) {\n        return undefined;\n    }\n};\n// https://stackoverflow.com/a/19709846\nconst startsWithSchemeRegexp = new RegExp('^(?:[a-z]+:)?//', 'i');\nconst isAbsoluteURL = (url) => {\n    return startsWithSchemeRegexp.test(url);\n};\nexport const sleep = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\nconst validatePositiveInteger = (name, n) => {\n    if (typeof n !== 'number' || !Number.isInteger(n)) {\n        throw new OpenAIError(`${name} must be an integer`);\n    }\n    if (n < 0) {\n        throw new OpenAIError(`${name} must be a positive integer`);\n    }\n    return n;\n};\nexport const castToError = (err) => {\n    if (err instanceof Error)\n        return err;\n    return new Error(err);\n};\nexport const ensurePresent = (value) => {\n    if (value == null)\n        throw new OpenAIError(`Expected a value to be given but received ${value} instead.`);\n    return value;\n};\n/**\n * Read an environment variable.\n *\n * Will return undefined if the environment variable doesn't exist or cannot be accessed.\n */\nexport const readEnv = (env) => {\n    if (typeof process !== 'undefined') {\n        return process.env?.[env] ?? undefined;\n    }\n    if (typeof Deno !== 'undefined') {\n        return Deno.env?.get?.(env);\n    }\n    return undefined;\n};\nexport const coerceInteger = (value) => {\n    if (typeof value === 'number')\n        return Math.round(value);\n    if (typeof value === 'string')\n        return parseInt(value, 10);\n    throw new OpenAIError(`Could not coerce ${value} (type: ${typeof value}) into a number`);\n};\nexport const coerceFloat = (value) => {\n    if (typeof value === 'number')\n        return value;\n    if (typeof value === 'string')\n        return parseFloat(value);\n    throw new OpenAIError(`Could not coerce ${value} (type: ${typeof value}) into a number`);\n};\nexport const coerceBoolean = (value) => {\n    if (typeof value === 'boolean')\n        return value;\n    if (typeof value === 'string')\n        return value === 'true';\n    return Boolean(value);\n};\nexport const maybeCoerceInteger = (value) => {\n    if (value === undefined) {\n        return undefined;\n    }\n    return coerceInteger(value);\n};\nexport const maybeCoerceFloat = (value) => {\n    if (value === undefined) {\n        return undefined;\n    }\n    return coerceFloat(value);\n};\nexport const maybeCoerceBoolean = (value) => {\n    if (value === undefined) {\n        return undefined;\n    }\n    return coerceBoolean(value);\n};\n// https://stackoverflow.com/a/34491287\nexport function isEmptyObj(obj) {\n    if (!obj)\n        return true;\n    for (const _k in obj)\n        return false;\n    return true;\n}\n// https://eslint.org/docs/latest/rules/no-prototype-builtins\nexport function hasOwn(obj, key) {\n    return Object.prototype.hasOwnProperty.call(obj, key);\n}\nexport function debug(action, ...args) {\n    if (typeof process !== 'undefined' && process.env['DEBUG'] === 'true') {\n        console.log(`OpenAI:DEBUG:${action}`, ...args);\n    }\n}\n/**\n * https://stackoverflow.com/a/2117523\n */\nconst uuid4 = () => {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n        const r = (Math.random() * 16) | 0;\n        const v = c === 'x' ? r : (r & 0x3) | 0x8;\n        return v.toString(16);\n    });\n};\nexport const isRunningInBrowser = () => {\n    return (\n    // @ts-ignore\n    typeof window !== 'undefined' &&\n        // @ts-ignore\n        typeof window.document !== 'undefined' &&\n        // @ts-ignore\n        typeof navigator !== 'undefined');\n};\nexport const isHeadersProtocol = (headers) => {\n    return typeof headers?.get === 'function';\n};\nexport const getRequiredHeader = (headers, header) => {\n    const lowerCasedHeader = header.toLowerCase();\n    if (isHeadersProtocol(headers)) {\n        // to deal with the case where the header looks like Stainless-Event-Id\n        const intercapsHeader = header[0]?.toUpperCase() +\n            header.substring(1).replace(/([^\\w])(\\w)/g, (_m, g1, g2) => g1 + g2.toUpperCase());\n        for (const key of [header, lowerCasedHeader, header.toUpperCase(), intercapsHeader]) {\n            const value = headers.get(key);\n            if (value) {\n                return value;\n            }\n        }\n    }\n    for (const [key, value] of Object.entries(headers)) {\n        if (key.toLowerCase() === lowerCasedHeader) {\n            if (Array.isArray(value)) {\n                if (value.length <= 1)\n                    return value[0];\n                console.warn(`Received ${value.length} entries for the ${header} header, using the first entry.`);\n                return value[0];\n            }\n            return value;\n        }\n    }\n    throw new Error(`Could not find ${header} header`);\n};\n/**\n * Encodes a string to Base64 format.\n */\nexport const toBase64 = (str) => {\n    if (!str)\n        return '';\n    if (typeof Buffer !== 'undefined') {\n        return Buffer.from(str).toString('base64');\n    }\n    if (typeof btoa !== 'undefined') {\n        return btoa(str);\n    }\n    throw new OpenAIError('Cannot generate b64 string; Expected `Buffer` or `btoa` to be defined');\n};\n//# sourceMappingURL=core.mjs.map",
  "var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _AbstractPage_client;\nimport { VERSION } from \"./version.mjs\";\nimport { Stream } from \"./streaming.mjs\";\nimport { OpenAIError, APIError, APIConnectionError, APIConnectionTimeoutError, APIUserAbortError, } from \"./error.mjs\";\nimport { kind as shimsKind, getDefaultAgent, fetch, } from \"./_shims/index.mjs\";\nimport { isMultipartBody } from \"./uploads.mjs\";\nexport { maybeMultipartFormRequestOptions, multipartFormRequestOptions, createForm, } from \"./uploads.mjs\";\nasync function defaultParseResponse(props) {\n    const { response } = props;\n    if (props.options.stream) {\n        debug('response', response.status, response.url, response.headers, response.body);\n        // Note: there is an invariant here that isn't represented in the type system\n        // that if you set `stream: true` the response type must also be `Stream<T>`\n        return Stream.fromSSEResponse(response, props.controller);\n    }\n    // fetch refuses to read the body when the status code is 204.\n    if (response.status === 204) {\n        return null;\n    }\n    if (props.options.__binaryResponse) {\n        return response;\n    }\n    const contentType = response.headers.get('content-type');\n    if (contentType?.includes('application/json')) {\n        const json = await response.json();\n        debug('response', response.status, response.url, response.headers, json);\n        return json;\n    }\n    const text = await response.text();\n    debug('response', response.status, response.url, response.headers, text);\n    // TODO handle blob, arraybuffer, other content types, etc.\n    return text;\n}\n/**\n * A subclass of `Promise` providing additional helper methods\n * for interacting with the SDK.\n */\nexport class APIPromise extends Promise {\n    constructor(responsePromise, parseResponse = defaultParseResponse) {\n        super((resolve) => {\n            // this is maybe a bit weird but this has to be a no-op to not implicitly\n            // parse the response body; instead .then, .catch, .finally are overridden\n            // to parse the response\n            resolve(null);\n        });\n        this.responsePromise = responsePromise;\n        this.parseResponse = parseResponse;\n    }\n    _thenUnwrap(transform) {\n        return new APIPromise(this.responsePromise, async (props) => transform(await this.parseResponse(props)));\n    }\n    /**\n     * Gets the raw `Response` instance instead of parsing the response\n     * data.\n     *\n     * If you want to parse the response body but still get the `Response`\n     * instance, you can use {@link withResponse()}.\n     *\n     * 👋 Getting the wrong TypeScript type for `Response`?\n     * Try setting `\"moduleResolution\": \"NodeNext\"` if you can,\n     * or add one of these imports before your first `import … from 'openai'`:\n     * - `import 'openai/shims/node'` (if you're running on Node)\n     * - `import 'openai/shims/web'` (otherwise)\n     */\n    asResponse() {\n        return this.responsePromise.then((p) => p.response);\n    }\n    /**\n     * Gets the parsed response data and the raw `Response` instance.\n     *\n     * If you just want to get the raw `Response` instance without parsing it,\n     * you can use {@link asResponse()}.\n     *\n     *\n     * 👋 Getting the wrong TypeScript type for `Response`?\n     * Try setting `\"moduleResolution\": \"NodeNext\"` if you can,\n     * or add one of these imports before your first `import … from 'openai'`:\n     * - `import 'openai/shims/node'` (if you're running on Node)\n     * - `import 'openai/shims/web'` (otherwise)\n     */\n    async withResponse() {\n        const [data, response] = await Promise.all([this.parse(), this.asResponse()]);\n        return { data, response };\n    }\n    parse() {\n        if (!this.parsedPromise) {\n            this.parsedPromise = this.responsePromise.then(this.parseResponse);\n        }\n        return this.parsedPromise;\n    }\n    then(onfulfilled, onrejected) {\n        return this.parse().then(onfulfilled, onrejected);\n    }\n    catch(onrejected) {\n        return this.parse().catch(onrejected);\n    }\n    finally(onfinally) {\n        return this.parse().finally(onfinally);\n    }\n}\nexport class APIClient {\n    constructor({ baseURL, maxRetries = 2, timeout = 600000, // 10 minutes\n    httpAgent, fetch: overridenFetch, }) {\n        this.baseURL = baseURL;\n        this.maxRetries = validatePositiveInteger('maxRetries', maxRetries);\n        this.timeout = validatePositiveInteger('timeout', timeout);\n        this.httpAgent = httpAgent;\n        this.fetch = overridenFetch ?? fetch;\n    }\n    authHeaders(opts) {\n        return {};\n    }\n    /**\n     * Override this to add your own default headers, for example:\n     *\n     *  {\n     *    ...super.defaultHeaders(),\n     *    Authorization: 'Bearer 123',\n     *  }\n     */\n    defaultHeaders(opts) {\n        return {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n            'User-Agent': this.getUserAgent(),\n            ...getPlatformHeaders(),\n            ...this.authHeaders(opts),\n        };\n    }\n    /**\n     * Override this to add your own headers validation:\n     */\n    validateHeaders(headers, customHeaders) { }\n    defaultIdempotencyKey() {\n        return `stainless-node-retry-${uuid4()}`;\n    }\n    get(path, opts) {\n        return this.methodRequest('get', path, opts);\n    }\n    post(path, opts) {\n        return this.methodRequest('post', path, opts);\n    }\n    patch(path, opts) {\n        return this.methodRequest('patch', path, opts);\n    }\n    put(path, opts) {\n        return this.methodRequest('put', path, opts);\n    }\n    delete(path, opts) {\n        return this.methodRequest('delete', path, opts);\n    }\n    methodRequest(method, path, opts) {\n        return this.request(Promise.resolve(opts).then((opts) => ({ method, path, ...opts })));\n    }\n    getAPIList(path, Page, opts) {\n        return this.requestAPIList(Page, { method: 'get', path, ...opts });\n    }\n    calculateContentLength(body) {\n        if (typeof body === 'string') {\n            if (typeof Buffer !== 'undefined') {\n                return Buffer.byteLength(body, 'utf8').toString();\n            }\n            if (typeof TextEncoder !== 'undefined') {\n                const encoder = new TextEncoder();\n                const encoded = encoder.encode(body);\n                return encoded.length.toString();\n            }\n        }\n        return null;\n    }\n    buildRequest(options) {\n        const { method, path, query, headers: headers = {} } = options;\n        const body = isMultipartBody(options.body) ? options.body.body\n            : options.body ? JSON.stringify(options.body, null, 2)\n                : null;\n        const contentLength = this.calculateContentLength(body);\n        const url = this.buildURL(path, query);\n        if ('timeout' in options)\n            validatePositiveInteger('timeout', options.timeout);\n        const timeout = options.timeout ?? this.timeout;\n        const httpAgent = options.httpAgent ?? this.httpAgent ?? getDefaultAgent(url);\n        const minAgentTimeout = timeout + 1000;\n        if (typeof httpAgent?.options?.timeout === 'number' &&\n            minAgentTimeout > (httpAgent.options.timeout ?? 0)) {\n            // Allow any given request to bump our agent active socket timeout.\n            // This may seem strange, but leaking active sockets should be rare and not particularly problematic,\n            // and without mutating agent we would need to create more of them.\n            // This tradeoff optimizes for performance.\n            httpAgent.options.timeout = minAgentTimeout;\n        }\n        if (this.idempotencyHeader && method !== 'get') {\n            if (!options.idempotencyKey)\n                options.idempotencyKey = this.defaultIdempotencyKey();\n            headers[this.idempotencyHeader] = options.idempotencyKey;\n        }\n        const reqHeaders = {\n            ...(contentLength && { 'Content-Length': contentLength }),\n            ...this.defaultHeaders(options),\n            ...headers,\n        };\n        // let builtin fetch set the Content-Type for multipart bodies\n        if (isMultipartBody(options.body) && shimsKind !== 'node') {\n            delete reqHeaders['Content-Type'];\n        }\n        // Strip any headers being explicitly omitted with null\n        Object.keys(reqHeaders).forEach((key) => reqHeaders[key] === null && delete reqHeaders[key]);\n        const req = {\n            method,\n            ...(body && { body: body }),\n            headers: reqHeaders,\n            ...(httpAgent && { agent: httpAgent }),\n            // @ts-ignore node-fetch uses a custom AbortSignal type that is\n            // not compatible with standard web types\n            signal: options.signal ?? null,\n        };\n        this.validateHeaders(reqHeaders, headers);\n        return { req, url, timeout };\n    }\n    /**\n     * Used as a callback for mutating the given `RequestInit` object.\n     *\n     * This is useful for cases where you want to add certain headers based off of\n     * the request properties, e.g. `method` or `url`.\n     */\n    async prepareRequest(request, { url, options }) { }\n    parseHeaders(headers) {\n        return (!headers ? {}\n            : Symbol.iterator in headers ?\n                Object.fromEntries(Array.from(headers).map((header) => [...header]))\n                : { ...headers });\n    }\n    makeStatusError(status, error, message, headers) {\n        return APIError.generate(status, error, message, headers);\n    }\n    request(options, remainingRetries = null) {\n        return new APIPromise(this.makeRequest(options, remainingRetries));\n    }\n    async makeRequest(optionsInput, retriesRemaining) {\n        const options = await optionsInput;\n        if (retriesRemaining == null) {\n            retriesRemaining = options.maxRetries ?? this.maxRetries;\n        }\n        const { req, url, timeout } = this.buildRequest(options);\n        await this.prepareRequest(req, { url, options });\n        debug('request', url, options, req.headers);\n        if (options.signal?.aborted) {\n            throw new APIUserAbortError();\n        }\n        const controller = new AbortController();\n        const response = await this.fetchWithTimeout(url, req, timeout, controller).catch(castToError);\n        if (response instanceof Error) {\n            if (options.signal?.aborted) {\n                throw new APIUserAbortError();\n            }\n            if (retriesRemaining) {\n                return this.retryRequest(options, retriesRemaining);\n            }\n            if (response.name === 'AbortError') {\n                throw new APIConnectionTimeoutError();\n            }\n            throw new APIConnectionError({ cause: response });\n        }\n        const responseHeaders = createResponseHeaders(response.headers);\n        if (!response.ok) {\n            if (retriesRemaining && this.shouldRetry(response)) {\n                return this.retryRequest(options, retriesRemaining, responseHeaders);\n            }\n            const errText = await response.text().catch((e) => castToError(e).message);\n            const errJSON = safeJSON(errText);\n            const errMessage = errJSON ? undefined : errText;\n            debug('response', response.status, url, responseHeaders, errMessage);\n            const err = this.makeStatusError(response.status, errJSON, errMessage, responseHeaders);\n            throw err;\n        }\n        return { response, options, controller };\n    }\n    requestAPIList(Page, options) {\n        const request = this.makeRequest(options, null);\n        return new PagePromise(this, request, Page);\n    }\n    buildURL(path, query) {\n        const url = isAbsoluteURL(path) ?\n            new URL(path)\n            : new URL(this.baseURL + (this.baseURL.endsWith('/') && path.startsWith('/') ? path.slice(1) : path));\n        const defaultQuery = this.defaultQuery();\n        if (!isEmptyObj(defaultQuery)) {\n            query = { ...defaultQuery, ...query };\n        }\n        if (query) {\n            url.search = this.stringifyQuery(query);\n        }\n        return url.toString();\n    }\n    stringifyQuery(query) {\n        return Object.entries(query)\n            .filter(([_, value]) => typeof value !== 'undefined')\n            .map(([key, value]) => {\n            if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n                return `${encodeURIComponent(key)}=${encodeURIComponent(value)}`;\n            }\n            if (value === null) {\n                return `${encodeURIComponent(key)}=`;\n            }\n            throw new OpenAIError(`Cannot stringify type ${typeof value}; Expected string, number, boolean, or null. If you need to pass nested query parameters, you can manually encode them, e.g. { query: { 'foo[key1]': value1, 'foo[key2]': value2 } }, and please open a GitHub issue requesting better support for your use case.`);\n        })\n            .join('&');\n    }\n    async fetchWithTimeout(url, init, ms, controller) {\n        const { signal, ...options } = init || {};\n        if (signal)\n            signal.addEventListener('abort', () => controller.abort());\n        const timeout = setTimeout(() => controller.abort(), ms);\n        return (this.getRequestClient()\n            // use undefined this binding; fetch errors if bound to something else in browser/cloudflare\n            .fetch.call(undefined, url, { signal: controller.signal, ...options })\n            .finally(() => {\n            clearTimeout(timeout);\n        }));\n    }\n    getRequestClient() {\n        return { fetch: this.fetch };\n    }\n    shouldRetry(response) {\n        // Note this is not a standard header.\n        const shouldRetryHeader = response.headers.get('x-should-retry');\n        // If the server explicitly says whether or not to retry, obey.\n        if (shouldRetryHeader === 'true')\n            return true;\n        if (shouldRetryHeader === 'false')\n            return false;\n        // Retry on request timeouts.\n        if (response.status === 408)\n            return true;\n        // Retry on lock timeouts.\n        if (response.status === 409)\n            return true;\n        // Retry on rate limits.\n        if (response.status === 429)\n            return true;\n        // Retry internal errors.\n        if (response.status >= 500)\n            return true;\n        return false;\n    }\n    async retryRequest(options, retriesRemaining, responseHeaders) {\n        // About the Retry-After header: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After\n        let timeoutMillis;\n        const retryAfterHeader = responseHeaders?.['retry-after'];\n        if (retryAfterHeader) {\n            const timeoutSeconds = parseInt(retryAfterHeader);\n            if (!Number.isNaN(timeoutSeconds)) {\n                timeoutMillis = timeoutSeconds * 1000;\n            }\n            else {\n                timeoutMillis = Date.parse(retryAfterHeader) - Date.now();\n            }\n        }\n        // If the API asks us to wait a certain amount of time (and it's a reasonable amount),\n        // just do what it says, but otherwise calculate a default\n        if (!timeoutMillis ||\n            !Number.isInteger(timeoutMillis) ||\n            timeoutMillis <= 0 ||\n            timeoutMillis > 60 * 1000) {\n            const maxRetries = options.maxRetries ?? this.maxRetries;\n            timeoutMillis = this.calculateDefaultRetryTimeoutMillis(retriesRemaining, maxRetries);\n        }\n        await sleep(timeoutMillis);\n        return this.makeRequest(options, retriesRemaining - 1);\n    }\n    calculateDefaultRetryTimeoutMillis(retriesRemaining, maxRetries) {\n        const initialRetryDelay = 0.5;\n        const maxRetryDelay = 8.0;\n        const numRetries = maxRetries - retriesRemaining;\n        // Apply exponential backoff, but not more than the max.\n        const sleepSeconds = Math.min(initialRetryDelay * Math.pow(2, numRetries), maxRetryDelay);\n        // Apply some jitter, take up to at most 25 percent of the retry time.\n        const jitter = 1 - Math.random() * 0.25;\n        return sleepSeconds * jitter * 1000;\n    }\n    getUserAgent() {\n        return `${this.constructor.name}/JS ${VERSION}`;\n    }\n}\nexport class AbstractPage {\n    constructor(client, response, body, options) {\n        _AbstractPage_client.set(this, void 0);\n        __classPrivateFieldSet(this, _AbstractPage_client, client, \"f\");\n        this.options = options;\n        this.response = response;\n        this.body = body;\n    }\n    hasNextPage() {\n        const items = this.getPaginatedItems();\n        if (!items.length)\n            return false;\n        return this.nextPageInfo() != null;\n    }\n    async getNextPage() {\n        const nextInfo = this.nextPageInfo();\n        if (!nextInfo) {\n            throw new OpenAIError('No next page expected; please check `.hasNextPage()` before calling `.getNextPage()`.');\n        }\n        const nextOptions = { ...this.options };\n        if ('params' in nextInfo) {\n            nextOptions.query = { ...nextOptions.query, ...nextInfo.params };\n        }\n        else if ('url' in nextInfo) {\n            const params = [...Object.entries(nextOptions.query || {}), ...nextInfo.url.searchParams.entries()];\n            for (const [key, value] of params) {\n                nextInfo.url.searchParams.set(key, value);\n            }\n            nextOptions.query = undefined;\n            nextOptions.path = nextInfo.url.toString();\n        }\n        return await __classPrivateFieldGet(this, _AbstractPage_client, \"f\").requestAPIList(this.constructor, nextOptions);\n    }\n    async *iterPages() {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        let page = this;\n        yield page;\n        while (page.hasNextPage()) {\n            page = await page.getNextPage();\n            yield page;\n        }\n    }\n    async *[(_AbstractPage_client = new WeakMap(), Symbol.asyncIterator)]() {\n        for await (const page of this.iterPages()) {\n            for (const item of page.getPaginatedItems()) {\n                yield item;\n            }\n        }\n    }\n}\n/**\n * This subclass of Promise will resolve to an instantiated Page once the request completes.\n *\n * It also implements AsyncIterable to allow auto-paginating iteration on an unawaited list call, eg:\n *\n *    for await (const item of client.items.list()) {\n *      console.log(item)\n *    }\n */\nexport class PagePromise extends APIPromise {\n    constructor(client, request, Page) {\n        super(request, async (props) => new Page(client, props.response, await defaultParseResponse(props), props.options));\n    }\n    /**\n     * Allow auto-paginating iteration on an unawaited list call, eg:\n     *\n     *    for await (const item of client.items.list()) {\n     *      console.log(item)\n     *    }\n     */\n    async *[Symbol.asyncIterator]() {\n        const page = await this;\n        for await (const item of page) {\n            yield item;\n        }\n    }\n}\nexport const createResponseHeaders = (headers) => {\n    return new Proxy(Object.fromEntries(\n    // @ts-ignore\n    headers.entries()), {\n        get(target, name) {\n            const key = name.toString();\n            return target[key.toLowerCase()] || target[key];\n        },\n    });\n};\n// This is required so that we can determine if a given object matches the RequestOptions\n// type at runtime. While this requires duplication, it is enforced by the TypeScript\n// compiler such that any missing / extraneous keys will cause an error.\nconst requestOptionsKeys = {\n    method: true,\n    path: true,\n    query: true,\n    body: true,\n    headers: true,\n    maxRetries: true,\n    stream: true,\n    timeout: true,\n    httpAgent: true,\n    signal: true,\n    idempotencyKey: true,\n    __binaryResponse: true,\n};\nexport const isRequestOptions = (obj) => {\n    return (typeof obj === 'object' &&\n        obj !== null &&\n        !isEmptyObj(obj) &&\n        Object.keys(obj).every((k) => hasOwn(requestOptionsKeys, k)));\n};\nconst getPlatformProperties = () => {\n    if (typeof Deno !== 'undefined' && Deno.build != null) {\n        return {\n            'X-Stainless-Lang': 'js',\n            'X-Stainless-Package-Version': VERSION,\n            'X-Stainless-OS': normalizePlatform(Deno.build.os),\n            'X-Stainless-Arch': normalizeArch(Deno.build.arch),\n            'X-Stainless-Runtime': 'deno',\n            'X-Stainless-Runtime-Version': Deno.version,\n        };\n    }\n    if (typeof EdgeRuntime !== 'undefined') {\n        return {\n            'X-Stainless-Lang': 'js',\n            'X-Stainless-Package-Version': VERSION,\n            'X-Stainless-OS': 'Unknown',\n            'X-Stainless-Arch': `other:${EdgeRuntime}`,\n            'X-Stainless-Runtime': 'edge',\n            'X-Stainless-Runtime-Version': process.version,\n        };\n    }\n    // Check if Node.js\n    if (Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]') {\n        return {\n            'X-Stainless-Lang': 'js',\n            'X-Stainless-Package-Version': VERSION,\n            'X-Stainless-OS': normalizePlatform(process.platform),\n            'X-Stainless-Arch': normalizeArch(process.arch),\n            'X-Stainless-Runtime': 'node',\n            'X-Stainless-Runtime-Version': process.version,\n        };\n    }\n    const browserInfo = getBrowserInfo();\n    if (browserInfo) {\n        return {\n            'X-Stainless-Lang': 'js',\n            'X-Stainless-Package-Version': VERSION,\n            'X-Stainless-OS': 'Unknown',\n            'X-Stainless-Arch': 'unknown',\n            'X-Stainless-Runtime': `browser:${browserInfo.browser}`,\n            'X-Stainless-Runtime-Version': browserInfo.version,\n        };\n    }\n    // TODO add support for Cloudflare workers, etc.\n    return {\n        'X-Stainless-Lang': 'js',\n        'X-Stainless-Package-Version': VERSION,\n        'X-Stainless-OS': 'Unknown',\n        'X-Stainless-Arch': 'unknown',\n        'X-Stainless-Runtime': 'unknown',\n        'X-Stainless-Runtime-Version': 'unknown',\n    };\n};\n// Note: modified from https://github.com/JS-DevTools/host-environment/blob/b1ab79ecde37db5d6e163c050e54fe7d287d7c92/src/isomorphic.browser.ts\nfunction getBrowserInfo() {\n    if (typeof navigator === 'undefined' || !navigator) {\n        return null;\n    }\n    // NOTE: The order matters here!\n    const browserPatterns = [\n        { key: 'edge', pattern: /Edge(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n        { key: 'ie', pattern: /MSIE(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n        { key: 'ie', pattern: /Trident(?:.*rv\\:(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n        { key: 'chrome', pattern: /Chrome(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n        { key: 'firefox', pattern: /Firefox(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n        { key: 'safari', pattern: /(?:Version\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?(?:\\W+Mobile\\S*)?\\W+Safari/ },\n    ];\n    // Find the FIRST matching browser\n    for (const { key, pattern } of browserPatterns) {\n        const match = pattern.exec(navigator.userAgent);\n        if (match) {\n            const major = match[1] || 0;\n            const minor = match[2] || 0;\n            const patch = match[3] || 0;\n            return { browser: key, version: `${major}.${minor}.${patch}` };\n        }\n    }\n    return null;\n}\nconst normalizeArch = (arch) => {\n    // Node docs:\n    // - https://nodejs.org/api/process.html#processarch\n    // Deno docs:\n    // - https://doc.deno.land/deno/stable/~/Deno.build\n    if (arch === 'x32')\n        return 'x32';\n    if (arch === 'x86_64' || arch === 'x64')\n        return 'x64';\n    if (arch === 'arm')\n        return 'arm';\n    if (arch === 'aarch64' || arch === 'arm64')\n        return 'arm64';\n    if (arch)\n        return `other:${arch}`;\n    return 'unknown';\n};\nconst normalizePlatform = (platform) => {\n    // Node platforms:\n    // - https://nodejs.org/api/process.html#processplatform\n    // Deno platforms:\n    // - https://doc.deno.land/deno/stable/~/Deno.build\n    // - https://github.com/denoland/deno/issues/14799\n    platform = platform.toLowerCase();\n    // NOTE: this iOS check is untested and may not work\n    // Node does not work natively on IOS, there is a fork at\n    // https://github.com/nodejs-mobile/nodejs-mobile\n    // however it is unknown at the time of writing how to detect if it is running\n    if (platform.includes('ios'))\n        return 'iOS';\n    if (platform === 'android')\n        return 'Android';\n    if (platform === 'darwin')\n        return 'MacOS';\n    if (platform === 'win32')\n        return 'Windows';\n    if (platform === 'freebsd')\n        return 'FreeBSD';\n    if (platform === 'openbsd')\n        return 'OpenBSD';\n    if (platform === 'linux')\n        return 'Linux';\n    if (platform)\n        return `Other:${platform}`;\n    return 'Unknown';\n};\nlet _platformHeaders;\nconst getPlatformHeaders = () => {\n    return (_platformHeaders ?? (_platformHeaders = getPlatformProperties()));\n};\nexport const safeJSON = (text) => {\n    try {\n        return JSON.parse(text);\n    }\n    catch (err) {\n        return undefined;\n    }\n};\n// https://stackoverflow.com/a/19709846\nconst startsWithSchemeRegexp = new RegExp('^(?:[a-z]+:)?//', 'i');\nconst isAbsoluteURL = (url) => {\n    return startsWithSchemeRegexp.test(url);\n};\nexport const sleep = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\nconst validatePositiveInteger = (name, n) => {\n    if (typeof n !== 'number' || !Number.isInteger(n)) {\n        throw new OpenAIError(`${name} must be an integer`);\n    }\n    if (n < 0) {\n        throw new OpenAIError(`${name} must be a positive integer`);\n    }\n    return n;\n};\nexport const castToError = (err) => {\n    if (err instanceof Error)\n        return err;\n    return new Error(err);\n};\nexport const ensurePresent = (value) => {\n    if (value == null)\n        throw new OpenAIError(`Expected a value to be given but received ${value} instead.`);\n    return value;\n};\n/**\n * Read an environment variable.\n *\n * Will return undefined if the environment variable doesn't exist or cannot be accessed.\n */\nexport const readEnv = (env) => {\n    if (typeof process !== 'undefined') {\n        return process.env?.[env] ?? undefined;\n    }\n    if (typeof Deno !== 'undefined') {\n        return Deno.env?.get?.(env);\n    }\n    return undefined;\n};\nexport const coerceInteger = (value) => {\n    if (typeof value === 'number')\n        return Math.round(value);\n    if (typeof value === 'string')\n        return parseInt(value, 10);\n    throw new OpenAIError(`Could not coerce ${value} (type: ${typeof value}) into a number`);\n};\nexport const coerceFloat = (value) => {\n    if (typeof value === 'number')\n        return value;\n    if (typeof value === 'string')\n        return parseFloat(value);\n    throw new OpenAIError(`Could not coerce ${value} (type: ${typeof value}) into a number`);\n};\nexport const coerceBoolean = (value) => {\n    if (typeof value === 'boolean')\n        return value;\n    if (typeof value === 'string')\n        return value === 'true';\n    return Boolean(value);\n};\nexport const maybeCoerceInteger = (value) => {\n    if (value === undefined) {\n        return undefined;\n    }\n    return coerceInteger(value);\n};\nexport const maybeCoerceFloat = (value) => {\n    if (value === undefined) {\n        return undefined;\n    }\n    return coerceFloat(value);\n};\nexport const maybeCoerceBoolean = (value) => {\n    if (value === undefined) {\n        return undefined;\n    }\n    return coerceBoolean(value);\n};\n// https://stackoverflow.com/a/34491287\nexport function isEmptyObj(obj) {\n    if (!obj)\n        return true;\n    for (const _k in obj)\n        return false;\n    return true;\n}\n// https://eslint.org/docs/latest/rules/no-prototype-builtins\nexport function hasOwn(obj, key) {\n    return Object.prototype.hasOwnProperty.call(obj, key);\n}\nexport function debug(action, ...args) {\n    if (typeof process !== 'undefined' && process.env['DEBUG'] === 'true') {\n        console.log(`OpenAI:DEBUG:${action}`, ...args);\n    }\n}\n/**\n * https://stackoverflow.com/a/2117523\n */\nconst uuid4 = () => {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n        const r = (Math.random() * 16) | 0;\n        const v = c === 'x' ? r : (r & 0x3) | 0x8;\n        return v.toString(16);\n    });\n};\nexport const isRunningInBrowser = () => {\n    return (\n    // @ts-ignore\n    typeof window !== 'undefined' &&\n        // @ts-ignore\n        typeof window.document !== 'undefined' &&\n        // @ts-ignore\n        typeof navigator !== 'undefined');\n};\nexport const isHeadersProtocol = (headers) => {\n    return typeof headers?.get === 'function';\n};\nexport const getRequiredHeader = (headers, header) => {\n    const lowerCasedHeader = header.toLowerCase();\n    if (isHeadersProtocol(headers)) {\n        // to deal with the case where the header looks like Stainless-Event-Id\n        const intercapsHeader = header[0]?.toUpperCase() +\n            header.substring(1).replace(/([^\\w])(\\w)/g, (_m, g1, g2) => g1 + g2.toUpperCase());\n        for (const key of [header, lowerCasedHeader, header.toUpperCase(), intercapsHeader]) {\n            const value = headers.get(key);\n            if (value) {\n                return value;\n            }\n        }\n    }\n    for (const [key, value] of Object.entries(headers)) {\n        if (key.toLowerCase() === lowerCasedHeader) {\n            if (Array.isArray(value)) {\n                if (value.length <= 1)\n                    return value[0];\n                console.warn(`Received ${value.length} entries for the ${header} header, using the first entry.`);\n                return value[0];\n            }\n            return value;\n        }\n    }\n    throw new Error(`Could not find ${header} header`);\n};\n/**\n * Encodes a string to Base64 format.\n */\nexport const toBase64 = (str) => {\n    if (!str)\n        return '';\n    if (typeof Buffer !== 'undefined') {\n        return Buffer.from(str).toString('base64');\n    }\n    if (typeof btoa !== 'undefined') {\n        return btoa(str);\n    }\n    throw new OpenAIError('Cannot generate b64 string; Expected `Buffer` or `btoa` to be defined');\n};\n//# sourceMappingURL=core.mjs.map",
  "var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _AbstractPage_client;\nimport { VERSION } from \"./version.mjs\";\nimport { Stream } from \"./streaming.mjs\";\nimport { OpenAIError, APIError, APIConnectionError, APIConnectionTimeoutError, APIUserAbortError, } from \"./error.mjs\";\nimport { kind as shimsKind, getDefaultAgent, fetch, } from \"./_shims/index.mjs\";\nimport { isMultipartBody } from \"./uploads.mjs\";\nexport { maybeMultipartFormRequestOptions, multipartFormRequestOptions, createForm, } from \"./uploads.mjs\";\nasync function defaultParseResponse(props) {\n    const { response } = props;\n    if (props.options.stream) {\n        debug('response', response.status, response.url, response.headers, response.body);\n        // Note: there is an invariant here that isn't represented in the type system\n        // that if you set `stream: true` the response type must also be `Stream<T>`\n        return Stream.fromSSEResponse(response, props.controller);\n    }\n    // fetch refuses to read the body when the status code is 204.\n    if (response.status === 204) {\n        return null;\n    }\n    if (props.options.__binaryResponse) {\n        return response;\n    }\n    const contentType = response.headers.get('content-type');\n    if (contentType?.includes('application/json')) {\n        const json = await response.json();\n        debug('response', response.status, response.url, response.headers, json);\n        return json;\n    }\n    const text = await response.text();\n    debug('response', response.status, response.url, response.headers, text);\n    // TODO handle blob, arraybuffer, other content types, etc.\n    return text;\n}\n/**\n * A subclass of `Promise` providing additional helper methods\n * for interacting with the SDK.\n */\nexport class APIPromise extends Promise {\n    constructor(responsePromise, parseResponse = defaultParseResponse) {\n        super((resolve) => {\n            // this is maybe a bit weird but this has to be a no-op to not implicitly\n            // parse the response body; instead .then, .catch, .finally are overridden\n            // to parse the response\n            resolve(null);\n        });\n        this.responsePromise = responsePromise;\n        this.parseResponse = parseResponse;\n    }\n    _thenUnwrap(transform) {\n        return new APIPromise(this.responsePromise, async (props) => transform(await this.parseResponse(props)));\n    }\n    /**\n     * Gets the raw `Response` instance instead of parsing the response\n     * data.\n     *\n     * If you want to parse the response body but still get the `Response`\n     * instance, you can use {@link withResponse()}.\n     *\n     * 👋 Getting the wrong TypeScript type for `Response`?\n     * Try setting `\"moduleResolution\": \"NodeNext\"` if you can,\n     * or add one of these imports before your first `import … from 'openai'`:\n     * - `import 'openai/shims/node'` (if you're running on Node)\n     * - `import 'openai/shims/web'` (otherwise)\n     */\n    asResponse() {\n        return this.responsePromise.then((p) => p.response);\n    }\n    /**\n     * Gets the parsed response data and the raw `Response` instance.\n     *\n     * If you just want to get the raw `Response` instance without parsing it,\n     * you can use {@link asResponse()}.\n     *\n     *\n     * 👋 Getting the wrong TypeScript type for `Response`?\n     * Try setting `\"moduleResolution\": \"NodeNext\"` if you can,\n     * or add one of these imports before your first `import … from 'openai'`:\n     * - `import 'openai/shims/node'` (if you're running on Node)\n     * - `import 'openai/shims/web'` (otherwise)\n     */\n    async withResponse() {\n        const [data, response] = await Promise.all([this.parse(), this.asResponse()]);\n        return { data, response };\n    }\n    parse() {\n        if (!this.parsedPromise) {\n            this.parsedPromise = this.responsePromise.then(this.parseResponse);\n        }\n        return this.parsedPromise;\n    }\n    then(onfulfilled, onrejected) {\n        return this.parse().then(onfulfilled, onrejected);\n    }\n    catch(onrejected) {\n        return this.parse().catch(onrejected);\n    }\n    finally(onfinally) {\n        return this.parse().finally(onfinally);\n    }\n}\nexport class APIClient {\n    constructor({ baseURL, maxRetries = 2, timeout = 600000, // 10 minutes\n    httpAgent, fetch: overridenFetch, }) {\n        this.baseURL = baseURL;\n        this.maxRetries = validatePositiveInteger('maxRetries', maxRetries);\n        this.timeout = validatePositiveInteger('timeout', timeout);\n        this.httpAgent = httpAgent;\n        this.fetch = overridenFetch ?? fetch;\n    }\n    authHeaders(opts) {\n        return {};\n    }\n    /**\n     * Override this to add your own default headers, for example:\n     *\n     *  {\n     *    ...super.defaultHeaders(),\n     *    Authorization: 'Bearer 123',\n     *  }\n     */\n    defaultHeaders(opts) {\n        return {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n            'User-Agent': this.getUserAgent(),\n            ...getPlatformHeaders(),\n            ...this.authHeaders(opts),\n        };\n    }\n    /**\n     * Override this to add your own headers validation:\n     */\n    validateHeaders(headers, customHeaders) { }\n    defaultIdempotencyKey() {\n        return `stainless-node-retry-${uuid4()}`;\n    }\n    get(path, opts) {\n        return this.methodRequest('get', path, opts);\n    }\n    post(path, opts) {\n        return this.methodRequest('post', path, opts);\n    }\n    patch(path, opts) {\n        return this.methodRequest('patch', path, opts);\n    }\n    put(path, opts) {\n        return this.methodRequest('put', path, opts);\n    }\n    delete(path, opts) {\n        return this.methodRequest('delete', path, opts);\n    }\n    methodRequest(method, path, opts) {\n        return this.request(Promise.resolve(opts).then((opts) => ({ method, path, ...opts })));\n    }\n    getAPIList(path, Page, opts) {\n        return this.requestAPIList(Page, { method: 'get', path, ...opts });\n    }\n    calculateContentLength(body) {\n        if (typeof body === 'string') {\n            if (typeof Buffer !== 'undefined') {\n                return Buffer.byteLength(body, 'utf8').toString();\n            }\n            if (typeof TextEncoder !== 'undefined') {\n                const encoder = new TextEncoder();\n                const encoded = encoder.encode(body);\n                return encoded.length.toString();\n            }\n        }\n        return null;\n    }\n    buildRequest(options) {\n        const { method, path, query, headers: headers = {} } = options;\n        const body = isMultipartBody(options.body) ? options.body.body\n            : options.body ? JSON.stringify(options.body, null, 2)\n                : null;\n        const contentLength = this.calculateContentLength(body);\n        const url = this.buildURL(path, query);\n        if ('timeout' in options)\n            validatePositiveInteger('timeout', options.timeout);\n        const timeout = options.timeout ?? this.timeout;\n        const httpAgent = options.httpAgent ?? this.httpAgent ?? getDefaultAgent(url);\n        const minAgentTimeout = timeout + 1000;\n        if (typeof httpAgent?.options?.timeout === 'number' &&\n            minAgentTimeout > (httpAgent.options.timeout ?? 0)) {\n            // Allow any given request to bump our agent active socket timeout.\n            // This may seem strange, but leaking active sockets should be rare and not particularly problematic,\n            // and without mutating agent we would need to create more of them.\n            // This tradeoff optimizes for performance.\n            httpAgent.options.timeout = minAgentTimeout;\n        }\n        if (this.idempotencyHeader && method !== 'get') {\n            if (!options.idempotencyKey)\n                options.idempotencyKey = this.defaultIdempotencyKey();\n            headers[this.idempotencyHeader] = options.idempotencyKey;\n        }\n        const reqHeaders = {\n            ...(contentLength && { 'Content-Length': contentLength }),\n            ...this.defaultHeaders(options),\n            ...headers,\n        };\n        // let builtin fetch set the Content-Type for multipart bodies\n        if (isMultipartBody(options.body) && shimsKind !== 'node') {\n            delete reqHeaders['Content-Type'];\n        }\n        // Strip any headers being explicitly omitted with null\n        Object.keys(reqHeaders).forEach((key) => reqHeaders[key] === null && delete reqHeaders[key]);\n        const req = {\n            method,\n            ...(body && { body: body }),\n            headers: reqHeaders,\n            ...(httpAgent && { agent: httpAgent }),\n            // @ts-ignore node-fetch uses a custom AbortSignal type that is\n            // not compatible with standard web types\n            signal: options.signal ?? null,\n        };\n        this.validateHeaders(reqHeaders, headers);\n        return { req, url, timeout };\n    }\n    /**\n     * Used as a callback for mutating the given `RequestInit` object.\n     *\n     * This is useful for cases where you want to add certain headers based off of\n     * the request properties, e.g. `method` or `url`.\n     */\n    async prepareRequest(request, { url, options }) { }\n    parseHeaders(headers) {\n        return (!headers ? {}\n            : Symbol.iterator in headers ?\n                Object.fromEntries(Array.from(headers).map((header) => [...header]))\n                : { ...headers });\n    }\n    makeStatusError(status, error, message, headers) {\n        return APIError.generate(status, error, message, headers);\n    }\n    request(options, remainingRetries = null) {\n        return new APIPromise(this.makeRequest(options, remainingRetries));\n    }\n    async makeRequest(optionsInput, retriesRemaining) {\n        const options = await optionsInput;\n        if (retriesRemaining == null) {\n            retriesRemaining = options.maxRetries ?? this.maxRetries;\n        }\n        const { req, url, timeout } = this.buildRequest(options);\n        await this.prepareRequest(req, { url, options });\n        debug('request', url, options, req.headers);\n        if (options.signal?.aborted) {\n            throw new APIUserAbortError();\n        }\n        const controller = new AbortController();\n        const response = await this.fetchWithTimeout(url, req, timeout, controller).catch(castToError);\n        if (response instanceof Error) {\n            if (options.signal?.aborted) {\n                throw new APIUserAbortError();\n            }\n            if (retriesRemaining) {\n                return this.retryRequest(options, retriesRemaining);\n            }\n            if (response.name === 'AbortError') {\n                throw new APIConnectionTimeoutError();\n            }\n            throw new APIConnectionError({ cause: response });\n        }\n        const responseHeaders = createResponseHeaders(response.headers);\n        if (!response.ok) {\n            if (retriesRemaining && this.shouldRetry(response)) {\n                return this.retryRequest(options, retriesRemaining, responseHeaders);\n            }\n            const errText = await response.text().catch((e) => castToError(e).message);\n            const errJSON = safeJSON(errText);\n            const errMessage = errJSON ? undefined : errText;\n            debug('response', response.status, url, responseHeaders, errMessage);\n            const err = this.makeStatusError(response.status, errJSON, errMessage, responseHeaders);\n            throw err;\n        }\n        return { response, options, controller };\n    }\n    requestAPIList(Page, options) {\n        const request = this.makeRequest(options, null);\n        return new PagePromise(this, request, Page);\n    }\n    buildURL(path, query) {\n        const url = isAbsoluteURL(path) ?\n            new URL(path)\n            : new URL(this.baseURL + (this.baseURL.endsWith('/') && path.startsWith('/') ? path.slice(1) : path));\n        const defaultQuery = this.defaultQuery();\n        if (!isEmptyObj(defaultQuery)) {\n            query = { ...defaultQuery, ...query };\n        }\n        if (query) {\n            url.search = this.stringifyQuery(query);\n        }\n        return url.toString();\n    }\n    stringifyQuery(query) {\n        return Object.entries(query)\n            .filter(([_, value]) => typeof value !== 'undefined')\n            .map(([key, value]) => {\n            if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n                return `${encodeURIComponent(key)}=${encodeURIComponent(value)}`;\n            }\n            if (value === null) {\n                return `${encodeURIComponent(key)}=`;\n            }\n            throw new OpenAIError(`Cannot stringify type ${typeof value}; Expected string, number, boolean, or null. If you need to pass nested query parameters, you can manually encode them, e.g. { query: { 'foo[key1]': value1, 'foo[key2]': value2 } }, and please open a GitHub issue requesting better support for your use case.`);\n        })\n            .join('&');\n    }\n    async fetchWithTimeout(url, init, ms, controller) {\n        const { signal, ...options } = init || {};\n        if (signal)\n            signal.addEventListener('abort', () => controller.abort());\n        const timeout = setTimeout(() => controller.abort(), ms);\n        return (this.getRequestClient()\n            // use undefined this binding; fetch errors if bound to something else in browser/cloudflare\n            .fetch.call(undefined, url, { signal: controller.signal, ...options })\n            .finally(() => {\n            clearTimeout(timeout);\n        }));\n    }\n    getRequestClient() {\n        return { fetch: this.fetch };\n    }\n    shouldRetry(response) {\n        // Note this is not a standard header.\n        const shouldRetryHeader = response.headers.get('x-should-retry');\n        // If the server explicitly says whether or not to retry, obey.\n        if (shouldRetryHeader === 'true')\n            return true;\n        if (shouldRetryHeader === 'false')\n            return false;\n        // Retry on request timeouts.\n        if (response.status === 408)\n            return true;\n        // Retry on lock timeouts.\n        if (response.status === 409)\n            return true;\n        // Retry on rate limits.\n        if (response.status === 429)\n            return true;\n        // Retry internal errors.\n        if (response.status >= 500)\n            return true;\n        return false;\n    }\n    async retryRequest(options, retriesRemaining, responseHeaders) {\n        // About the Retry-After header: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After\n        let timeoutMillis;\n        const retryAfterHeader = responseHeaders?.['retry-after'];\n        if (retryAfterHeader) {\n            const timeoutSeconds = parseInt(retryAfterHeader);\n            if (!Number.isNaN(timeoutSeconds)) {\n                timeoutMillis = timeoutSeconds * 1000;\n            }\n            else {\n                timeoutMillis = Date.parse(retryAfterHeader) - Date.now();\n            }\n        }\n        // If the API asks us to wait a certain amount of time (and it's a reasonable amount),\n        // just do what it says, but otherwise calculate a default\n        if (!timeoutMillis ||\n            !Number.isInteger(timeoutMillis) ||\n            timeoutMillis <= 0 ||\n            timeoutMillis > 60 * 1000) {\n            const maxRetries = options.maxRetries ?? this.maxRetries;\n            timeoutMillis = this.calculateDefaultRetryTimeoutMillis(retriesRemaining, maxRetries);\n        }\n        await sleep(timeoutMillis);\n        return this.makeRequest(options, retriesRemaining - 1);\n    }\n    calculateDefaultRetryTimeoutMillis(retriesRemaining, maxRetries) {\n        const initialRetryDelay = 0.5;\n        const maxRetryDelay = 8.0;\n        const numRetries = maxRetries - retriesRemaining;\n        // Apply exponential backoff, but not more than the max.\n        const sleepSeconds = Math.min(initialRetryDelay * Math.pow(2, numRetries), maxRetryDelay);\n        // Apply some jitter, take up to at most 25 percent of the retry time.\n        const jitter = 1 - Math.random() * 0.25;\n        return sleepSeconds * jitter * 1000;\n    }\n    getUserAgent() {\n        return `${this.constructor.name}/JS ${VERSION}`;\n    }\n}\nexport class AbstractPage {\n    constructor(client, response, body, options) {\n        _AbstractPage_client.set(this, void 0);\n        __classPrivateFieldSet(this, _AbstractPage_client, client, \"f\");\n        this.options = options;\n        this.response = response;\n        this.body = body;\n    }\n    hasNextPage() {\n        const items = this.getPaginatedItems();\n        if (!items.length)\n            return false;\n        return this.nextPageInfo() != null;\n    }\n    async getNextPage() {\n        const nextInfo = this.nextPageInfo();\n        if (!nextInfo) {\n            throw new OpenAIError('No next page expected; please check `.hasNextPage()` before calling `.getNextPage()`.');\n        }\n        const nextOptions = { ...this.options };\n        if ('params' in nextInfo) {\n            nextOptions.query = { ...nextOptions.query, ...nextInfo.params };\n        }\n        else if ('url' in nextInfo) {\n            const params = [...Object.entries(nextOptions.query || {}), ...nextInfo.url.searchParams.entries()];\n            for (const [key, value] of params) {\n                nextInfo.url.searchParams.set(key, value);\n            }\n            nextOptions.query = undefined;\n            nextOptions.path = nextInfo.url.toString();\n        }\n        return await __classPrivateFieldGet(this, _AbstractPage_client, \"f\").requestAPIList(this.constructor, nextOptions);\n    }\n    async *iterPages() {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        let page = this;\n        yield page;\n        while (page.hasNextPage()) {\n            page = await page.getNextPage();\n            yield page;\n        }\n    }\n    async *[(_AbstractPage_client = new WeakMap(), Symbol.asyncIterator)]() {\n        for await (const page of this.iterPages()) {\n            for (const item of page.getPaginatedItems()) {\n                yield item;\n            }\n        }\n    }\n}\n/**\n * This subclass of Promise will resolve to an instantiated Page once the request completes.\n *\n * It also implements AsyncIterable to allow auto-paginating iteration on an unawaited list call, eg:\n *\n *    for await (const item of client.items.list()) {\n *      console.log(item)\n *    }\n */\nexport class PagePromise extends APIPromise {\n    constructor(client, request, Page) {\n        super(request, async (props) => new Page(client, props.response, await defaultParseResponse(props), props.options));\n    }\n    /**\n     * Allow auto-paginating iteration on an unawaited list call, eg:\n     *\n     *    for await (const item of client.items.list()) {\n     *      console.log(item)\n     *    }\n     */\n    async *[Symbol.asyncIterator]() {\n        const page = await this;\n        for await (const item of page) {\n            yield item;\n        }\n    }\n}\nexport const createResponseHeaders = (headers) => {\n    return new Proxy(Object.fromEntries(\n    // @ts-ignore\n    headers.entries()), {\n        get(target, name) {\n            const key = name.toString();\n            return target[key.toLowerCase()] || target[key];\n        },\n    });\n};\n// This is required so that we can determine if a given object matches the RequestOptions\n// type at runtime. While this requires duplication, it is enforced by the TypeScript\n// compiler such that any missing / extraneous keys will cause an error.\nconst requestOptionsKeys = {\n    method: true,\n    path: true,\n    query: true,\n    body: true,\n    headers: true,\n    maxRetries: true,\n    stream: true,\n    timeout: true,\n    httpAgent: true,\n    signal: true,\n    idempotencyKey: true,\n    __binaryResponse: true,\n};\nexport const isRequestOptions = (obj) => {\n    return (typeof obj === 'object' &&\n        obj !== null &&\n        !isEmptyObj(obj) &&\n        Object.keys(obj).every((k) => hasOwn(requestOptionsKeys, k)));\n};\nconst getPlatformProperties = () => {\n    if (typeof Deno !== 'undefined' && Deno.build != null) {\n        return {\n            'X-Stainless-Lang': 'js',\n            'X-Stainless-Package-Version': VERSION,\n            'X-Stainless-OS': normalizePlatform(Deno.build.os),\n            'X-Stainless-Arch': normalizeArch(Deno.build.arch),\n            'X-Stainless-Runtime': 'deno',\n            'X-Stainless-Runtime-Version': Deno.version,\n        };\n    }\n    if (typeof EdgeRuntime !== 'undefined') {\n        return {\n            'X-Stainless-Lang': 'js',\n            'X-Stainless-Package-Version': VERSION,\n            'X-Stainless-OS': 'Unknown',\n            'X-Stainless-Arch': `other:${EdgeRuntime}`,\n            'X-Stainless-Runtime': 'edge',\n            'X-Stainless-Runtime-Version': process.version,\n        };\n    }\n    // Check if Node.js\n    if (Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]') {\n        return {\n            'X-Stainless-Lang': 'js',\n            'X-Stainless-Package-Version': VERSION,\n            'X-Stainless-OS': normalizePlatform(process.platform),\n            'X-Stainless-Arch': normalizeArch(process.arch),\n            'X-Stainless-Runtime': 'node',\n            'X-Stainless-Runtime-Version': process.version,\n        };\n    }\n    const browserInfo = getBrowserInfo();\n    if (browserInfo) {\n        return {\n            'X-Stainless-Lang': 'js',\n            'X-Stainless-Package-Version': VERSION,\n            'X-Stainless-OS': 'Unknown',\n            'X-Stainless-Arch': 'unknown',\n            'X-Stainless-Runtime': `browser:${browserInfo.browser}`,\n            'X-Stainless-Runtime-Version': browserInfo.version,\n        };\n    }\n    // TODO add support for Cloudflare workers, etc.\n    return {\n        'X-Stainless-Lang': 'js',\n        'X-Stainless-Package-Version': VERSION,\n        'X-Stainless-OS': 'Unknown',\n        'X-Stainless-Arch': 'unknown',\n        'X-Stainless-Runtime': 'unknown',\n        'X-Stainless-Runtime-Version': 'unknown',\n    };\n};\n// Note: modified from https://github.com/JS-DevTools/host-environment/blob/b1ab79ecde37db5d6e163c050e54fe7d287d7c92/src/isomorphic.browser.ts\nfunction getBrowserInfo() {\n    if (typeof navigator === 'undefined' || !navigator) {\n        return null;\n    }\n    // NOTE: The order matters here!\n    const browserPatterns = [\n        { key: 'edge', pattern: /Edge(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n        { key: 'ie', pattern: /MSIE(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n        { key: 'ie', pattern: /Trident(?:.*rv\\:(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n        { key: 'chrome', pattern: /Chrome(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n        { key: 'firefox', pattern: /Firefox(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n        { key: 'safari', pattern: /(?:Version\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?(?:\\W+Mobile\\S*)?\\W+Safari/ },\n    ];\n    // Find the FIRST matching browser\n    for (const { key, pattern } of browserPatterns) {\n        const match = pattern.exec(navigator.userAgent);\n        if (match) {\n            const major = match[1] || 0;\n            const minor = match[2] || 0;\n            const patch = match[3] || 0;\n            return { browser: key, version: `${major}.${minor}.${patch}` };\n        }\n    }\n    return null;\n}\nconst normalizeArch = (arch) => {\n    // Node docs:\n    // - https://nodejs.org/api/process.html#processarch\n    // Deno docs:\n    // - https://doc.deno.land/deno/stable/~/Deno.build\n    if (arch === 'x32')\n        return 'x32';\n    if (arch === 'x86_64' || arch === 'x64')\n        return 'x64';\n    if (arch === 'arm')\n        return 'arm';\n    if (arch === 'aarch64' || arch === 'arm64')\n        return 'arm64';\n    if (arch)\n        return `other:${arch}`;\n    return 'unknown';\n};\nconst normalizePlatform = (platform) => {\n    // Node platforms:\n    // - https://nodejs.org/api/process.html#processplatform\n    // Deno platforms:\n    // - https://doc.deno.land/deno/stable/~/Deno.build\n    // - https://github.com/denoland/deno/issues/14799\n    platform = platform.toLowerCase();\n    // NOTE: this iOS check is untested and may not work\n    // Node does not work natively on IOS, there is a fork at\n    // https://github.com/nodejs-mobile/nodejs-mobile\n    // however it is unknown at the time of writing how to detect if it is running\n    if (platform.includes('ios'))\n        return 'iOS';\n    if (platform === 'android')\n        return 'Android';\n    if (platform === 'darwin')\n        return 'MacOS';\n    if (platform === 'win32')\n        return 'Windows';\n    if (platform === 'freebsd')\n        return 'FreeBSD';\n    if (platform === 'openbsd')\n        return 'OpenBSD';\n    if (platform === 'linux')\n        return 'Linux';\n    if (platform)\n        return `Other:${platform}`;\n    return 'Unknown';\n};\nlet _platformHeaders;\nconst getPlatformHeaders = () => {\n    return (_platformHeaders ?? (_platformHeaders = getPlatformProperties()));\n};\nexport const safeJSON = (text) => {\n    try {\n        return JSON.parse(text);\n    }\n    catch (err) {\n        return undefined;\n    }\n};\n// https://stackoverflow.com/a/19709846\nconst startsWithSchemeRegexp = new RegExp('^(?:[a-z]+:)?//', 'i');\nconst isAbsoluteURL = (url) => {\n    return startsWithSchemeRegexp.test(url);\n};\nexport const sleep = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\nconst validatePositiveInteger = (name, n) => {\n    if (typeof n !== 'number' || !Number.isInteger(n)) {\n        throw new OpenAIError(`${name} must be an integer`);\n    }\n    if (n < 0) {\n        throw new OpenAIError(`${name} must be a positive integer`);\n    }\n    return n;\n};\nexport const castToError = (err) => {\n    if (err instanceof Error)\n        return err;\n    return new Error(err);\n};\nexport const ensurePresent = (value) => {\n    if (value == null)\n        throw new OpenAIError(`Expected a value to be given but received ${value} instead.`);\n    return value;\n};\n/**\n * Read an environment variable.\n *\n * Will return undefined if the environment variable doesn't exist or cannot be accessed.\n */\nexport const readEnv = (env) => {\n    if (typeof process !== 'undefined') {\n        return process.env?.[env] ?? undefined;\n    }\n    if (typeof Deno !== 'undefined') {\n        return Deno.env?.get?.(env);\n    }\n    return undefined;\n};\nexport const coerceInteger = (value) => {\n    if (typeof value === 'number')\n        return Math.round(value);\n    if (typeof value === 'string')\n        return parseInt(value, 10);\n    throw new OpenAIError(`Could not coerce ${value} (type: ${typeof value}) into a number`);\n};\nexport const coerceFloat = (value) => {\n    if (typeof value === 'number')\n        return value;\n    if (typeof value === 'string')\n        return parseFloat(value);\n    throw new OpenAIError(`Could not coerce ${value} (type: ${typeof value}) into a number`);\n};\nexport const coerceBoolean = (value) => {\n    if (typeof value === 'boolean')\n        return value;\n    if (typeof value === 'string')\n        return value === 'true';\n    return Boolean(value);\n};\nexport const maybeCoerceInteger = (value) => {\n    if (value === undefined) {\n        return undefined;\n    }\n    return coerceInteger(value);\n};\nexport const maybeCoerceFloat = (value) => {\n    if (value === undefined) {\n        return undefined;\n    }\n    return coerceFloat(value);\n};\nexport const maybeCoerceBoolean = (value) => {\n    if (value === undefined) {\n        return undefined;\n    }\n    return coerceBoolean(value);\n};\n// https://stackoverflow.com/a/34491287\nexport function isEmptyObj(obj) {\n    if (!obj)\n        return true;\n    for (const _k in obj)\n        return false;\n    return true;\n}\n// https://eslint.org/docs/latest/rules/no-prototype-builtins\nexport function hasOwn(obj, key) {\n    return Object.prototype.hasOwnProperty.call(obj, key);\n}\nexport function debug(action, ...args) {\n    if (typeof process !== 'undefined' && process.env['DEBUG'] === 'true') {\n        console.log(`OpenAI:DEBUG:${action}`, ...args);\n    }\n}\n/**\n * https://stackoverflow.com/a/2117523\n */\nconst uuid4 = () => {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n        const r = (Math.random() * 16) | 0;\n        const v = c === 'x' ? r : (r & 0x3) | 0x8;\n        return v.toString(16);\n    });\n};\nexport const isRunningInBrowser = () => {\n    return (\n    // @ts-ignore\n    typeof window !== 'undefined' &&\n        // @ts-ignore\n        typeof window.document !== 'undefined' &&\n        // @ts-ignore\n        typeof navigator !== 'undefined');\n};\nexport const isHeadersProtocol = (headers) => {\n    return typeof headers?.get === 'function';\n};\nexport const getRequiredHeader = (headers, header) => {\n    const lowerCasedHeader = header.toLowerCase();\n    if (isHeadersProtocol(headers)) {\n        // to deal with the case where the header looks like Stainless-Event-Id\n        const intercapsHeader = header[0]?.toUpperCase() +\n            header.substring(1).replace(/([^\\w])(\\w)/g, (_m, g1, g2) => g1 + g2.toUpperCase());\n        for (const key of [header, lowerCasedHeader, header.toUpperCase(), intercapsHeader]) {\n            const value = headers.get(key);\n            if (value) {\n                return value;\n            }\n        }\n    }\n    for (const [key, value] of Object.entries(headers)) {\n        if (key.toLowerCase() === lowerCasedHeader) {\n            if (Array.isArray(value)) {\n                if (value.length <= 1)\n                    return value[0];\n                console.warn(`Received ${value.length} entries for the ${header} header, using the first entry.`);\n                return value[0];\n            }\n            return value;\n        }\n    }\n    throw new Error(`Could not find ${header} header`);\n};\n/**\n * Encodes a string to Base64 format.\n */\nexport const toBase64 = (str) => {\n    if (!str)\n        return '';\n    if (typeof Buffer !== 'undefined') {\n        return Buffer.from(str).toString('base64');\n    }\n    if (typeof btoa !== 'undefined') {\n        return btoa(str);\n    }\n    throw new OpenAIError('Cannot generate b64 string; Expected `Buffer` or `btoa` to be defined');\n};\n//# sourceMappingURL=core.mjs.map",
  "// File generated from our OpenAPI spec by Stainless.\nimport { AbstractPage } from \"./core.mjs\";\n/**\n * Note: no pagination actually occurs yet, this is for forwards-compatibility.\n */\nexport class Page extends AbstractPage {\n    constructor(client, response, body, options) {\n        super(client, response, body, options);\n        this.data = body.data;\n        this.object = body.object;\n    }\n    getPaginatedItems() {\n        return this.data;\n    }\n    // @deprecated Please use `nextPageInfo()` instead\n    /**\n     * This page represents a response that isn't actually paginated at the API level\n     * so there will never be any next page params.\n     */\n    nextPageParams() {\n        return null;\n    }\n    nextPageInfo() {\n        return null;\n    }\n}\nexport class CursorPage extends AbstractPage {\n    constructor(client, response, body, options) {\n        super(client, response, body, options);\n        this.data = body.data;\n    }\n    getPaginatedItems() {\n        return this.data;\n    }\n    // @deprecated Please use `nextPageInfo()` instead\n    nextPageParams() {\n        const info = this.nextPageInfo();\n        if (!info)\n            return null;\n        if ('params' in info)\n            return info.params;\n        const params = Object.fromEntries(info.url.searchParams);\n        if (!Object.keys(params).length)\n            return null;\n        return params;\n    }\n    nextPageInfo() {\n        if (!this.data?.length) {\n            return null;\n        }\n        const next = this.data[this.data.length - 1]?.id;\n        if (!next)\n            return null;\n        return { params: { after: next } };\n    }\n}\n//# sourceMappingURL=pagination.mjs.map",
  "// File generated from our OpenAPI spec by Stainless.\nexport class APIResource {\n    constructor(client) {\n        this._client = client;\n    }\n}\n//# sourceMappingURL=resource.mjs.map",
  "// File generated from our OpenAPI spec by Stainless.\nimport { APIResource } from 'openai/resource';\nexport class Completions extends APIResource {\n    create(body, options) {\n        return this._client.post('/chat/completions', { body, ...options, stream: body.stream ?? false });\n    }\n}\n(function (Completions) {\n})(Completions || (Completions = {}));\n//# sourceMappingURL=completions.mjs.map",
  "// File generated from our OpenAPI spec by Stainless.\nimport { APIResource } from 'openai/resource';\nimport * as CompletionsAPI from 'openai/resources/chat/completions';\nexport class Chat extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.completions = new CompletionsAPI.Completions(this._client);\n    }\n}\n(function (Chat) {\n    Chat.Completions = CompletionsAPI.Completions;\n})(Chat || (Chat = {}));\n//# sourceMappingURL=chat.mjs.map",
  "// File generated from our OpenAPI spec by Stainless.\nimport { APIResource } from 'openai/resource';\nexport class Speech extends APIResource {\n    /**\n     * Generates audio from the input text.\n     */\n    create(body, options) {\n        return this._client.post('/audio/speech', { body, ...options, __binaryResponse: true });\n    }\n}\n(function (Speech) {\n})(Speech || (Speech = {}));\n//# sourceMappingURL=speech.mjs.map",
  "// File generated from our OpenAPI spec by Stainless.\nimport { APIResource } from 'openai/resource';\nimport { multipartFormRequestOptions } from 'openai/core';\nexport class Transcriptions extends APIResource {\n    /**\n     * Transcribes audio into the input language.\n     */\n    create(body, options) {\n        return this._client.post('/audio/transcriptions', multipartFormRequestOptions({ body, ...options }));\n    }\n}\n(function (Transcriptions) {\n})(Transcriptions || (Transcriptions = {}));\n//# sourceMappingURL=transcriptions.mjs.map",
  "// File generated from our OpenAPI spec by Stainless.\nimport { APIResource } from 'openai/resource';\nimport { multipartFormRequestOptions } from 'openai/core';\nexport class Translations extends APIResource {\n    /**\n     * Translates audio into English.\n     */\n    create(body, options) {\n        return this._client.post('/audio/translations', multipartFormRequestOptions({ body, ...options }));\n    }\n}\n(function (Translations) {\n})(Translations || (Translations = {}));\n//# sourceMappingURL=translations.mjs.map",
  "// File generated from our OpenAPI spec by Stainless.\nimport { APIResource } from 'openai/resource';\nimport * as SpeechAPI from 'openai/resources/audio/speech';\nimport * as TranscriptionsAPI from 'openai/resources/audio/transcriptions';\nimport * as TranslationsAPI from 'openai/resources/audio/translations';\nexport class Audio extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.transcriptions = new TranscriptionsAPI.Transcriptions(this._client);\n        this.translations = new TranslationsAPI.Translations(this._client);\n        this.speech = new SpeechAPI.Speech(this._client);\n    }\n}\n(function (Audio) {\n    Audio.Transcriptions = TranscriptionsAPI.Transcriptions;\n    Audio.Translations = TranslationsAPI.Translations;\n    Audio.Speech = SpeechAPI.Speech;\n})(Audio || (Audio = {}));\n//# sourceMappingURL=audio.mjs.map",
  "// File generated from our OpenAPI spec by Stainless.\nimport { APIResource } from 'openai/resource';\nimport { isRequestOptions } from 'openai/core';\nimport * as FilesAPI from 'openai/resources/beta/assistants/files';\nimport { CursorPage } from 'openai/pagination';\nexport class Files extends APIResource {\n    /**\n     * Create an assistant file by attaching a\n     * [File](https://platform.openai.com/docs/api-reference/files) to an\n     * [assistant](https://platform.openai.com/docs/api-reference/assistants).\n     */\n    create(assistantId, body, options) {\n        return this._client.post(`/assistants/${assistantId}/files`, {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v1', ...options?.headers },\n        });\n    }\n    /**\n     * Retrieves an AssistantFile.\n     */\n    retrieve(assistantId, fileId, options) {\n        return this._client.get(`/assistants/${assistantId}/files/${fileId}`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v1', ...options?.headers },\n        });\n    }\n    list(assistantId, query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.list(assistantId, {}, query);\n        }\n        return this._client.getAPIList(`/assistants/${assistantId}/files`, AssistantFilesPage, {\n            query,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v1', ...options?.headers },\n        });\n    }\n    /**\n     * Delete an assistant file.\n     */\n    del(assistantId, fileId, options) {\n        return this._client.delete(`/assistants/${assistantId}/files/${fileId}`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v1', ...options?.headers },\n        });\n    }\n}\nexport class AssistantFilesPage extends CursorPage {\n}\n(function (Files) {\n    Files.AssistantFilesPage = FilesAPI.AssistantFilesPage;\n})(Files || (Files = {}));\n//# sourceMappingURL=files.mjs.map",
  "// File generated from our OpenAPI spec by Stainless.\nimport { APIResource } from 'openai/resource';\nimport { isRequestOptions } from 'openai/core';\nimport * as AssistantsAPI from 'openai/resources/beta/assistants/assistants';\nimport * as FilesAPI from 'openai/resources/beta/assistants/files';\nimport { CursorPage } from 'openai/pagination';\nexport class Assistants extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.files = new FilesAPI.Files(this._client);\n    }\n    /**\n     * Create an assistant with a model and instructions.\n     */\n    create(body, options) {\n        return this._client.post('/assistants', {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v1', ...options?.headers },\n        });\n    }\n    /**\n     * Retrieves an assistant.\n     */\n    retrieve(assistantId, options) {\n        return this._client.get(`/assistants/${assistantId}`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v1', ...options?.headers },\n        });\n    }\n    /**\n     * Modifies an assistant.\n     */\n    update(assistantId, body, options) {\n        return this._client.post(`/assistants/${assistantId}`, {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v1', ...options?.headers },\n        });\n    }\n    list(query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.list({}, query);\n        }\n        return this._client.getAPIList('/assistants', AssistantsPage, {\n            query,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v1', ...options?.headers },\n        });\n    }\n    /**\n     * Delete an assistant.\n     */\n    del(assistantId, options) {\n        return this._client.delete(`/assistants/${assistantId}`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v1', ...options?.headers },\n        });\n    }\n}\nexport class AssistantsPage extends CursorPage {\n}\n(function (Assistants) {\n    Assistants.AssistantsPage = AssistantsAPI.AssistantsPage;\n    Assistants.Files = FilesAPI.Files;\n    Assistants.AssistantFilesPage = FilesAPI.AssistantFilesPage;\n})(Assistants || (Assistants = {}));\n//# sourceMappingURL=assistants.mjs.map",
  "export function isRunnableFunctionWithParse(fn) {\n    return typeof fn.parse === 'function';\n}\n/**\n * This is helper class for passing a `function` and `parse` where the `function`\n * argument type matches the `parse` return type.\n */\nexport class ParsingFunction {\n    constructor(input) {\n        this.function = input.function;\n        this.parse = input.parse;\n        this.parameters = input.parameters;\n        this.description = input.description;\n        this.name = input.name;\n    }\n}\n//# sourceMappingURL=RunnableFunction.mjs.map",
  "export const isAssistantMessage = (message) => {\n    return message?.role === 'assistant';\n};\nexport const isFunctionMessage = (message) => {\n    return message?.role === 'function';\n};\nexport const isToolMessage = (message) => {\n    return message?.role === 'tool';\n};\nexport function isPresent(obj) {\n    return obj != null;\n}\n//# sourceMappingURL=chatCompletionUtils.mjs.map",
  "var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _AbstractChatCompletionRunner_instances, _AbstractChatCompletionRunner_connectedPromise, _AbstractChatCompletionRunner_resolveConnectedPromise, _AbstractChatCompletionRunner_rejectConnectedPromise, _AbstractChatCompletionRunner_endPromise, _AbstractChatCompletionRunner_resolveEndPromise, _AbstractChatCompletionRunner_rejectEndPromise, _AbstractChatCompletionRunner_listeners, _AbstractChatCompletionRunner_ended, _AbstractChatCompletionRunner_errored, _AbstractChatCompletionRunner_aborted, _AbstractChatCompletionRunner_catchingPromiseCreated, _AbstractChatCompletionRunner_getFinalContent, _AbstractChatCompletionRunner_getFinalMessage, _AbstractChatCompletionRunner_getFinalFunctionCall, _AbstractChatCompletionRunner_getFinalFunctionCallResult, _AbstractChatCompletionRunner_calculateTotalUsage, _AbstractChatCompletionRunner_handleError, _AbstractChatCompletionRunner_validateParams, _AbstractChatCompletionRunner_stringifyFunctionCallResult;\nimport { APIUserAbortError, OpenAIError } from 'openai/error';\nimport { isRunnableFunctionWithParse, } from \"./RunnableFunction.mjs\";\nimport { isAssistantMessage, isFunctionMessage, isToolMessage } from \"./chatCompletionUtils.mjs\";\nconst DEFAULT_MAX_CHAT_COMPLETIONS = 10;\nexport class AbstractChatCompletionRunner {\n    constructor() {\n        _AbstractChatCompletionRunner_instances.add(this);\n        this.controller = new AbortController();\n        _AbstractChatCompletionRunner_connectedPromise.set(this, void 0);\n        _AbstractChatCompletionRunner_resolveConnectedPromise.set(this, () => { });\n        _AbstractChatCompletionRunner_rejectConnectedPromise.set(this, () => { });\n        _AbstractChatCompletionRunner_endPromise.set(this, void 0);\n        _AbstractChatCompletionRunner_resolveEndPromise.set(this, () => { });\n        _AbstractChatCompletionRunner_rejectEndPromise.set(this, () => { });\n        _AbstractChatCompletionRunner_listeners.set(this, {});\n        this._chatCompletions = [];\n        this.messages = [];\n        _AbstractChatCompletionRunner_ended.set(this, false);\n        _AbstractChatCompletionRunner_errored.set(this, false);\n        _AbstractChatCompletionRunner_aborted.set(this, false);\n        _AbstractChatCompletionRunner_catchingPromiseCreated.set(this, false);\n        _AbstractChatCompletionRunner_handleError.set(this, (error) => {\n            __classPrivateFieldSet(this, _AbstractChatCompletionRunner_errored, true, \"f\");\n            if (error instanceof Error && error.name === 'AbortError') {\n                error = new APIUserAbortError();\n            }\n            if (error instanceof APIUserAbortError) {\n                __classPrivateFieldSet(this, _AbstractChatCompletionRunner_aborted, true, \"f\");\n                return this._emit('abort', error);\n            }\n            if (error instanceof OpenAIError) {\n                return this._emit('error', error);\n            }\n            if (error instanceof Error) {\n                const openAIError = new OpenAIError(error.message);\n                // @ts-ignore\n                openAIError.cause = error;\n                return this._emit('error', openAIError);\n            }\n            return this._emit('error', new OpenAIError(String(error)));\n        });\n        __classPrivateFieldSet(this, _AbstractChatCompletionRunner_connectedPromise, new Promise((resolve, reject) => {\n            __classPrivateFieldSet(this, _AbstractChatCompletionRunner_resolveConnectedPromise, resolve, \"f\");\n            __classPrivateFieldSet(this, _AbstractChatCompletionRunner_rejectConnectedPromise, reject, \"f\");\n        }), \"f\");\n        __classPrivateFieldSet(this, _AbstractChatCompletionRunner_endPromise, new Promise((resolve, reject) => {\n            __classPrivateFieldSet(this, _AbstractChatCompletionRunner_resolveEndPromise, resolve, \"f\");\n            __classPrivateFieldSet(this, _AbstractChatCompletionRunner_rejectEndPromise, reject, \"f\");\n        }), \"f\");\n        // Don't let these promises cause unhandled rejection errors.\n        // we will manually cause an unhandled rejection error later\n        // if the user hasn't registered any error listener or called\n        // any promise-returning method.\n        __classPrivateFieldGet(this, _AbstractChatCompletionRunner_connectedPromise, \"f\").catch(() => { });\n        __classPrivateFieldGet(this, _AbstractChatCompletionRunner_endPromise, \"f\").catch(() => { });\n    }\n    _run(executor) {\n        // Unfortunately if we call `executor()` immediately we get runtime errors about\n        // references to `this` before the `super()` constructor call returns.\n        setTimeout(() => {\n            executor().then(() => {\n                this._emitFinal();\n                this._emit('end');\n            }, __classPrivateFieldGet(this, _AbstractChatCompletionRunner_handleError, \"f\"));\n        }, 0);\n    }\n    _addChatCompletion(chatCompletion) {\n        this._chatCompletions.push(chatCompletion);\n        this._emit('chatCompletion', chatCompletion);\n        const message = chatCompletion.choices[0]?.message;\n        if (message)\n            this._addMessage(message);\n        return chatCompletion;\n    }\n    _addMessage(message, emit = true) {\n        this.messages.push(message);\n        if (emit) {\n            this._emit('message', message);\n            if ((isFunctionMessage(message) || isToolMessage(message)) && message.content) {\n                // Note, this assumes that {role: 'tool', content: …} is always the result of a call of tool of type=function.\n                this._emit('functionCallResult', message.content);\n            }\n            else if (isAssistantMessage(message) && message.function_call) {\n                this._emit('functionCall', message.function_call);\n            }\n            else if (isAssistantMessage(message) && message.tool_calls) {\n                for (const tool_call of message.tool_calls) {\n                    if (tool_call.type === 'function') {\n                        this._emit('functionCall', tool_call.function);\n                    }\n                }\n            }\n        }\n    }\n    _connected() {\n        if (this.ended)\n            return;\n        __classPrivateFieldGet(this, _AbstractChatCompletionRunner_resolveConnectedPromise, \"f\").call(this);\n        this._emit('connect');\n    }\n    get ended() {\n        return __classPrivateFieldGet(this, _AbstractChatCompletionRunner_ended, \"f\");\n    }\n    get errored() {\n        return __classPrivateFieldGet(this, _AbstractChatCompletionRunner_errored, \"f\");\n    }\n    get aborted() {\n        return __classPrivateFieldGet(this, _AbstractChatCompletionRunner_aborted, \"f\");\n    }\n    abort() {\n        this.controller.abort();\n    }\n    /**\n     * Adds the listener function to the end of the listeners array for the event.\n     * No checks are made to see if the listener has already been added. Multiple calls passing\n     * the same combination of event and listener will result in the listener being added, and\n     * called, multiple times.\n     * @returns this ChatCompletionStream, so that calls can be chained\n     */\n    on(event, listener) {\n        const listeners = __classPrivateFieldGet(this, _AbstractChatCompletionRunner_listeners, \"f\")[event] || (__classPrivateFieldGet(this, _AbstractChatCompletionRunner_listeners, \"f\")[event] = []);\n        listeners.push({ listener });\n        return this;\n    }\n    /**\n     * Removes the specified listener from the listener array for the event.\n     * off() will remove, at most, one instance of a listener from the listener array. If any single\n     * listener has been added multiple times to the listener array for the specified event, then\n     * off() must be called multiple times to remove each instance.\n     * @returns this ChatCompletionStream, so that calls can be chained\n     */\n    off(event, listener) {\n        const listeners = __classPrivateFieldGet(this, _AbstractChatCompletionRunner_listeners, \"f\")[event];\n        if (!listeners)\n            return this;\n        const index = listeners.findIndex((l) => l.listener === listener);\n        if (index >= 0)\n            listeners.splice(index, 1);\n        return this;\n    }\n    /**\n     * Adds a one-time listener function for the event. The next time the event is triggered,\n     * this listener is removed and then invoked.\n     * @returns this ChatCompletionStream, so that calls can be chained\n     */\n    once(event, listener) {\n        const listeners = __classPrivateFieldGet(this, _AbstractChatCompletionRunner_listeners, \"f\")[event] || (__classPrivateFieldGet(this, _AbstractChatCompletionRunner_listeners, \"f\")[event] = []);\n        listeners.push({ listener, once: true });\n        return this;\n    }\n    /**\n     * This is similar to `.once()`, but returns a Promise that resolves the next time\n     * the event is triggered, instead of calling a listener callback.\n     * @returns a Promise that resolves the next time given event is triggered,\n     * or rejects if an error is emitted.  (If you request the 'error' event,\n     * returns a promise that resolves with the error).\n     *\n     * Example:\n     *\n     *   const message = await stream.emitted('message') // rejects if the stream errors\n     */\n    emitted(event) {\n        return new Promise((resolve, reject) => {\n            __classPrivateFieldSet(this, _AbstractChatCompletionRunner_catchingPromiseCreated, true, \"f\");\n            if (event !== 'error')\n                this.once('error', reject);\n            this.once(event, resolve);\n        });\n    }\n    async done() {\n        __classPrivateFieldSet(this, _AbstractChatCompletionRunner_catchingPromiseCreated, true, \"f\");\n        await __classPrivateFieldGet(this, _AbstractChatCompletionRunner_endPromise, \"f\");\n    }\n    /**\n     * @returns a promise that resolves with the final ChatCompletion, or rejects\n     * if an error occurred or the stream ended prematurely without producing a ChatCompletion.\n     */\n    async finalChatCompletion() {\n        await this.done();\n        const completion = this._chatCompletions[this._chatCompletions.length - 1];\n        if (!completion)\n            throw new OpenAIError('stream ended without producing a ChatCompletion');\n        return completion;\n    }\n    /**\n     * @returns a promise that resolves with the content of the final ChatCompletionMessage, or rejects\n     * if an error occurred or the stream ended prematurely without producing a ChatCompletionMessage.\n     */\n    async finalContent() {\n        await this.done();\n        return __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalContent).call(this);\n    }\n    /**\n     * @returns a promise that resolves with the the final assistant ChatCompletionMessage response,\n     * or rejects if an error occurred or the stream ended prematurely without producing a ChatCompletionMessage.\n     */\n    async finalMessage() {\n        await this.done();\n        return __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalMessage).call(this);\n    }\n    /**\n     * @returns a promise that resolves with the content of the final FunctionCall, or rejects\n     * if an error occurred or the stream ended prematurely without producing a ChatCompletionMessage.\n     */\n    async finalFunctionCall() {\n        await this.done();\n        return __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalFunctionCall).call(this);\n    }\n    async finalFunctionCallResult() {\n        await this.done();\n        return __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalFunctionCallResult).call(this);\n    }\n    async totalUsage() {\n        await this.done();\n        return __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_calculateTotalUsage).call(this);\n    }\n    allChatCompletions() {\n        return [...this._chatCompletions];\n    }\n    _emit(event, ...args) {\n        // make sure we don't emit any events after end\n        if (__classPrivateFieldGet(this, _AbstractChatCompletionRunner_ended, \"f\"))\n            return;\n        if (event === 'end') {\n            __classPrivateFieldSet(this, _AbstractChatCompletionRunner_ended, true, \"f\");\n            __classPrivateFieldGet(this, _AbstractChatCompletionRunner_resolveEndPromise, \"f\").call(this);\n        }\n        const listeners = __classPrivateFieldGet(this, _AbstractChatCompletionRunner_listeners, \"f\")[event];\n        if (listeners) {\n            __classPrivateFieldGet(this, _AbstractChatCompletionRunner_listeners, \"f\")[event] = listeners.filter((l) => !l.once);\n            listeners.forEach(({ listener }) => listener(...args));\n        }\n        if (event === 'abort') {\n            const error = args[0];\n            if (!__classPrivateFieldGet(this, _AbstractChatCompletionRunner_catchingPromiseCreated, \"f\") && !listeners?.length) {\n                Promise.reject(error);\n            }\n            __classPrivateFieldGet(this, _AbstractChatCompletionRunner_rejectConnectedPromise, \"f\").call(this, error);\n            __classPrivateFieldGet(this, _AbstractChatCompletionRunner_rejectEndPromise, \"f\").call(this, error);\n            this._emit('end');\n            return;\n        }\n        if (event === 'error') {\n            // NOTE: _emit('error', error) should only be called from #handleError().\n            const error = args[0];\n            if (!__classPrivateFieldGet(this, _AbstractChatCompletionRunner_catchingPromiseCreated, \"f\") && !listeners?.length) {\n                // Trigger an unhandled rejection if the user hasn't registered any error handlers.\n                // If you are seeing stack traces here, make sure to handle errors via either:\n                // - runner.on('error', () => ...)\n                // - await runner.done()\n                // - await runner.finalChatCompletion()\n                // - etc.\n                Promise.reject(error);\n            }\n            __classPrivateFieldGet(this, _AbstractChatCompletionRunner_rejectConnectedPromise, \"f\").call(this, error);\n            __classPrivateFieldGet(this, _AbstractChatCompletionRunner_rejectEndPromise, \"f\").call(this, error);\n            this._emit('end');\n        }\n    }\n    _emitFinal() {\n        const completion = this._chatCompletions[this._chatCompletions.length - 1];\n        if (completion)\n            this._emit('finalChatCompletion', completion);\n        const finalMessage = this.messages[this.messages.length - 1];\n        if (finalMessage)\n            this._emit('finalMessage', finalMessage);\n        const finalContent = __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalContent).call(this);\n        if (finalContent)\n            this._emit('finalContent', finalContent);\n        const finalFunctionCall = __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalFunctionCall).call(this);\n        if (finalFunctionCall)\n            this._emit('finalFunctionCall', finalFunctionCall);\n        const finalFunctionCallResult = __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalFunctionCallResult).call(this);\n        if (finalFunctionCallResult != null)\n            this._emit('finalFunctionCallResult', finalFunctionCallResult);\n        if (this._chatCompletions.some((c) => c.usage)) {\n            this._emit('totalUsage', __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_calculateTotalUsage).call(this));\n        }\n    }\n    async _createChatCompletion(completions, params, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted)\n                this.controller.abort();\n            signal.addEventListener('abort', () => this.controller.abort());\n        }\n        __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_validateParams).call(this, params);\n        const chatCompletion = await completions.create({ ...params, stream: false }, { ...options, signal: this.controller.signal });\n        this._connected();\n        return this._addChatCompletion(chatCompletion);\n    }\n    async _runChatCompletion(completions, params, options) {\n        for (const message of params.messages) {\n            this._addMessage(message, false);\n        }\n        return await this._createChatCompletion(completions, params, options);\n    }\n    async _runFunctions(completions, params, options) {\n        const role = 'function';\n        const { function_call = 'auto', stream, ...restParams } = params;\n        const singleFunctionToCall = typeof function_call !== 'string' && function_call?.name;\n        const { maxChatCompletions = DEFAULT_MAX_CHAT_COMPLETIONS } = options || {};\n        const functionsByName = {};\n        for (const f of params.functions) {\n            functionsByName[f.name || f.function.name] = f;\n        }\n        const functions = params.functions.map((f) => ({\n            name: f.name || f.function.name,\n            parameters: f.parameters,\n            description: f.description,\n        }));\n        for (const message of params.messages) {\n            this._addMessage(message, false);\n        }\n        for (let i = 0; i < maxChatCompletions; ++i) {\n            const chatCompletion = await this._createChatCompletion(completions, {\n                ...restParams,\n                function_call,\n                functions,\n                messages: [...this.messages],\n            }, options);\n            const message = chatCompletion.choices[0]?.message;\n            if (!message) {\n                throw new OpenAIError(`missing message in ChatCompletion response`);\n            }\n            if (!message.function_call)\n                return;\n            const { name, arguments: args } = message.function_call;\n            const fn = functionsByName[name];\n            if (!fn) {\n                const content = `Invalid function_call: ${JSON.stringify(name)}. Available options are: ${functions\n                    .map((f) => JSON.stringify(f.name))\n                    .join(', ')}. Please try again`;\n                this._addMessage({ role, name, content });\n                continue;\n            }\n            else if (singleFunctionToCall && singleFunctionToCall !== name) {\n                const content = `Invalid function_call: ${JSON.stringify(name)}. ${JSON.stringify(singleFunctionToCall)} requested. Please try again`;\n                this._addMessage({ role, name, content });\n                continue;\n            }\n            let parsed;\n            try {\n                parsed = isRunnableFunctionWithParse(fn) ? await fn.parse(args) : args;\n            }\n            catch (error) {\n                this._addMessage({\n                    role,\n                    name,\n                    content: error instanceof Error ? error.message : String(error),\n                });\n                continue;\n            }\n            // @ts-expect-error it can't rule out `never` type.\n            const rawContent = await fn.function(parsed, this);\n            const content = __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_stringifyFunctionCallResult).call(this, rawContent);\n            this._addMessage({ role, name, content });\n            if (singleFunctionToCall)\n                return;\n        }\n    }\n    async _runTools(completions, params, options) {\n        const role = 'tool';\n        const { tool_choice = 'auto', stream, ...restParams } = params;\n        const singleFunctionToCall = typeof tool_choice !== 'string' && tool_choice?.function?.name;\n        const { maxChatCompletions = DEFAULT_MAX_CHAT_COMPLETIONS } = options || {};\n        const functionsByName = {};\n        for (const f of params.tools) {\n            if (f.type === 'function') {\n                functionsByName[f.function.name || f.function.function.name] = f.function;\n            }\n        }\n        const tools = 'tools' in params ?\n            params.tools.map((t) => t.type === 'function' ?\n                {\n                    type: 'function',\n                    function: {\n                        name: t.function.name || t.function.function.name,\n                        parameters: t.function.parameters,\n                        description: t.function.description,\n                    },\n                }\n                : t)\n            : undefined;\n        for (const message of params.messages) {\n            this._addMessage(message, false);\n        }\n        for (let i = 0; i < maxChatCompletions; ++i) {\n            const chatCompletion = await this._createChatCompletion(completions, {\n                ...restParams,\n                tool_choice,\n                tools,\n                messages: [...this.messages],\n            }, options);\n            const message = chatCompletion.choices[0]?.message;\n            if (!message) {\n                throw new OpenAIError(`missing message in ChatCompletion response`);\n            }\n            if (!message.tool_calls)\n                return;\n            for (const tool_call of message.tool_calls) {\n                if (tool_call.type !== 'function')\n                    continue;\n                const tool_call_id = tool_call.id;\n                const { name, arguments: args } = tool_call.function;\n                const fn = functionsByName[name];\n                if (!fn) {\n                    const content = `Invalid tool_call: ${JSON.stringify(name)}. Available options are: ${tools\n                        .map((f) => JSON.stringify(f.function.name))\n                        .join(', ')}. Please try again`;\n                    this._addMessage({ role, tool_call_id, content });\n                    continue;\n                }\n                else if (singleFunctionToCall && singleFunctionToCall !== name) {\n                    const content = `Invalid tool_call: ${JSON.stringify(name)}. ${JSON.stringify(singleFunctionToCall)} requested. Please try again`;\n                    this._addMessage({ role, tool_call_id, content });\n                    continue;\n                }\n                let parsed;\n                try {\n                    parsed = isRunnableFunctionWithParse(fn) ? await fn.parse(args) : args;\n                }\n                catch (error) {\n                    const content = error instanceof Error ? error.message : String(error);\n                    this._addMessage({ role, tool_call_id, content });\n                    continue;\n                }\n                // @ts-expect-error it can't rule out `never` type.\n                const rawContent = await fn.function(parsed, this);\n                const content = __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_stringifyFunctionCallResult).call(this, rawContent);\n                this._addMessage({ role, tool_call_id, content });\n                if (singleFunctionToCall)\n                    return;\n            }\n        }\n    }\n}\n_AbstractChatCompletionRunner_connectedPromise = new WeakMap(), _AbstractChatCompletionRunner_resolveConnectedPromise = new WeakMap(), _AbstractChatCompletionRunner_rejectConnectedPromise = new WeakMap(), _AbstractChatCompletionRunner_endPromise = new WeakMap(), _AbstractChatCompletionRunner_resolveEndPromise = new WeakMap(), _AbstractChatCompletionRunner_rejectEndPromise = new WeakMap(), _AbstractChatCompletionRunner_listeners = new WeakMap(), _AbstractChatCompletionRunner_ended = new WeakMap(), _AbstractChatCompletionRunner_errored = new WeakMap(), _AbstractChatCompletionRunner_aborted = new WeakMap(), _AbstractChatCompletionRunner_catchingPromiseCreated = new WeakMap(), _AbstractChatCompletionRunner_handleError = new WeakMap(), _AbstractChatCompletionRunner_instances = new WeakSet(), _AbstractChatCompletionRunner_getFinalContent = function _AbstractChatCompletionRunner_getFinalContent() {\n    return __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalMessage).call(this).content;\n}, _AbstractChatCompletionRunner_getFinalMessage = function _AbstractChatCompletionRunner_getFinalMessage() {\n    let i = this.messages.length;\n    while (i-- > 0) {\n        const message = this.messages[i];\n        if (isAssistantMessage(message)) {\n            return message;\n        }\n    }\n    throw new OpenAIError('stream ended without producing a ChatCompletionMessage with role=assistant');\n}, _AbstractChatCompletionRunner_getFinalFunctionCall = function _AbstractChatCompletionRunner_getFinalFunctionCall() {\n    for (let i = this.messages.length - 1; i >= 0; i--) {\n        const message = this.messages[i];\n        if (isAssistantMessage(message) && message?.function_call) {\n            return message.function_call;\n        }\n    }\n    return;\n}, _AbstractChatCompletionRunner_getFinalFunctionCallResult = function _AbstractChatCompletionRunner_getFinalFunctionCallResult() {\n    for (let i = this.messages.length - 1; i >= 0; i--) {\n        const message = this.messages[i];\n        if (isFunctionMessage(message) && message.content != null) {\n            return message.content;\n        }\n    }\n    return;\n}, _AbstractChatCompletionRunner_calculateTotalUsage = function _AbstractChatCompletionRunner_calculateTotalUsage() {\n    const total = {\n        completion_tokens: 0,\n        prompt_tokens: 0,\n        total_tokens: 0,\n    };\n    for (const { usage } of this._chatCompletions) {\n        if (usage) {\n            total.completion_tokens += usage.completion_tokens;\n            total.prompt_tokens += usage.prompt_tokens;\n            total.total_tokens += usage.total_tokens;\n        }\n    }\n    return total;\n}, _AbstractChatCompletionRunner_validateParams = function _AbstractChatCompletionRunner_validateParams(params) {\n    if (params.n != null && params.n > 1) {\n        throw new OpenAIError('ChatCompletion convenience helpers only support n=1 at this time. To use n>1, please use chat.completions.create() directly.');\n    }\n}, _AbstractChatCompletionRunner_stringifyFunctionCallResult = function _AbstractChatCompletionRunner_stringifyFunctionCallResult(rawContent) {\n    return (typeof rawContent === 'string' ? rawContent\n        : rawContent === undefined ? 'undefined'\n            : JSON.stringify(rawContent));\n};\n//# sourceMappingURL=AbstractChatCompletionRunner.mjs.map",
  "import { AbstractChatCompletionRunner, } from \"./AbstractChatCompletionRunner.mjs\";\nimport { isAssistantMessage } from \"./chatCompletionUtils.mjs\";\nexport class ChatCompletionRunner extends AbstractChatCompletionRunner {\n    static runFunctions(completions, params, options) {\n        const runner = new ChatCompletionRunner();\n        runner._run(() => runner._runFunctions(completions, params, options));\n        return runner;\n    }\n    static runTools(completions, params, options) {\n        const runner = new ChatCompletionRunner();\n        runner._run(() => runner._runTools(completions, params, options));\n        return runner;\n    }\n    _addMessage(message) {\n        super._addMessage(message);\n        if (isAssistantMessage(message) && message.content) {\n            this._emit('content', message.content);\n        }\n    }\n}\n//# sourceMappingURL=ChatCompletionRunner.mjs.map",
  "var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar _ChatCompletionStream_instances, _ChatCompletionStream_currentChatCompletionSnapshot, _ChatCompletionStream_beginRequest, _ChatCompletionStream_addChunk, _ChatCompletionStream_endRequest, _ChatCompletionStream_accumulateChatCompletion;\nimport { OpenAIError, APIUserAbortError } from 'openai/error';\nimport { AbstractChatCompletionRunner, } from \"./AbstractChatCompletionRunner.mjs\";\nimport { Stream } from 'openai/streaming';\nexport class ChatCompletionStream extends AbstractChatCompletionRunner {\n    constructor() {\n        super(...arguments);\n        _ChatCompletionStream_instances.add(this);\n        _ChatCompletionStream_currentChatCompletionSnapshot.set(this, void 0);\n    }\n    get currentChatCompletionSnapshot() {\n        return __classPrivateFieldGet(this, _ChatCompletionStream_currentChatCompletionSnapshot, \"f\");\n    }\n    /**\n     * Intended for use on the frontend, consuming a stream produced with\n     * `.toReadableStream()` on the backend.\n     *\n     * Note that messages sent to the model do not appear in `.on('message')`\n     * in this context.\n     */\n    static fromReadableStream(stream) {\n        const runner = new ChatCompletionStream();\n        runner._run(() => runner._fromReadableStream(stream));\n        return runner;\n    }\n    static createChatCompletion(completions, params, options) {\n        const runner = new ChatCompletionStream();\n        runner._run(() => runner._runChatCompletion(completions, { ...params, stream: true }, { ...options, headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'stream' } }));\n        return runner;\n    }\n    async _createChatCompletion(completions, params, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted)\n                this.controller.abort();\n            signal.addEventListener('abort', () => this.controller.abort());\n        }\n        __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_beginRequest).call(this);\n        const stream = await completions.create({ ...params, stream: true }, { ...options, signal: this.controller.signal });\n        this._connected();\n        for await (const chunk of stream) {\n            __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_addChunk).call(this, chunk);\n        }\n        if (stream.controller.signal?.aborted) {\n            throw new APIUserAbortError();\n        }\n        return this._addChatCompletion(__classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_endRequest).call(this));\n    }\n    async _fromReadableStream(readableStream, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted)\n                this.controller.abort();\n            signal.addEventListener('abort', () => this.controller.abort());\n        }\n        __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_beginRequest).call(this);\n        this._connected();\n        const stream = Stream.fromReadableStream(readableStream, this.controller);\n        let chatId;\n        for await (const chunk of stream) {\n            if (chatId && chatId !== chunk.id) {\n                // A new request has been made.\n                this._addChatCompletion(__classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_endRequest).call(this));\n            }\n            __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_addChunk).call(this, chunk);\n            chatId = chunk.id;\n        }\n        if (stream.controller.signal?.aborted) {\n            throw new APIUserAbortError();\n        }\n        return this._addChatCompletion(__classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_endRequest).call(this));\n    }\n    [(_ChatCompletionStream_currentChatCompletionSnapshot = new WeakMap(), _ChatCompletionStream_instances = new WeakSet(), _ChatCompletionStream_beginRequest = function _ChatCompletionStream_beginRequest() {\n        if (this.ended)\n            return;\n        __classPrivateFieldSet(this, _ChatCompletionStream_currentChatCompletionSnapshot, undefined, \"f\");\n    }, _ChatCompletionStream_addChunk = function _ChatCompletionStream_addChunk(chunk) {\n        if (this.ended)\n            return;\n        const completion = __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_accumulateChatCompletion).call(this, chunk);\n        this._emit('chunk', chunk, completion);\n        const delta = chunk.choices[0]?.delta?.content;\n        const snapshot = completion.choices[0]?.message;\n        if (delta != null && snapshot?.role === 'assistant' && snapshot?.content) {\n            this._emit('content', delta, snapshot.content);\n        }\n    }, _ChatCompletionStream_endRequest = function _ChatCompletionStream_endRequest() {\n        if (this.ended) {\n            throw new OpenAIError(`stream has ended, this shouldn't happen`);\n        }\n        const snapshot = __classPrivateFieldGet(this, _ChatCompletionStream_currentChatCompletionSnapshot, \"f\");\n        if (!snapshot) {\n            throw new OpenAIError(`request ended without sending any chunks`);\n        }\n        __classPrivateFieldSet(this, _ChatCompletionStream_currentChatCompletionSnapshot, undefined, \"f\");\n        return finalizeChatCompletion(snapshot);\n    }, _ChatCompletionStream_accumulateChatCompletion = function _ChatCompletionStream_accumulateChatCompletion(chunk) {\n        var _a, _b;\n        let snapshot = __classPrivateFieldGet(this, _ChatCompletionStream_currentChatCompletionSnapshot, \"f\");\n        const { choices, ...rest } = chunk;\n        if (!snapshot) {\n            snapshot = __classPrivateFieldSet(this, _ChatCompletionStream_currentChatCompletionSnapshot, {\n                ...rest,\n                choices: [],\n            }, \"f\");\n        }\n        else {\n            Object.assign(snapshot, rest);\n        }\n        for (const { delta, finish_reason, index, ...other } of chunk.choices) {\n            let choice = snapshot.choices[index];\n            if (!choice) {\n                snapshot.choices[index] = { finish_reason, index, message: delta, ...other };\n                continue;\n            }\n            if (finish_reason)\n                choice.finish_reason = finish_reason;\n            Object.assign(choice, other);\n            if (!delta)\n                continue; // Shouldn't happen; just in case.\n            const { content, function_call, role, tool_calls } = delta;\n            if (content)\n                choice.message.content = (choice.message.content || '') + content;\n            if (role)\n                choice.message.role = role;\n            if (function_call) {\n                if (!choice.message.function_call) {\n                    choice.message.function_call = function_call;\n                }\n                else {\n                    if (function_call.name)\n                        choice.message.function_call.name = function_call.name;\n                    if (function_call.arguments) {\n                        (_a = choice.message.function_call).arguments ?? (_a.arguments = '');\n                        choice.message.function_call.arguments += function_call.arguments;\n                    }\n                }\n            }\n            if (tool_calls) {\n                if (!choice.message.tool_calls)\n                    choice.message.tool_calls = [];\n                for (const { index, id, type, function: fn } of tool_calls) {\n                    const tool_call = ((_b = choice.message.tool_calls)[index] ?? (_b[index] = {}));\n                    if (id)\n                        tool_call.id = id;\n                    if (type)\n                        tool_call.type = type;\n                    if (fn)\n                        tool_call.function ?? (tool_call.function = { arguments: '' });\n                    if (fn?.name)\n                        tool_call.function.name = fn.name;\n                    if (fn?.arguments)\n                        tool_call.function.arguments += fn.arguments;\n                }\n            }\n        }\n        return snapshot;\n    }, Symbol.asyncIterator)]() {\n        const pushQueue = [];\n        const readQueue = [];\n        let done = false;\n        this.on('chunk', (chunk) => {\n            const reader = readQueue.shift();\n            if (reader) {\n                reader(chunk);\n            }\n            else {\n                pushQueue.push(chunk);\n            }\n        });\n        this.on('end', () => {\n            done = true;\n            for (const reader of readQueue) {\n                reader(undefined);\n            }\n            readQueue.length = 0;\n        });\n        return {\n            next: async () => {\n                if (!pushQueue.length) {\n                    if (done) {\n                        return { value: undefined, done: true };\n                    }\n                    return new Promise((resolve) => readQueue.push(resolve)).then((chunk) => (chunk ? { value: chunk, done: false } : { value: undefined, done: true }));\n                }\n                const chunk = pushQueue.shift();\n                return { value: chunk, done: false };\n            },\n        };\n    }\n    toReadableStream() {\n        const stream = new Stream(this[Symbol.asyncIterator].bind(this), this.controller);\n        return stream.toReadableStream();\n    }\n}\nfunction finalizeChatCompletion(snapshot) {\n    const { id, choices, created, model } = snapshot;\n    return {\n        id,\n        choices: choices.map(({ message, finish_reason, index }) => {\n            if (!finish_reason)\n                throw new OpenAIError(`missing finish_reason for choice ${index}`);\n            const { content = null, function_call, tool_calls } = message;\n            const role = message.role; // this is what we expect; in theory it could be different which would make our types a slight lie but would be fine.\n            if (!role)\n                throw new OpenAIError(`missing role for choice ${index}`);\n            if (function_call) {\n                const { arguments: args, name } = function_call;\n                if (args == null)\n                    throw new OpenAIError(`missing function_call.arguments for choice ${index}`);\n                if (!name)\n                    throw new OpenAIError(`missing function_call.name for choice ${index}`);\n                return { message: { content, function_call: { arguments: args, name }, role }, finish_reason, index };\n            }\n            if (tool_calls) {\n                return {\n                    index,\n                    finish_reason,\n                    message: {\n                        role,\n                        content,\n                        tool_calls: tool_calls.map((tool_call, i) => {\n                            const { function: fn, type, id } = tool_call;\n                            const { arguments: args, name } = fn || {};\n                            if (id == null)\n                                throw new OpenAIError(`missing choices[${index}].tool_calls[${i}].id\\n${str(snapshot)}`);\n                            if (type == null)\n                                throw new OpenAIError(`missing choices[${index}].tool_calls[${i}].type\\n${str(snapshot)}`);\n                            if (name == null)\n                                throw new OpenAIError(`missing choices[${index}].tool_calls[${i}].function.name\\n${str(snapshot)}`);\n                            if (args == null)\n                                throw new OpenAIError(`missing choices[${index}].tool_calls[${i}].function.arguments\\n${str(snapshot)}`);\n                            return { id, type, function: { name, arguments: args } };\n                        }),\n                    },\n                };\n            }\n            return { message: { content: content, role }, finish_reason, index };\n        }),\n        created,\n        model,\n        object: 'chat.completion',\n    };\n}\nfunction str(x) {\n    return JSON.stringify(x);\n}\n//# sourceMappingURL=ChatCompletionStream.mjs.map",
  "import { ChatCompletionStream } from \"./ChatCompletionStream.mjs\";\nexport class ChatCompletionStreamingRunner extends ChatCompletionStream {\n    static fromReadableStream(stream) {\n        const runner = new ChatCompletionStreamingRunner();\n        runner._run(() => runner._fromReadableStream(stream));\n        return runner;\n    }\n    static runFunctions(completions, params, options) {\n        const runner = new ChatCompletionStreamingRunner();\n        runner._run(() => runner._runFunctions(completions, params, {\n            ...options,\n            headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'runFunctions' },\n        }));\n        return runner;\n    }\n    static runTools(completions, params, options) {\n        const runner = new ChatCompletionStreamingRunner();\n        runner._run(() => runner._runTools(completions, params, {\n            ...options,\n            headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'runTools' },\n        }));\n        return runner;\n    }\n}\n//# sourceMappingURL=ChatCompletionStreamingRunner.mjs.map",
  "// File generated from our OpenAPI spec by Stainless.\nimport { APIResource } from 'openai/resource';\nimport { ChatCompletionRunner } from 'openai/lib/ChatCompletionRunner';\nexport { ChatCompletionRunner } from 'openai/lib/ChatCompletionRunner';\nimport { ChatCompletionStreamingRunner, } from 'openai/lib/ChatCompletionStreamingRunner';\nexport { ChatCompletionStreamingRunner, } from 'openai/lib/ChatCompletionStreamingRunner';\nexport { ParsingFunction, } from 'openai/lib/RunnableFunction';\nimport { ChatCompletionStream } from 'openai/lib/ChatCompletionStream';\nexport { ChatCompletionStream } from 'openai/lib/ChatCompletionStream';\nexport class Completions extends APIResource {\n    runFunctions(body, options) {\n        if (body.stream) {\n            return ChatCompletionStreamingRunner.runFunctions(this._client.chat.completions, body, options);\n        }\n        return ChatCompletionRunner.runFunctions(this._client.chat.completions, body, options);\n    }\n    runTools(body, options) {\n        if (body.stream) {\n            return ChatCompletionStreamingRunner.runTools(this._client.chat.completions, body, options);\n        }\n        return ChatCompletionRunner.runTools(this._client.chat.completions, body, options);\n    }\n    /**\n     * Creates a chat completion stream\n     */\n    stream(body, options) {\n        return ChatCompletionStream.createChatCompletion(this._client.chat.completions, body, options);\n    }\n}\n//# sourceMappingURL=completions.mjs.map",
  "// File generated from our OpenAPI spec by Stainless.\nimport { APIResource } from 'openai/resource';\nimport * as CompletionsAPI from 'openai/resources/beta/chat/completions';\nexport class Chat extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.completions = new CompletionsAPI.Completions(this._client);\n    }\n}\n(function (Chat) {\n    Chat.Completions = CompletionsAPI.Completions;\n})(Chat || (Chat = {}));\n//# sourceMappingURL=chat.mjs.map",
  "// File generated from our OpenAPI spec by Stainless.\nimport { APIResource } from 'openai/resource';\nimport { isRequestOptions } from 'openai/core';\nimport * as FilesAPI from 'openai/resources/beta/threads/messages/files';\nimport { CursorPage } from 'openai/pagination';\nexport class Files extends APIResource {\n    /**\n     * Retrieves a message file.\n     */\n    retrieve(threadId, messageId, fileId, options) {\n        return this._client.get(`/threads/${threadId}/messages/${messageId}/files/${fileId}`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v1', ...options?.headers },\n        });\n    }\n    list(threadId, messageId, query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.list(threadId, messageId, {}, query);\n        }\n        return this._client.getAPIList(`/threads/${threadId}/messages/${messageId}/files`, MessageFilesPage, {\n            query,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v1', ...options?.headers },\n        });\n    }\n}\nexport class MessageFilesPage extends CursorPage {\n}\n(function (Files) {\n    Files.MessageFilesPage = FilesAPI.MessageFilesPage;\n})(Files || (Files = {}));\n//# sourceMappingURL=files.mjs.map",
  "// File generated from our OpenAPI spec by Stainless.\nimport { APIResource } from 'openai/resource';\nimport { isRequestOptions } from 'openai/core';\nimport * as MessagesAPI from 'openai/resources/beta/threads/messages/messages';\nimport * as FilesAPI from 'openai/resources/beta/threads/messages/files';\nimport { CursorPage } from 'openai/pagination';\nexport class Messages extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.files = new FilesAPI.Files(this._client);\n    }\n    /**\n     * Create a message.\n     */\n    create(threadId, body, options) {\n        return this._client.post(`/threads/${threadId}/messages`, {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v1', ...options?.headers },\n        });\n    }\n    /**\n     * Retrieve a message.\n     */\n    retrieve(threadId, messageId, options) {\n        return this._client.get(`/threads/${threadId}/messages/${messageId}`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v1', ...options?.headers },\n        });\n    }\n    /**\n     * Modifies a message.\n     */\n    update(threadId, messageId, body, options) {\n        return this._client.post(`/threads/${threadId}/messages/${messageId}`, {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v1', ...options?.headers },\n        });\n    }\n    list(threadId, query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.list(threadId, {}, query);\n        }\n        return this._client.getAPIList(`/threads/${threadId}/messages`, ThreadMessagesPage, {\n            query,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v1', ...options?.headers },\n        });\n    }\n}\nexport class ThreadMessagesPage extends CursorPage {\n}\n(function (Messages) {\n    Messages.ThreadMessagesPage = MessagesAPI.ThreadMessagesPage;\n    Messages.Files = FilesAPI.Files;\n    Messages.MessageFilesPage = FilesAPI.MessageFilesPage;\n})(Messages || (Messages = {}));\n//# sourceMappingURL=messages.mjs.map",
  "// File generated from our OpenAPI spec by Stainless.\nimport { APIResource } from 'openai/resource';\nimport { isRequestOptions } from 'openai/core';\nimport * as StepsAPI from 'openai/resources/beta/threads/runs/steps';\nimport { CursorPage } from 'openai/pagination';\nexport class Steps extends APIResource {\n    /**\n     * Retrieves a run step.\n     */\n    retrieve(threadId, runId, stepId, options) {\n        return this._client.get(`/threads/${threadId}/runs/${runId}/steps/${stepId}`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v1', ...options?.headers },\n        });\n    }\n    list(threadId, runId, query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.list(threadId, runId, {}, query);\n        }\n        return this._client.getAPIList(`/threads/${threadId}/runs/${runId}/steps`, RunStepsPage, {\n            query,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v1', ...options?.headers },\n        });\n    }\n}\nexport class RunStepsPage extends CursorPage {\n}\n(function (Steps) {\n    Steps.RunStepsPage = StepsAPI.RunStepsPage;\n})(Steps || (Steps = {}));\n//# sourceMappingURL=steps.mjs.map",
  "// File generated from our OpenAPI spec by Stainless.\nimport { APIResource } from 'openai/resource';\nimport { isRequestOptions } from 'openai/core';\nimport * as RunsAPI from 'openai/resources/beta/threads/runs/runs';\nimport * as StepsAPI from 'openai/resources/beta/threads/runs/steps';\nimport { CursorPage } from 'openai/pagination';\nexport class Runs extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.steps = new StepsAPI.Steps(this._client);\n    }\n    /**\n     * Create a run.\n     */\n    create(threadId, body, options) {\n        return this._client.post(`/threads/${threadId}/runs`, {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v1', ...options?.headers },\n        });\n    }\n    /**\n     * Retrieves a run.\n     */\n    retrieve(threadId, runId, options) {\n        return this._client.get(`/threads/${threadId}/runs/${runId}`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v1', ...options?.headers },\n        });\n    }\n    /**\n     * Modifies a run.\n     */\n    update(threadId, runId, body, options) {\n        return this._client.post(`/threads/${threadId}/runs/${runId}`, {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v1', ...options?.headers },\n        });\n    }\n    list(threadId, query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.list(threadId, {}, query);\n        }\n        return this._client.getAPIList(`/threads/${threadId}/runs`, RunsPage, {\n            query,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v1', ...options?.headers },\n        });\n    }\n    /**\n     * Cancels a run that is `in_progress`.\n     */\n    cancel(threadId, runId, options) {\n        return this._client.post(`/threads/${threadId}/runs/${runId}/cancel`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v1', ...options?.headers },\n        });\n    }\n    /**\n     * When a run has the `status: \"requires_action\"` and `required_action.type` is\n     * `submit_tool_outputs`, this endpoint can be used to submit the outputs from the\n     * tool calls once they're all completed. All outputs must be submitted in a single\n     * request.\n     */\n    submitToolOutputs(threadId, runId, body, options) {\n        return this._client.post(`/threads/${threadId}/runs/${runId}/submit_tool_outputs`, {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v1', ...options?.headers },\n        });\n    }\n}\nexport class RunsPage extends CursorPage {\n}\n(function (Runs) {\n    Runs.RunsPage = RunsAPI.RunsPage;\n    Runs.Steps = StepsAPI.Steps;\n    Runs.RunStepsPage = StepsAPI.RunStepsPage;\n})(Runs || (Runs = {}));\n//# sourceMappingURL=runs.mjs.map",
  "// File generated from our OpenAPI spec by Stainless.\nimport { APIResource } from 'openai/resource';\nimport { isRequestOptions } from 'openai/core';\nimport * as MessagesAPI from 'openai/resources/beta/threads/messages/messages';\nimport * as RunsAPI from 'openai/resources/beta/threads/runs/runs';\nexport class Threads extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.runs = new RunsAPI.Runs(this._client);\n        this.messages = new MessagesAPI.Messages(this._client);\n    }\n    create(body = {}, options) {\n        if (isRequestOptions(body)) {\n            return this.create({}, body);\n        }\n        return this._client.post('/threads', {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v1', ...options?.headers },\n        });\n    }\n    /**\n     * Retrieves a thread.\n     */\n    retrieve(threadId, options) {\n        return this._client.get(`/threads/${threadId}`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v1', ...options?.headers },\n        });\n    }\n    /**\n     * Modifies a thread.\n     */\n    update(threadId, body, options) {\n        return this._client.post(`/threads/${threadId}`, {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v1', ...options?.headers },\n        });\n    }\n    /**\n     * Delete a thread.\n     */\n    del(threadId, options) {\n        return this._client.delete(`/threads/${threadId}`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v1', ...options?.headers },\n        });\n    }\n    /**\n     * Create a thread and run it in one request.\n     */\n    createAndRun(body, options) {\n        return this._client.post('/threads/runs', {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v1', ...options?.headers },\n        });\n    }\n}\n(function (Threads) {\n    Threads.Runs = RunsAPI.Runs;\n    Threads.RunsPage = RunsAPI.RunsPage;\n    Threads.Messages = MessagesAPI.Messages;\n    Threads.ThreadMessagesPage = MessagesAPI.ThreadMessagesPage;\n})(Threads || (Threads = {}));\n//# sourceMappingURL=threads.mjs.map",
  "// File generated from our OpenAPI spec by Stainless.\nimport { APIResource } from 'openai/resource';\nimport * as AssistantsAPI from 'openai/resources/beta/assistants/assistants';\nimport * as ChatAPI from 'openai/resources/beta/chat/chat';\nimport * as ThreadsAPI from 'openai/resources/beta/threads/threads';\nexport class Beta extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.chat = new ChatAPI.Chat(this._client);\n        this.assistants = new AssistantsAPI.Assistants(this._client);\n        this.threads = new ThreadsAPI.Threads(this._client);\n    }\n}\n(function (Beta) {\n    Beta.Chat = ChatAPI.Chat;\n    Beta.Assistants = AssistantsAPI.Assistants;\n    Beta.AssistantsPage = AssistantsAPI.AssistantsPage;\n    Beta.Threads = ThreadsAPI.Threads;\n})(Beta || (Beta = {}));\n//# sourceMappingURL=beta.mjs.map",
  "// File generated from our OpenAPI spec by Stainless.\nimport { APIResource } from 'openai/resource';\nexport class Completions extends APIResource {\n    create(body, options) {\n        return this._client.post('/completions', { body, ...options, stream: body.stream ?? false });\n    }\n}\n(function (Completions) {\n})(Completions || (Completions = {}));\n//# sourceMappingURL=completions.mjs.map",
  "// File generated from our OpenAPI spec by Stainless.\nimport { APIResource } from 'openai/resource';\nexport class Embeddings extends APIResource {\n    /**\n     * Creates an embedding vector representing the input text.\n     */\n    create(body, options) {\n        return this._client.post('/embeddings', { body, ...options });\n    }\n}\n(function (Embeddings) {\n})(Embeddings || (Embeddings = {}));\n//# sourceMappingURL=embeddings.mjs.map",
  "// File generated from our OpenAPI spec by Stainless.\nimport { APIResource } from 'openai/resource';\nexport class Edits extends APIResource {\n    /**\n     * Creates a new edit for the provided input, instruction, and parameters.\n     *\n     * @deprecated The Edits API is deprecated; please use Chat Completions instead.\n     *\n     * https://openai.com/blog/gpt-4-api-general-availability#deprecation-of-the-edits-api\n     */\n    create(body, options) {\n        return this._client.post('/edits', { body, ...options });\n    }\n}\n(function (Edits) {\n})(Edits || (Edits = {}));\n//# sourceMappingURL=edits.mjs.map",
  "// File generated from our OpenAPI spec by Stainless.\nimport { APIResource } from 'openai/resource';\nimport { isRequestOptions } from 'openai/core';\nimport { sleep } from 'openai/core';\nimport { APIConnectionTimeoutError } from 'openai/error';\nimport * as FilesAPI from 'openai/resources/files';\nimport { multipartFormRequestOptions } from 'openai/core';\nimport { Page } from 'openai/pagination';\nexport class Files extends APIResource {\n    /**\n     * Upload a file that can be used across various endpoints/features. The size of\n     * all the files uploaded by one organization can be up to 100 GB.\n     *\n     * The size of individual files for can be a maximum of 512MB. See the\n     * [Assistants Tools guide](https://platform.openai.com/docs/assistants/tools) to\n     * learn more about the types of files supported. The Fine-tuning API only supports\n     * `.jsonl` files.\n     *\n     * Please [contact us](https://help.openai.com/) if you need to increase these\n     * storage limits.\n     */\n    create(body, options) {\n        return this._client.post('/files', multipartFormRequestOptions({ body, ...options }));\n    }\n    /**\n     * Returns information about a specific file.\n     */\n    retrieve(fileId, options) {\n        return this._client.get(`/files/${fileId}`, options);\n    }\n    list(query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.list({}, query);\n        }\n        return this._client.getAPIList('/files', FileObjectsPage, { query, ...options });\n    }\n    /**\n     * Delete a file.\n     */\n    del(fileId, options) {\n        return this._client.delete(`/files/${fileId}`, options);\n    }\n    /**\n     * Returns the contents of the specified file.\n     */\n    content(fileId, options) {\n        return this._client.get(`/files/${fileId}/content`, { ...options, __binaryResponse: true });\n    }\n    /**\n     * Returns the contents of the specified file.\n     *\n     * @deprecated The `.content()` method should be used instead\n     */\n    retrieveContent(fileId, options) {\n        return this._client.get(`/files/${fileId}/content`, {\n            ...options,\n            headers: { Accept: 'application/json', ...options?.headers },\n        });\n    }\n    /**\n     * Waits for the given file to be processed, default timeout is 30 mins.\n     */\n    async waitForProcessing(id, { pollInterval = 5000, maxWait = 30 * 60 * 1000 } = {}) {\n        const TERMINAL_STATES = new Set(['processed', 'error', 'deleted']);\n        const start = Date.now();\n        let file = await this.retrieve(id);\n        while (!file.status || !TERMINAL_STATES.has(file.status)) {\n            await sleep(pollInterval);\n            file = await this.retrieve(id);\n            if (Date.now() - start > maxWait) {\n                throw new APIConnectionTimeoutError({\n                    message: `Giving up on waiting for file ${id} to finish processing after ${maxWait} milliseconds.`,\n                });\n            }\n        }\n        return file;\n    }\n}\n/**\n * Note: no pagination actually occurs yet, this is for forwards-compatibility.\n */\nexport class FileObjectsPage extends Page {\n}\n(function (Files) {\n    Files.FileObjectsPage = FilesAPI.FileObjectsPage;\n})(Files || (Files = {}));\n//# sourceMappingURL=files.mjs.map",
  "// File generated from our OpenAPI spec by Stainless.\nimport { APIResource } from 'openai/resource';\nimport * as FineTunesAPI from 'openai/resources/fine-tunes';\nimport { Page } from 'openai/pagination';\nexport class FineTunes extends APIResource {\n    /**\n     * Creates a job that fine-tunes a specified model from a given dataset.\n     *\n     * Response includes details of the enqueued job including job status and the name\n     * of the fine-tuned models once complete.\n     *\n     * [Learn more about fine-tuning](https://platform.openai.com/docs/guides/legacy-fine-tuning)\n     */\n    create(body, options) {\n        return this._client.post('/fine-tunes', { body, ...options });\n    }\n    /**\n     * Gets info about the fine-tune job.\n     *\n     * [Learn more about fine-tuning](https://platform.openai.com/docs/guides/legacy-fine-tuning)\n     */\n    retrieve(fineTuneId, options) {\n        return this._client.get(`/fine-tunes/${fineTuneId}`, options);\n    }\n    /**\n     * List your organization's fine-tuning jobs\n     */\n    list(options) {\n        return this._client.getAPIList('/fine-tunes', FineTunesPage, options);\n    }\n    /**\n     * Immediately cancel a fine-tune job.\n     */\n    cancel(fineTuneId, options) {\n        return this._client.post(`/fine-tunes/${fineTuneId}/cancel`, options);\n    }\n    listEvents(fineTuneId, query, options) {\n        return this._client.get(`/fine-tunes/${fineTuneId}/events`, {\n            query,\n            timeout: 86400000,\n            ...options,\n            stream: query?.stream ?? false,\n        });\n    }\n}\n/**\n * Note: no pagination actually occurs yet, this is for forwards-compatibility.\n */\nexport class FineTunesPage extends Page {\n}\n(function (FineTunes) {\n    FineTunes.FineTunesPage = FineTunesAPI.FineTunesPage;\n})(FineTunes || (FineTunes = {}));\n//# sourceMappingURL=fine-tunes.mjs.map",
  "// File generated from our OpenAPI spec by Stainless.\nimport { APIResource } from 'openai/resource';\nimport { isRequestOptions } from 'openai/core';\nimport * as JobsAPI from 'openai/resources/fine-tuning/jobs';\nimport { CursorPage } from 'openai/pagination';\nexport class Jobs extends APIResource {\n    /**\n     * Creates a job that fine-tunes a specified model from a given dataset.\n     *\n     * Response includes details of the enqueued job including job status and the name\n     * of the fine-tuned models once complete.\n     *\n     * [Learn more about fine-tuning](https://platform.openai.com/docs/guides/fine-tuning)\n     */\n    create(body, options) {\n        return this._client.post('/fine_tuning/jobs', { body, ...options });\n    }\n    /**\n     * Get info about a fine-tuning job.\n     *\n     * [Learn more about fine-tuning](https://platform.openai.com/docs/guides/fine-tuning)\n     */\n    retrieve(fineTuningJobId, options) {\n        return this._client.get(`/fine_tuning/jobs/${fineTuningJobId}`, options);\n    }\n    list(query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.list({}, query);\n        }\n        return this._client.getAPIList('/fine_tuning/jobs', FineTuningJobsPage, { query, ...options });\n    }\n    /**\n     * Immediately cancel a fine-tune job.\n     */\n    cancel(fineTuningJobId, options) {\n        return this._client.post(`/fine_tuning/jobs/${fineTuningJobId}/cancel`, options);\n    }\n    listEvents(fineTuningJobId, query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.listEvents(fineTuningJobId, {}, query);\n        }\n        return this._client.getAPIList(`/fine_tuning/jobs/${fineTuningJobId}/events`, FineTuningJobEventsPage, {\n            query,\n            ...options,\n        });\n    }\n}\nexport class FineTuningJobsPage extends CursorPage {\n}\nexport class FineTuningJobEventsPage extends CursorPage {\n}\n(function (Jobs) {\n    Jobs.FineTuningJobsPage = JobsAPI.FineTuningJobsPage;\n    Jobs.FineTuningJobEventsPage = JobsAPI.FineTuningJobEventsPage;\n})(Jobs || (Jobs = {}));\n//# sourceMappingURL=jobs.mjs.map",
  "// File generated from our OpenAPI spec by Stainless.\nimport { APIResource } from 'openai/resource';\nimport * as JobsAPI from 'openai/resources/fine-tuning/jobs';\nexport class FineTuning extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.jobs = new JobsAPI.Jobs(this._client);\n    }\n}\n(function (FineTuning) {\n    FineTuning.Jobs = JobsAPI.Jobs;\n    FineTuning.FineTuningJobsPage = JobsAPI.FineTuningJobsPage;\n    FineTuning.FineTuningJobEventsPage = JobsAPI.FineTuningJobEventsPage;\n})(FineTuning || (FineTuning = {}));\n//# sourceMappingURL=fine-tuning.mjs.map",
  "// File generated from our OpenAPI spec by Stainless.\nimport { APIResource } from 'openai/resource';\nimport { multipartFormRequestOptions } from 'openai/core';\nexport class Images extends APIResource {\n    /**\n     * Creates a variation of a given image.\n     */\n    createVariation(body, options) {\n        return this._client.post('/images/variations', multipartFormRequestOptions({ body, ...options }));\n    }\n    /**\n     * Creates an edited or extended image given an original image and a prompt.\n     */\n    edit(body, options) {\n        return this._client.post('/images/edits', multipartFormRequestOptions({ body, ...options }));\n    }\n    /**\n     * Creates an image given a prompt.\n     */\n    generate(body, options) {\n        return this._client.post('/images/generations', { body, ...options });\n    }\n}\n(function (Images) {\n})(Images || (Images = {}));\n//# sourceMappingURL=images.mjs.map",
  "// File generated from our OpenAPI spec by Stainless.\nimport { APIResource } from 'openai/resource';\nimport * as ModelsAPI from 'openai/resources/models';\nimport { Page } from 'openai/pagination';\nexport class Models extends APIResource {\n    /**\n     * Retrieves a model instance, providing basic information about the model such as\n     * the owner and permissioning.\n     */\n    retrieve(model, options) {\n        return this._client.get(`/models/${model}`, options);\n    }\n    /**\n     * Lists the currently available models, and provides basic information about each\n     * one such as the owner and availability.\n     */\n    list(options) {\n        return this._client.getAPIList('/models', ModelsPage, options);\n    }\n    /**\n     * Delete a fine-tuned model. You must have the Owner role in your organization to\n     * delete a model.\n     */\n    del(model, options) {\n        return this._client.delete(`/models/${model}`, options);\n    }\n}\n/**\n * Note: no pagination actually occurs yet, this is for forwards-compatibility.\n */\nexport class ModelsPage extends Page {\n}\n(function (Models) {\n    Models.ModelsPage = ModelsAPI.ModelsPage;\n})(Models || (Models = {}));\n//# sourceMappingURL=models.mjs.map",
  "// File generated from our OpenAPI spec by Stainless.\nimport { APIResource } from 'openai/resource';\nexport class Moderations extends APIResource {\n    /**\n     * Classifies if text violates OpenAI's Content Policy\n     */\n    create(body, options) {\n        return this._client.post('/moderations', { body, ...options });\n    }\n}\n(function (Moderations) {\n})(Moderations || (Moderations = {}));\n//# sourceMappingURL=moderations.mjs.map",
  "// File generated from our OpenAPI spec by Stainless.\nvar _a;\nimport * as Core from \"./core.mjs\";\nimport * as Pagination from \"./pagination.mjs\";\nimport * as Errors from \"./error.mjs\";\nimport * as Uploads from \"./uploads.mjs\";\nimport * as API from 'openai/resources/index';\n/** API Client for interfacing with the OpenAI API. */\nexport class OpenAI extends Core.APIClient {\n    /**\n     * API Client for interfacing with the OpenAI API.\n     *\n     * @param {string} [opts.apiKey==process.env['OPENAI_API_KEY'] ?? undefined]\n     * @param {string | null} [opts.organization==process.env['OPENAI_ORG_ID'] ?? null]\n     * @param {string} [opts.baseURL] - Override the default base URL for the API.\n     * @param {number} [opts.timeout=10 minutes] - The maximum amount of time (in milliseconds) the client will wait for a response before timing out.\n     * @param {number} [opts.httpAgent] - An HTTP agent used to manage HTTP(s) connections.\n     * @param {Core.Fetch} [opts.fetch] - Specify a custom `fetch` function implementation.\n     * @param {number} [opts.maxRetries=2] - The maximum number of times the client will retry a request.\n     * @param {Core.Headers} opts.defaultHeaders - Default headers to include with every request to the API.\n     * @param {Core.DefaultQuery} opts.defaultQuery - Default query parameters to include with every request to the API.\n     * @param {boolean} [opts.dangerouslyAllowBrowser=false] - By default, client-side use of this library is not allowed, as it risks exposing your secret API credentials to attackers.\n     */\n    constructor({ apiKey = Core.readEnv('OPENAI_API_KEY'), organization = Core.readEnv('OPENAI_ORG_ID') ?? null, ...opts } = {}) {\n        if (apiKey === undefined) {\n            throw new Errors.OpenAIError(\"The OPENAI_API_KEY environment variable is missing or empty; either provide it, or instantiate the OpenAI client with an apiKey option, like new OpenAI({ apiKey: 'My API Key' }).\");\n        }\n        const options = {\n            apiKey,\n            organization,\n            ...opts,\n            baseURL: opts.baseURL ?? `https://api.openai.com/v1`,\n        };\n        if (!options.dangerouslyAllowBrowser && Core.isRunningInBrowser()) {\n            throw new Errors.OpenAIError(\"It looks like you're running in a browser-like environment.\\n\\nThis is disabled by default, as it risks exposing your secret API credentials to attackers.\\nIf you understand the risks and have appropriate mitigations in place,\\nyou can set the `dangerouslyAllowBrowser` option to `true`, e.g.,\\n\\nnew OpenAI({ apiKey, dangerouslyAllowBrowser: true });\\n\\nhttps://help.openai.com/en/articles/5112595-best-practices-for-api-key-safety\\n\");\n        }\n        super({\n            baseURL: options.baseURL,\n            timeout: options.timeout ?? 600000 /* 10 minutes */,\n            httpAgent: options.httpAgent,\n            maxRetries: options.maxRetries,\n            fetch: options.fetch,\n        });\n        this.completions = new API.Completions(this);\n        this.chat = new API.Chat(this);\n        this.edits = new API.Edits(this);\n        this.embeddings = new API.Embeddings(this);\n        this.files = new API.Files(this);\n        this.images = new API.Images(this);\n        this.audio = new API.Audio(this);\n        this.moderations = new API.Moderations(this);\n        this.models = new API.Models(this);\n        this.fineTuning = new API.FineTuning(this);\n        this.fineTunes = new API.FineTunes(this);\n        this.beta = new API.Beta(this);\n        this._options = options;\n        this.apiKey = apiKey;\n        this.organization = organization;\n    }\n    defaultQuery() {\n        return this._options.defaultQuery;\n    }\n    defaultHeaders(opts) {\n        return {\n            ...super.defaultHeaders(opts),\n            'OpenAI-Organization': this.organization,\n            ...this._options.defaultHeaders,\n        };\n    }\n    authHeaders(opts) {\n        return { Authorization: `Bearer ${this.apiKey}` };\n    }\n}\n_a = OpenAI;\nOpenAI.OpenAI = _a;\nOpenAI.OpenAIError = Errors.OpenAIError;\nOpenAI.APIError = Errors.APIError;\nOpenAI.APIConnectionError = Errors.APIConnectionError;\nOpenAI.APIConnectionTimeoutError = Errors.APIConnectionTimeoutError;\nOpenAI.APIUserAbortError = Errors.APIUserAbortError;\nOpenAI.NotFoundError = Errors.NotFoundError;\nOpenAI.ConflictError = Errors.ConflictError;\nOpenAI.RateLimitError = Errors.RateLimitError;\nOpenAI.BadRequestError = Errors.BadRequestError;\nOpenAI.AuthenticationError = Errors.AuthenticationError;\nOpenAI.InternalServerError = Errors.InternalServerError;\nOpenAI.PermissionDeniedError = Errors.PermissionDeniedError;\nOpenAI.UnprocessableEntityError = Errors.UnprocessableEntityError;\nexport const { OpenAIError, APIError, APIConnectionError, APIConnectionTimeoutError, APIUserAbortError, NotFoundError, ConflictError, RateLimitError, BadRequestError, AuthenticationError, InternalServerError, PermissionDeniedError, UnprocessableEntityError, } = Errors;\nexport var toFile = Uploads.toFile;\nexport var fileFromPath = Uploads.fileFromPath;\n(function (OpenAI) {\n    // Helper functions\n    OpenAI.toFile = Uploads.toFile;\n    OpenAI.fileFromPath = Uploads.fileFromPath;\n    OpenAI.Page = Pagination.Page;\n    OpenAI.CursorPage = Pagination.CursorPage;\n    OpenAI.Completions = API.Completions;\n    OpenAI.Chat = API.Chat;\n    OpenAI.Edits = API.Edits;\n    OpenAI.Embeddings = API.Embeddings;\n    OpenAI.Files = API.Files;\n    OpenAI.FileObjectsPage = API.FileObjectsPage;\n    OpenAI.Images = API.Images;\n    OpenAI.Audio = API.Audio;\n    OpenAI.Moderations = API.Moderations;\n    OpenAI.Models = API.Models;\n    OpenAI.ModelsPage = API.ModelsPage;\n    OpenAI.FineTuning = API.FineTuning;\n    OpenAI.FineTunes = API.FineTunes;\n    OpenAI.FineTunesPage = API.FineTunesPage;\n    OpenAI.Beta = API.Beta;\n})(OpenAI || (OpenAI = {}));\nexport default OpenAI;\n//# sourceMappingURL=index.mjs.map",
  "// File generated from our OpenAPI spec by Stainless.\nvar _a;\nimport * as Core from \"./core.mjs\";\nimport * as Pagination from \"./pagination.mjs\";\nimport * as Errors from \"./error.mjs\";\nimport * as Uploads from \"./uploads.mjs\";\nimport * as API from 'openai/resources/index';\n/** API Client for interfacing with the OpenAI API. */\nexport class OpenAI extends Core.APIClient {\n    /**\n     * API Client for interfacing with the OpenAI API.\n     *\n     * @param {string} [opts.apiKey==process.env['OPENAI_API_KEY'] ?? undefined]\n     * @param {string | null} [opts.organization==process.env['OPENAI_ORG_ID'] ?? null]\n     * @param {string} [opts.baseURL] - Override the default base URL for the API.\n     * @param {number} [opts.timeout=10 minutes] - The maximum amount of time (in milliseconds) the client will wait for a response before timing out.\n     * @param {number} [opts.httpAgent] - An HTTP agent used to manage HTTP(s) connections.\n     * @param {Core.Fetch} [opts.fetch] - Specify a custom `fetch` function implementation.\n     * @param {number} [opts.maxRetries=2] - The maximum number of times the client will retry a request.\n     * @param {Core.Headers} opts.defaultHeaders - Default headers to include with every request to the API.\n     * @param {Core.DefaultQuery} opts.defaultQuery - Default query parameters to include with every request to the API.\n     * @param {boolean} [opts.dangerouslyAllowBrowser=false] - By default, client-side use of this library is not allowed, as it risks exposing your secret API credentials to attackers.\n     */\n    constructor({ apiKey = Core.readEnv('OPENAI_API_KEY'), organization = Core.readEnv('OPENAI_ORG_ID') ?? null, ...opts } = {}) {\n        if (apiKey === undefined) {\n            throw new Errors.OpenAIError(\"The OPENAI_API_KEY environment variable is missing or empty; either provide it, or instantiate the OpenAI client with an apiKey option, like new OpenAI({ apiKey: 'My API Key' }).\");\n        }\n        const options = {\n            apiKey,\n            organization,\n            ...opts,\n            baseURL: opts.baseURL ?? `https://api.openai.com/v1`,\n        };\n        if (!options.dangerouslyAllowBrowser && Core.isRunningInBrowser()) {\n            throw new Errors.OpenAIError(\"It looks like you're running in a browser-like environment.\\n\\nThis is disabled by default, as it risks exposing your secret API credentials to attackers.\\nIf you understand the risks and have appropriate mitigations in place,\\nyou can set the `dangerouslyAllowBrowser` option to `true`, e.g.,\\n\\nnew OpenAI({ apiKey, dangerouslyAllowBrowser: true });\\n\\nhttps://help.openai.com/en/articles/5112595-best-practices-for-api-key-safety\\n\");\n        }\n        super({\n            baseURL: options.baseURL,\n            timeout: options.timeout ?? 600000 /* 10 minutes */,\n            httpAgent: options.httpAgent,\n            maxRetries: options.maxRetries,\n            fetch: options.fetch,\n        });\n        this.completions = new API.Completions(this);\n        this.chat = new API.Chat(this);\n        this.edits = new API.Edits(this);\n        this.embeddings = new API.Embeddings(this);\n        this.files = new API.Files(this);\n        this.images = new API.Images(this);\n        this.audio = new API.Audio(this);\n        this.moderations = new API.Moderations(this);\n        this.models = new API.Models(this);\n        this.fineTuning = new API.FineTuning(this);\n        this.fineTunes = new API.FineTunes(this);\n        this.beta = new API.Beta(this);\n        this._options = options;\n        this.apiKey = apiKey;\n        this.organization = organization;\n    }\n    defaultQuery() {\n        return this._options.defaultQuery;\n    }\n    defaultHeaders(opts) {\n        return {\n            ...super.defaultHeaders(opts),\n            'OpenAI-Organization': this.organization,\n            ...this._options.defaultHeaders,\n        };\n    }\n    authHeaders(opts) {\n        return { Authorization: `Bearer ${this.apiKey}` };\n    }\n}\n_a = OpenAI;\nOpenAI.OpenAI = _a;\nOpenAI.OpenAIError = Errors.OpenAIError;\nOpenAI.APIError = Errors.APIError;\nOpenAI.APIConnectionError = Errors.APIConnectionError;\nOpenAI.APIConnectionTimeoutError = Errors.APIConnectionTimeoutError;\nOpenAI.APIUserAbortError = Errors.APIUserAbortError;\nOpenAI.NotFoundError = Errors.NotFoundError;\nOpenAI.ConflictError = Errors.ConflictError;\nOpenAI.RateLimitError = Errors.RateLimitError;\nOpenAI.BadRequestError = Errors.BadRequestError;\nOpenAI.AuthenticationError = Errors.AuthenticationError;\nOpenAI.InternalServerError = Errors.InternalServerError;\nOpenAI.PermissionDeniedError = Errors.PermissionDeniedError;\nOpenAI.UnprocessableEntityError = Errors.UnprocessableEntityError;\nexport const { OpenAIError, APIError, APIConnectionError, APIConnectionTimeoutError, APIUserAbortError, NotFoundError, ConflictError, RateLimitError, BadRequestError, AuthenticationError, InternalServerError, PermissionDeniedError, UnprocessableEntityError, } = Errors;\nexport var toFile = Uploads.toFile;\nexport var fileFromPath = Uploads.fileFromPath;\n(function (OpenAI) {\n    // Helper functions\n    OpenAI.toFile = Uploads.toFile;\n    OpenAI.fileFromPath = Uploads.fileFromPath;\n    OpenAI.Page = Pagination.Page;\n    OpenAI.CursorPage = Pagination.CursorPage;\n    OpenAI.Completions = API.Completions;\n    OpenAI.Chat = API.Chat;\n    OpenAI.Edits = API.Edits;\n    OpenAI.Embeddings = API.Embeddings;\n    OpenAI.Files = API.Files;\n    OpenAI.FileObjectsPage = API.FileObjectsPage;\n    OpenAI.Images = API.Images;\n    OpenAI.Audio = API.Audio;\n    OpenAI.Moderations = API.Moderations;\n    OpenAI.Models = API.Models;\n    OpenAI.ModelsPage = API.ModelsPage;\n    OpenAI.FineTuning = API.FineTuning;\n    OpenAI.FineTunes = API.FineTunes;\n    OpenAI.FineTunesPage = API.FineTunesPage;\n    OpenAI.Beta = API.Beta;\n})(OpenAI || (OpenAI = {}));\nexport default OpenAI;\n//# sourceMappingURL=index.mjs.map",
  "// eslint-disable-next-line @typescript-eslint/unbound-method\nconst objectToString = Object.prototype.toString;\n\n/**\n * Checks whether given value's type is one of a few Error or Error-like\n * {@link isError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isError(wat) {\n  switch (objectToString.call(wat)) {\n    case '[object Error]':\n    case '[object Exception]':\n    case '[object DOMException]':\n      return true;\n    default:\n      return isInstanceOf(wat, Error);\n  }\n}\n/**\n * Checks whether given value is an instance of the given built-in class.\n *\n * @param wat The value to be checked\n * @param className\n * @returns A boolean representing the result.\n */\nfunction isBuiltin(wat, className) {\n  return objectToString.call(wat) === `[object ${className}]`;\n}\n\n/**\n * Checks whether given value's type is ErrorEvent\n * {@link isErrorEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isErrorEvent(wat) {\n  return isBuiltin(wat, 'ErrorEvent');\n}\n\n/**\n * Checks whether given value's type is DOMError\n * {@link isDOMError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isDOMError(wat) {\n  return isBuiltin(wat, 'DOMError');\n}\n\n/**\n * Checks whether given value's type is DOMException\n * {@link isDOMException}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isDOMException(wat) {\n  return isBuiltin(wat, 'DOMException');\n}\n\n/**\n * Checks whether given value's type is a string\n * {@link isString}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isString(wat) {\n  return isBuiltin(wat, 'String');\n}\n\n/**\n * Checks whether given value is a primitive (undefined, null, number, boolean, string, bigint, symbol)\n * {@link isPrimitive}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isPrimitive(wat) {\n  return wat === null || (typeof wat !== 'object' && typeof wat !== 'function');\n}\n\n/**\n * Checks whether given value's type is an object literal\n * {@link isPlainObject}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isPlainObject(wat) {\n  return isBuiltin(wat, 'Object');\n}\n\n/**\n * Checks whether given value's type is an Event instance\n * {@link isEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isEvent(wat) {\n  return typeof Event !== 'undefined' && isInstanceOf(wat, Event);\n}\n\n/**\n * Checks whether given value's type is an Element instance\n * {@link isElement}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isElement(wat) {\n  return typeof Element !== 'undefined' && isInstanceOf(wat, Element);\n}\n\n/**\n * Checks whether given value's type is an regexp\n * {@link isRegExp}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isRegExp(wat) {\n  return isBuiltin(wat, 'RegExp');\n}\n\n/**\n * Checks whether given value has a then function.\n * @param wat A value to be checked.\n */\nfunction isThenable(wat) {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return Boolean(wat && wat.then && typeof wat.then === 'function');\n}\n\n/**\n * Checks whether given value's type is a SyntheticEvent\n * {@link isSyntheticEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isSyntheticEvent(wat) {\n  return isPlainObject(wat) && 'nativeEvent' in wat && 'preventDefault' in wat && 'stopPropagation' in wat;\n}\n\n/**\n * Checks whether given value is NaN\n * {@link isNaN}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isNaN(wat) {\n  return typeof wat === 'number' && wat !== wat;\n}\n\n/**\n * Checks whether given value's type is an instance of provided constructor.\n * {@link isInstanceOf}.\n *\n * @param wat A value to be checked.\n * @param base A constructor to be used in a check.\n * @returns A boolean representing the result.\n */\nfunction isInstanceOf(wat, base) {\n  try {\n    return wat instanceof base;\n  } catch (_e) {\n    return false;\n  }\n}\n\n/**\n * Checks whether given value's type is a Vue ViewModel.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isVueViewModel(wat) {\n  // Not using Object.prototype.toString because in Vue 3 it would read the instance's Symbol(Symbol.toStringTag) property.\n  return !!(typeof wat === 'object' && wat !== null && ((wat ).__isVue || (wat )._isVue));\n}\n\nexport { isDOMError, isDOMException, isElement, isError, isErrorEvent, isEvent, isInstanceOf, isNaN, isPlainObject, isPrimitive, isRegExp, isString, isSyntheticEvent, isThenable, isVueViewModel };\n//# sourceMappingURL=is.js.map\n",
  "// eslint-disable-next-line @typescript-eslint/unbound-method\nconst objectToString = Object.prototype.toString;\n\n/**\n * Checks whether given value's type is one of a few Error or Error-like\n * {@link isError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isError(wat) {\n  switch (objectToString.call(wat)) {\n    case '[object Error]':\n    case '[object Exception]':\n    case '[object DOMException]':\n      return true;\n    default:\n      return isInstanceOf(wat, Error);\n  }\n}\n/**\n * Checks whether given value is an instance of the given built-in class.\n *\n * @param wat The value to be checked\n * @param className\n * @returns A boolean representing the result.\n */\nfunction isBuiltin(wat, className) {\n  return objectToString.call(wat) === `[object ${className}]`;\n}\n\n/**\n * Checks whether given value's type is ErrorEvent\n * {@link isErrorEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isErrorEvent(wat) {\n  return isBuiltin(wat, 'ErrorEvent');\n}\n\n/**\n * Checks whether given value's type is DOMError\n * {@link isDOMError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isDOMError(wat) {\n  return isBuiltin(wat, 'DOMError');\n}\n\n/**\n * Checks whether given value's type is DOMException\n * {@link isDOMException}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isDOMException(wat) {\n  return isBuiltin(wat, 'DOMException');\n}\n\n/**\n * Checks whether given value's type is a string\n * {@link isString}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isString(wat) {\n  return isBuiltin(wat, 'String');\n}\n\n/**\n * Checks whether given value is a primitive (undefined, null, number, boolean, string, bigint, symbol)\n * {@link isPrimitive}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isPrimitive(wat) {\n  return wat === null || (typeof wat !== 'object' && typeof wat !== 'function');\n}\n\n/**\n * Checks whether given value's type is an object literal\n * {@link isPlainObject}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isPlainObject(wat) {\n  return isBuiltin(wat, 'Object');\n}\n\n/**\n * Checks whether given value's type is an Event instance\n * {@link isEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isEvent(wat) {\n  return typeof Event !== 'undefined' && isInstanceOf(wat, Event);\n}\n\n/**\n * Checks whether given value's type is an Element instance\n * {@link isElement}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isElement(wat) {\n  return typeof Element !== 'undefined' && isInstanceOf(wat, Element);\n}\n\n/**\n * Checks whether given value's type is an regexp\n * {@link isRegExp}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isRegExp(wat) {\n  return isBuiltin(wat, 'RegExp');\n}\n\n/**\n * Checks whether given value has a then function.\n * @param wat A value to be checked.\n */\nfunction isThenable(wat) {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return Boolean(wat && wat.then && typeof wat.then === 'function');\n}\n\n/**\n * Checks whether given value's type is a SyntheticEvent\n * {@link isSyntheticEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isSyntheticEvent(wat) {\n  return isPlainObject(wat) && 'nativeEvent' in wat && 'preventDefault' in wat && 'stopPropagation' in wat;\n}\n\n/**\n * Checks whether given value is NaN\n * {@link isNaN}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isNaN(wat) {\n  return typeof wat === 'number' && wat !== wat;\n}\n\n/**\n * Checks whether given value's type is an instance of provided constructor.\n * {@link isInstanceOf}.\n *\n * @param wat A value to be checked.\n * @param base A constructor to be used in a check.\n * @returns A boolean representing the result.\n */\nfunction isInstanceOf(wat, base) {\n  try {\n    return wat instanceof base;\n  } catch (_e) {\n    return false;\n  }\n}\n\n/**\n * Checks whether given value's type is a Vue ViewModel.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isVueViewModel(wat) {\n  // Not using Object.prototype.toString because in Vue 3 it would read the instance's Symbol(Symbol.toStringTag) property.\n  return !!(typeof wat === 'object' && wat !== null && ((wat ).__isVue || (wat )._isVue));\n}\n\nexport { isDOMError, isDOMException, isElement, isError, isErrorEvent, isEvent, isInstanceOf, isNaN, isPlainObject, isPrimitive, isRegExp, isString, isSyntheticEvent, isThenable, isVueViewModel };\n//# sourceMappingURL=is.js.map\n",
  "import { isVueViewModel, isString, isRegExp } from './is.js';\n\n/**\n * Truncates given string to the maximum characters count\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string (0 = unlimited)\n * @returns string Encoded\n */\nfunction truncate(str, max = 0) {\n  if (typeof str !== 'string' || max === 0) {\n    return str;\n  }\n  return str.length <= max ? str : `${str.slice(0, max)}...`;\n}\n\n/**\n * This is basically just `trim_line` from\n * https://github.com/getsentry/sentry/blob/master/src/sentry/lang/javascript/processor.py#L67\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string\n * @returns string Encoded\n */\nfunction snipLine(line, colno) {\n  let newLine = line;\n  const lineLength = newLine.length;\n  if (lineLength <= 150) {\n    return newLine;\n  }\n  if (colno > lineLength) {\n    // eslint-disable-next-line no-param-reassign\n    colno = lineLength;\n  }\n\n  let start = Math.max(colno - 60, 0);\n  if (start < 5) {\n    start = 0;\n  }\n\n  let end = Math.min(start + 140, lineLength);\n  if (end > lineLength - 5) {\n    end = lineLength;\n  }\n  if (end === lineLength) {\n    start = Math.max(end - 140, 0);\n  }\n\n  newLine = newLine.slice(start, end);\n  if (start > 0) {\n    newLine = `'{snip} ${newLine}`;\n  }\n  if (end < lineLength) {\n    newLine += ' {snip}';\n  }\n\n  return newLine;\n}\n\n/**\n * Join values in array\n * @param input array of values to be joined together\n * @param delimiter string to be placed in-between values\n * @returns Joined values\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction safeJoin(input, delimiter) {\n  if (!Array.isArray(input)) {\n    return '';\n  }\n\n  const output = [];\n  // eslint-disable-next-line @typescript-eslint/prefer-for-of\n  for (let i = 0; i < input.length; i++) {\n    const value = input[i];\n    try {\n      // This is a hack to fix a Vue3-specific bug that causes an infinite loop of\n      // console warnings. This happens when a Vue template is rendered with\n      // an undeclared variable, which we try to stringify, ultimately causing\n      // Vue to issue another warning which repeats indefinitely.\n      // see: https://github.com/getsentry/sentry-javascript/pull/8981\n      if (isVueViewModel(value)) {\n        output.push('[VueViewModel]');\n      } else {\n        output.push(String(value));\n      }\n    } catch (e) {\n      output.push('[value cannot be serialized]');\n    }\n  }\n\n  return output.join(delimiter);\n}\n\n/**\n * Checks if the given value matches a regex or string\n *\n * @param value The string to test\n * @param pattern Either a regex or a string against which `value` will be matched\n * @param requireExactStringMatch If true, `value` must match `pattern` exactly. If false, `value` will match\n * `pattern` if it contains `pattern`. Only applies to string-type patterns.\n */\nfunction isMatchingPattern(\n  value,\n  pattern,\n  requireExactStringMatch = false,\n) {\n  if (!isString(value)) {\n    return false;\n  }\n\n  if (isRegExp(pattern)) {\n    return pattern.test(value);\n  }\n  if (isString(pattern)) {\n    return requireExactStringMatch ? value === pattern : value.includes(pattern);\n  }\n\n  return false;\n}\n\n/**\n * Test the given string against an array of strings and regexes. By default, string matching is done on a\n * substring-inclusion basis rather than a strict equality basis\n *\n * @param testString The string to test\n * @param patterns The patterns against which to test the string\n * @param requireExactStringMatch If true, `testString` must match one of the given string patterns exactly in order to\n * count. If false, `testString` will match a string pattern if it contains that pattern.\n * @returns\n */\nfunction stringMatchesSomePattern(\n  testString,\n  patterns = [],\n  requireExactStringMatch = false,\n) {\n  return patterns.some(pattern => isMatchingPattern(testString, pattern, requireExactStringMatch));\n}\n\nexport { isMatchingPattern, safeJoin, snipLine, stringMatchesSomePattern, truncate };\n//# sourceMappingURL=string.js.map\n",
  "import { isVueViewModel, isString, isRegExp } from './is.js';\n\n/**\n * Truncates given string to the maximum characters count\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string (0 = unlimited)\n * @returns string Encoded\n */\nfunction truncate(str, max = 0) {\n  if (typeof str !== 'string' || max === 0) {\n    return str;\n  }\n  return str.length <= max ? str : `${str.slice(0, max)}...`;\n}\n\n/**\n * This is basically just `trim_line` from\n * https://github.com/getsentry/sentry/blob/master/src/sentry/lang/javascript/processor.py#L67\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string\n * @returns string Encoded\n */\nfunction snipLine(line, colno) {\n  let newLine = line;\n  const lineLength = newLine.length;\n  if (lineLength <= 150) {\n    return newLine;\n  }\n  if (colno > lineLength) {\n    // eslint-disable-next-line no-param-reassign\n    colno = lineLength;\n  }\n\n  let start = Math.max(colno - 60, 0);\n  if (start < 5) {\n    start = 0;\n  }\n\n  let end = Math.min(start + 140, lineLength);\n  if (end > lineLength - 5) {\n    end = lineLength;\n  }\n  if (end === lineLength) {\n    start = Math.max(end - 140, 0);\n  }\n\n  newLine = newLine.slice(start, end);\n  if (start > 0) {\n    newLine = `'{snip} ${newLine}`;\n  }\n  if (end < lineLength) {\n    newLine += ' {snip}';\n  }\n\n  return newLine;\n}\n\n/**\n * Join values in array\n * @param input array of values to be joined together\n * @param delimiter string to be placed in-between values\n * @returns Joined values\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction safeJoin(input, delimiter) {\n  if (!Array.isArray(input)) {\n    return '';\n  }\n\n  const output = [];\n  // eslint-disable-next-line @typescript-eslint/prefer-for-of\n  for (let i = 0; i < input.length; i++) {\n    const value = input[i];\n    try {\n      // This is a hack to fix a Vue3-specific bug that causes an infinite loop of\n      // console warnings. This happens when a Vue template is rendered with\n      // an undeclared variable, which we try to stringify, ultimately causing\n      // Vue to issue another warning which repeats indefinitely.\n      // see: https://github.com/getsentry/sentry-javascript/pull/8981\n      if (isVueViewModel(value)) {\n        output.push('[VueViewModel]');\n      } else {\n        output.push(String(value));\n      }\n    } catch (e) {\n      output.push('[value cannot be serialized]');\n    }\n  }\n\n  return output.join(delimiter);\n}\n\n/**\n * Checks if the given value matches a regex or string\n *\n * @param value The string to test\n * @param pattern Either a regex or a string against which `value` will be matched\n * @param requireExactStringMatch If true, `value` must match `pattern` exactly. If false, `value` will match\n * `pattern` if it contains `pattern`. Only applies to string-type patterns.\n */\nfunction isMatchingPattern(\n  value,\n  pattern,\n  requireExactStringMatch = false,\n) {\n  if (!isString(value)) {\n    return false;\n  }\n\n  if (isRegExp(pattern)) {\n    return pattern.test(value);\n  }\n  if (isString(pattern)) {\n    return requireExactStringMatch ? value === pattern : value.includes(pattern);\n  }\n\n  return false;\n}\n\n/**\n * Test the given string against an array of strings and regexes. By default, string matching is done on a\n * substring-inclusion basis rather than a strict equality basis\n *\n * @param testString The string to test\n * @param patterns The patterns against which to test the string\n * @param requireExactStringMatch If true, `testString` must match one of the given string patterns exactly in order to\n * count. If false, `testString` will match a string pattern if it contains that pattern.\n * @returns\n */\nfunction stringMatchesSomePattern(\n  testString,\n  patterns = [],\n  requireExactStringMatch = false,\n) {\n  return patterns.some(pattern => isMatchingPattern(testString, pattern, requireExactStringMatch));\n}\n\nexport { isMatchingPattern, safeJoin, snipLine, stringMatchesSomePattern, truncate };\n//# sourceMappingURL=string.js.map\n",
  "import { isInstanceOf } from './is.js';\nimport { truncate } from './string.js';\n\n/**\n * Creates exceptions inside `event.exception.values` for errors that are nested on properties based on the `key` parameter.\n */\nfunction applyAggregateErrorsToEvent(\n  exceptionFromErrorImplementation,\n  parser,\n  maxValueLimit = 250,\n  key,\n  limit,\n  event,\n  hint,\n) {\n  if (!event.exception || !event.exception.values || !hint || !isInstanceOf(hint.originalException, Error)) {\n    return;\n  }\n\n  // Generally speaking the last item in `event.exception.values` is the exception originating from the original Error\n  const originalException =\n    event.exception.values.length > 0 ? event.exception.values[event.exception.values.length - 1] : undefined;\n\n  // We only create exception grouping if there is an exception in the event.\n  if (originalException) {\n    event.exception.values = truncateAggregateExceptions(\n      aggregateExceptionsFromError(\n        exceptionFromErrorImplementation,\n        parser,\n        limit,\n        hint.originalException ,\n        key,\n        event.exception.values,\n        originalException,\n        0,\n      ),\n      maxValueLimit,\n    );\n  }\n}\n\nfunction aggregateExceptionsFromError(\n  exceptionFromErrorImplementation,\n  parser,\n  limit,\n  error,\n  key,\n  prevExceptions,\n  exception,\n  exceptionId,\n) {\n  if (prevExceptions.length >= limit + 1) {\n    return prevExceptions;\n  }\n\n  let newExceptions = [...prevExceptions];\n\n  if (isInstanceOf(error[key], Error)) {\n    applyExceptionGroupFieldsForParentException(exception, exceptionId);\n    const newException = exceptionFromErrorImplementation(parser, error[key]);\n    const newExceptionId = newExceptions.length;\n    applyExceptionGroupFieldsForChildException(newException, key, newExceptionId, exceptionId);\n    newExceptions = aggregateExceptionsFromError(\n      exceptionFromErrorImplementation,\n      parser,\n      limit,\n      error[key],\n      key,\n      [newException, ...newExceptions],\n      newException,\n      newExceptionId,\n    );\n  }\n\n  // This will create exception grouping for AggregateErrors\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/AggregateError\n  if (Array.isArray(error.errors)) {\n    error.errors.forEach((childError, i) => {\n      if (isInstanceOf(childError, Error)) {\n        applyExceptionGroupFieldsForParentException(exception, exceptionId);\n        const newException = exceptionFromErrorImplementation(parser, childError);\n        const newExceptionId = newExceptions.length;\n        applyExceptionGroupFieldsForChildException(newException, `errors[${i}]`, newExceptionId, exceptionId);\n        newExceptions = aggregateExceptionsFromError(\n          exceptionFromErrorImplementation,\n          parser,\n          limit,\n          childError,\n          key,\n          [newException, ...newExceptions],\n          newException,\n          newExceptionId,\n        );\n      }\n    });\n  }\n\n  return newExceptions;\n}\n\nfunction applyExceptionGroupFieldsForParentException(exception, exceptionId) {\n  // Don't know if this default makes sense. The protocol requires us to set these values so we pick *some* default.\n  exception.mechanism = exception.mechanism || { type: 'generic', handled: true };\n\n  exception.mechanism = {\n    ...exception.mechanism,\n    is_exception_group: true,\n    exception_id: exceptionId,\n  };\n}\n\nfunction applyExceptionGroupFieldsForChildException(\n  exception,\n  source,\n  exceptionId,\n  parentId,\n) {\n  // Don't know if this default makes sense. The protocol requires us to set these values so we pick *some* default.\n  exception.mechanism = exception.mechanism || { type: 'generic', handled: true };\n\n  exception.mechanism = {\n    ...exception.mechanism,\n    type: 'chained',\n    source,\n    exception_id: exceptionId,\n    parent_id: parentId,\n  };\n}\n\n/**\n * Truncate the message (exception.value) of all exceptions in the event.\n * Because this event processor is ran after `applyClientOptions`,\n * we need to truncate the message of the added exceptions here.\n */\nfunction truncateAggregateExceptions(exceptions, maxValueLength) {\n  return exceptions.map(exception => {\n    if (exception.value) {\n      exception.value = truncate(exception.value, maxValueLength);\n    }\n    return exception;\n  });\n}\n\nexport { applyAggregateErrorsToEvent };\n//# sourceMappingURL=aggregate-errors.js.map\n",
  "/** Internal global with common properties and Sentry extensions  */\n\n// The code below for 'isGlobalObj' and 'GLOBAL_OBJ' was copied from core-js before modification\n// https://github.com/zloirock/core-js/blob/1b944df55282cdc99c90db5f49eb0b6eda2cc0a3/packages/core-js/internals/global.js\n// core-js has the following licence:\n//\n// Copyright (c) 2014-2022 Denis Pushkarev\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/** Returns 'obj' if it's the global object, otherwise returns undefined */\nfunction isGlobalObj(obj) {\n  return obj && obj.Math == Math ? obj : undefined;\n}\n\n/** Get's the global object for the current JavaScript runtime */\nconst GLOBAL_OBJ =\n  (typeof globalThis == 'object' && isGlobalObj(globalThis)) ||\n  // eslint-disable-next-line no-restricted-globals\n  (typeof window == 'object' && isGlobalObj(window)) ||\n  (typeof self == 'object' && isGlobalObj(self)) ||\n  (typeof global == 'object' && isGlobalObj(global)) ||\n  (function () {\n    return this;\n  })() ||\n  {};\n\n/**\n * @deprecated Use GLOBAL_OBJ instead or WINDOW from @sentry/browser. This will be removed in v8\n */\nfunction getGlobalObject() {\n  return GLOBAL_OBJ ;\n}\n\n/**\n * Returns a global singleton contained in the global `__SENTRY__` object.\n *\n * If the singleton doesn't already exist in `__SENTRY__`, it will be created using the given factory\n * function and added to the `__SENTRY__` object.\n *\n * @param name name of the global singleton on __SENTRY__\n * @param creator creator Factory function to create the singleton if it doesn't already exist on `__SENTRY__`\n * @param obj (Optional) The global object on which to look for `__SENTRY__`, if not `GLOBAL_OBJ`'s return value\n * @returns the singleton\n */\nfunction getGlobalSingleton(name, creator, obj) {\n  const gbl = (obj || GLOBAL_OBJ) ;\n  const __SENTRY__ = (gbl.__SENTRY__ = gbl.__SENTRY__ || {});\n  const singleton = __SENTRY__[name] || (__SENTRY__[name] = creator());\n  return singleton;\n}\n\nexport { GLOBAL_OBJ, getGlobalObject, getGlobalSingleton };\n//# sourceMappingURL=worldwide.js.map\n",
  "import { isString } from './is.js';\nimport { getGlobalObject } from './worldwide.js';\n\n// eslint-disable-next-line deprecation/deprecation\nconst WINDOW = getGlobalObject();\n\nconst DEFAULT_MAX_STRING_LENGTH = 80;\n\n/**\n * Given a child DOM element, returns a query-selector statement describing that\n * and its ancestors\n * e.g. [HTMLElement] => body > div > input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nfunction htmlTreeAsString(\n  elem,\n  options = {},\n) {\n\n  if (!elem) {\n    return '<unknown>';\n  }\n\n  // try/catch both:\n  // - accessing event.target (see getsentry/raven-js#838, #768)\n  // - `htmlTreeAsString` because it's complex, and just accessing the DOM incorrectly\n  // - can throw an exception in some circumstances.\n  try {\n    let currentElem = elem ;\n    const MAX_TRAVERSE_HEIGHT = 5;\n    const out = [];\n    let height = 0;\n    let len = 0;\n    const separator = ' > ';\n    const sepLength = separator.length;\n    let nextStr;\n    const keyAttrs = Array.isArray(options) ? options : options.keyAttrs;\n    const maxStringLength = (!Array.isArray(options) && options.maxStringLength) || DEFAULT_MAX_STRING_LENGTH;\n\n    while (currentElem && height++ < MAX_TRAVERSE_HEIGHT) {\n      nextStr = _htmlElementAsString(currentElem, keyAttrs);\n      // bail out if\n      // - nextStr is the 'html' element\n      // - the length of the string that would be created exceeds maxStringLength\n      //   (ignore this limit if we are on the first iteration)\n      if (nextStr === 'html' || (height > 1 && len + out.length * sepLength + nextStr.length >= maxStringLength)) {\n        break;\n      }\n\n      out.push(nextStr);\n\n      len += nextStr.length;\n      currentElem = currentElem.parentNode;\n    }\n\n    return out.reverse().join(separator);\n  } catch (_oO) {\n    return '<unknown>';\n  }\n}\n\n/**\n * Returns a simple, query-selector representation of a DOM element\n * e.g. [HTMLElement] => input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nfunction _htmlElementAsString(el, keyAttrs) {\n  const elem = el\n\n;\n\n  const out = [];\n  let className;\n  let classes;\n  let key;\n  let attr;\n  let i;\n\n  if (!elem || !elem.tagName) {\n    return '';\n  }\n\n  out.push(elem.tagName.toLowerCase());\n\n  // Pairs of attribute keys defined in `serializeAttribute` and their values on element.\n  const keyAttrPairs =\n    keyAttrs && keyAttrs.length\n      ? keyAttrs.filter(keyAttr => elem.getAttribute(keyAttr)).map(keyAttr => [keyAttr, elem.getAttribute(keyAttr)])\n      : null;\n\n  if (keyAttrPairs && keyAttrPairs.length) {\n    keyAttrPairs.forEach(keyAttrPair => {\n      out.push(`[${keyAttrPair[0]}=\"${keyAttrPair[1]}\"]`);\n    });\n  } else {\n    if (elem.id) {\n      out.push(`#${elem.id}`);\n    }\n\n    // eslint-disable-next-line prefer-const\n    className = elem.className;\n    if (className && isString(className)) {\n      classes = className.split(/\\s+/);\n      for (i = 0; i < classes.length; i++) {\n        out.push(`.${classes[i]}`);\n      }\n    }\n  }\n  const allowedAttrs = ['aria-label', 'type', 'name', 'title', 'alt'];\n  for (i = 0; i < allowedAttrs.length; i++) {\n    key = allowedAttrs[i];\n    attr = elem.getAttribute(key);\n    if (attr) {\n      out.push(`[${key}=\"${attr}\"]`);\n    }\n  }\n  return out.join('');\n}\n\n/**\n * A safe form of location.href\n */\nfunction getLocationHref() {\n  try {\n    return WINDOW.document.location.href;\n  } catch (oO) {\n    return '';\n  }\n}\n\n/**\n * Gets a DOM element by using document.querySelector.\n *\n * This wrapper will first check for the existance of the function before\n * actually calling it so that we don't have to take care of this check,\n * every time we want to access the DOM.\n *\n * Reason: DOM/querySelector is not available in all environments.\n *\n * We have to cast to any because utils can be consumed by a variety of environments,\n * and we don't want to break TS users. If you know what element will be selected by\n * `document.querySelector`, specify it as part of the generic call. For example,\n * `const element = getDomElement<Element>('selector');`\n *\n * @param selector the selector string passed on to document.querySelector\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction getDomElement(selector) {\n  if (WINDOW.document && WINDOW.document.querySelector) {\n    return WINDOW.document.querySelector(selector) ;\n  }\n  return null;\n}\n\nexport { getDomElement, getLocationHref, htmlTreeAsString };\n//# sourceMappingURL=browser.js.map\n",
  "import { isString } from './is.js';\nimport { getGlobalObject } from './worldwide.js';\n\n// eslint-disable-next-line deprecation/deprecation\nconst WINDOW = getGlobalObject();\n\nconst DEFAULT_MAX_STRING_LENGTH = 80;\n\n/**\n * Given a child DOM element, returns a query-selector statement describing that\n * and its ancestors\n * e.g. [HTMLElement] => body > div > input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nfunction htmlTreeAsString(\n  elem,\n  options = {},\n) {\n\n  if (!elem) {\n    return '<unknown>';\n  }\n\n  // try/catch both:\n  // - accessing event.target (see getsentry/raven-js#838, #768)\n  // - `htmlTreeAsString` because it's complex, and just accessing the DOM incorrectly\n  // - can throw an exception in some circumstances.\n  try {\n    let currentElem = elem ;\n    const MAX_TRAVERSE_HEIGHT = 5;\n    const out = [];\n    let height = 0;\n    let len = 0;\n    const separator = ' > ';\n    const sepLength = separator.length;\n    let nextStr;\n    const keyAttrs = Array.isArray(options) ? options : options.keyAttrs;\n    const maxStringLength = (!Array.isArray(options) && options.maxStringLength) || DEFAULT_MAX_STRING_LENGTH;\n\n    while (currentElem && height++ < MAX_TRAVERSE_HEIGHT) {\n      nextStr = _htmlElementAsString(currentElem, keyAttrs);\n      // bail out if\n      // - nextStr is the 'html' element\n      // - the length of the string that would be created exceeds maxStringLength\n      //   (ignore this limit if we are on the first iteration)\n      if (nextStr === 'html' || (height > 1 && len + out.length * sepLength + nextStr.length >= maxStringLength)) {\n        break;\n      }\n\n      out.push(nextStr);\n\n      len += nextStr.length;\n      currentElem = currentElem.parentNode;\n    }\n\n    return out.reverse().join(separator);\n  } catch (_oO) {\n    return '<unknown>';\n  }\n}\n\n/**\n * Returns a simple, query-selector representation of a DOM element\n * e.g. [HTMLElement] => input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nfunction _htmlElementAsString(el, keyAttrs) {\n  const elem = el\n\n;\n\n  const out = [];\n  let className;\n  let classes;\n  let key;\n  let attr;\n  let i;\n\n  if (!elem || !elem.tagName) {\n    return '';\n  }\n\n  out.push(elem.tagName.toLowerCase());\n\n  // Pairs of attribute keys defined in `serializeAttribute` and their values on element.\n  const keyAttrPairs =\n    keyAttrs && keyAttrs.length\n      ? keyAttrs.filter(keyAttr => elem.getAttribute(keyAttr)).map(keyAttr => [keyAttr, elem.getAttribute(keyAttr)])\n      : null;\n\n  if (keyAttrPairs && keyAttrPairs.length) {\n    keyAttrPairs.forEach(keyAttrPair => {\n      out.push(`[${keyAttrPair[0]}=\"${keyAttrPair[1]}\"]`);\n    });\n  } else {\n    if (elem.id) {\n      out.push(`#${elem.id}`);\n    }\n\n    // eslint-disable-next-line prefer-const\n    className = elem.className;\n    if (className && isString(className)) {\n      classes = className.split(/\\s+/);\n      for (i = 0; i < classes.length; i++) {\n        out.push(`.${classes[i]}`);\n      }\n    }\n  }\n  const allowedAttrs = ['aria-label', 'type', 'name', 'title', 'alt'];\n  for (i = 0; i < allowedAttrs.length; i++) {\n    key = allowedAttrs[i];\n    attr = elem.getAttribute(key);\n    if (attr) {\n      out.push(`[${key}=\"${attr}\"]`);\n    }\n  }\n  return out.join('');\n}\n\n/**\n * A safe form of location.href\n */\nfunction getLocationHref() {\n  try {\n    return WINDOW.document.location.href;\n  } catch (oO) {\n    return '';\n  }\n}\n\n/**\n * Gets a DOM element by using document.querySelector.\n *\n * This wrapper will first check for the existance of the function before\n * actually calling it so that we don't have to take care of this check,\n * every time we want to access the DOM.\n *\n * Reason: DOM/querySelector is not available in all environments.\n *\n * We have to cast to any because utils can be consumed by a variety of environments,\n * and we don't want to break TS users. If you know what element will be selected by\n * `document.querySelector`, specify it as part of the generic call. For example,\n * `const element = getDomElement<Element>('selector');`\n *\n * @param selector the selector string passed on to document.querySelector\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction getDomElement(selector) {\n  if (WINDOW.document && WINDOW.document.querySelector) {\n    return WINDOW.document.querySelector(selector) ;\n  }\n  return null;\n}\n\nexport { getDomElement, getLocationHref, htmlTreeAsString };\n//# sourceMappingURL=browser.js.map\n",
  "/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nconst DEBUG_BUILD = (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__);\n\nexport { DEBUG_BUILD };\n//# sourceMappingURL=debug-build.js.map\n",
  "import { DEBUG_BUILD } from './debug-build.js';\nimport { GLOBAL_OBJ } from './worldwide.js';\n\n/** Prefix for logging strings */\nconst PREFIX = 'Sentry Logger ';\n\nconst CONSOLE_LEVELS = [\n  'debug',\n  'info',\n  'warn',\n  'error',\n  'log',\n  'assert',\n  'trace',\n] ;\n\n/** This may be mutated by the console instrumentation. */\nconst originalConsoleMethods\n\n = {};\n\n/** JSDoc */\n\n/**\n * Temporarily disable sentry console instrumentations.\n *\n * @param callback The function to run against the original `console` messages\n * @returns The results of the callback\n */\nfunction consoleSandbox(callback) {\n  if (!('console' in GLOBAL_OBJ)) {\n    return callback();\n  }\n\n  const console = GLOBAL_OBJ.console ;\n  const wrappedFuncs = {};\n\n  const wrappedLevels = Object.keys(originalConsoleMethods) ;\n\n  // Restore all wrapped console methods\n  wrappedLevels.forEach(level => {\n    const originalConsoleMethod = originalConsoleMethods[level] ;\n    wrappedFuncs[level] = console[level] ;\n    console[level] = originalConsoleMethod;\n  });\n\n  try {\n    return callback();\n  } finally {\n    // Revert restoration to wrapped state\n    wrappedLevels.forEach(level => {\n      console[level] = wrappedFuncs[level] ;\n    });\n  }\n}\n\nfunction makeLogger() {\n  let enabled = false;\n  const logger = {\n    enable: () => {\n      enabled = true;\n    },\n    disable: () => {\n      enabled = false;\n    },\n    isEnabled: () => enabled,\n  };\n\n  if (DEBUG_BUILD) {\n    CONSOLE_LEVELS.forEach(name => {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      logger[name] = (...args) => {\n        if (enabled) {\n          consoleSandbox(() => {\n            GLOBAL_OBJ.console[name](`${PREFIX}[${name}]:`, ...args);\n          });\n        }\n      };\n    });\n  } else {\n    CONSOLE_LEVELS.forEach(name => {\n      logger[name] = () => undefined;\n    });\n  }\n\n  return logger ;\n}\n\nconst logger = makeLogger();\n\nexport { CONSOLE_LEVELS, consoleSandbox, logger, originalConsoleMethods };\n//# sourceMappingURL=logger.js.map\n",
  "import { DEBUG_BUILD } from './debug-build.js';\nimport { consoleSandbox, logger } from './logger.js';\n\n/** Regular expression used to parse a Dsn. */\nconst DSN_REGEX = /^(?:(\\w+):)\\/\\/(?:(\\w+)(?::(\\w+)?)?@)([\\w.-]+)(?::(\\d+))?\\/(.+)/;\n\nfunction isValidProtocol(protocol) {\n  return protocol === 'http' || protocol === 'https';\n}\n\n/**\n * Renders the string representation of this Dsn.\n *\n * By default, this will render the public representation without the password\n * component. To get the deprecated private representation, set `withPassword`\n * to true.\n *\n * @param withPassword When set to true, the password will be included.\n */\nfunction dsnToString(dsn, withPassword = false) {\n  const { host, path, pass, port, projectId, protocol, publicKey } = dsn;\n  return (\n    `${protocol}://${publicKey}${withPassword && pass ? `:${pass}` : ''}` +\n    `@${host}${port ? `:${port}` : ''}/${path ? `${path}/` : path}${projectId}`\n  );\n}\n\n/**\n * Parses a Dsn from a given string.\n *\n * @param str A Dsn as string\n * @returns Dsn as DsnComponents or undefined if @param str is not a valid DSN string\n */\nfunction dsnFromString(str) {\n  const match = DSN_REGEX.exec(str);\n\n  if (!match) {\n    // This should be logged to the console\n    consoleSandbox(() => {\n      // eslint-disable-next-line no-console\n      console.error(`Invalid Sentry Dsn: ${str}`);\n    });\n    return undefined;\n  }\n\n  const [protocol, publicKey, pass = '', host, port = '', lastPath] = match.slice(1);\n  let path = '';\n  let projectId = lastPath;\n\n  const split = projectId.split('/');\n  if (split.length > 1) {\n    path = split.slice(0, -1).join('/');\n    projectId = split.pop() ;\n  }\n\n  if (projectId) {\n    const projectMatch = projectId.match(/^\\d+/);\n    if (projectMatch) {\n      projectId = projectMatch[0];\n    }\n  }\n\n  return dsnFromComponents({ host, pass, path, projectId, port, protocol: protocol , publicKey });\n}\n\nfunction dsnFromComponents(components) {\n  return {\n    protocol: components.protocol,\n    publicKey: components.publicKey || '',\n    pass: components.pass || '',\n    host: components.host,\n    port: components.port || '',\n    path: components.path || '',\n    projectId: components.projectId,\n  };\n}\n\nfunction validateDsn(dsn) {\n  if (!DEBUG_BUILD) {\n    return true;\n  }\n\n  const { port, projectId, protocol } = dsn;\n\n  const requiredComponents = ['protocol', 'publicKey', 'host', 'projectId'];\n  const hasMissingRequiredComponent = requiredComponents.find(component => {\n    if (!dsn[component]) {\n      logger.error(`Invalid Sentry Dsn: ${component} missing`);\n      return true;\n    }\n    return false;\n  });\n\n  if (hasMissingRequiredComponent) {\n    return false;\n  }\n\n  if (!projectId.match(/^\\d+$/)) {\n    logger.error(`Invalid Sentry Dsn: Invalid projectId ${projectId}`);\n    return false;\n  }\n\n  if (!isValidProtocol(protocol)) {\n    logger.error(`Invalid Sentry Dsn: Invalid protocol ${protocol}`);\n    return false;\n  }\n\n  if (port && isNaN(parseInt(port, 10))) {\n    logger.error(`Invalid Sentry Dsn: Invalid port ${port}`);\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Creates a valid Sentry Dsn object, identifying a Sentry instance and project.\n * @returns a valid DsnComponents object or `undefined` if @param from is an invalid DSN source\n */\nfunction makeDsn(from) {\n  const components = typeof from === 'string' ? dsnFromString(from) : dsnFromComponents(from);\n  if (!components || !validateDsn(components)) {\n    return undefined;\n  }\n  return components;\n}\n\nexport { dsnFromString, dsnToString, makeDsn };\n//# sourceMappingURL=dsn.js.map\n",
  "/** An error emitted by Sentry SDKs and related utilities. */\nclass SentryError extends Error {\n  /** Display name of this error instance. */\n\n   constructor( message, logLevel = 'warn') {\n    super(message);this.message = message;\n    this.name = new.target.prototype.constructor.name;\n    // This sets the prototype to be `Error`, not `SentryError`. It's unclear why we do this, but commenting this line\n    // out causes various (seemingly totally unrelated) playwright tests consistently time out. FYI, this makes\n    // instances of `SentryError` fail `obj instanceof SentryError` checks.\n    Object.setPrototypeOf(this, new.target.prototype);\n    this.logLevel = logLevel;\n  }\n}\n\nexport { SentryError };\n//# sourceMappingURL=error.js.map\n",
  "import { htmlTreeAsString } from './browser.js';\nimport { DEBUG_BUILD } from './debug-build.js';\nimport { isError, isEvent, isInstanceOf, isElement, isPlainObject, isPrimitive } from './is.js';\nimport { logger } from './logger.js';\nimport { truncate } from './string.js';\n\n/**\n * Replace a method in an object with a wrapped version of itself.\n *\n * @param source An object that contains a method to be wrapped.\n * @param name The name of the method to be wrapped.\n * @param replacementFactory A higher-order function that takes the original version of the given method and returns a\n * wrapped version. Note: The function returned by `replacementFactory` needs to be a non-arrow function, in order to\n * preserve the correct value of `this`, and the original method must be called using `origMethod.call(this, <other\n * args>)` or `origMethod.apply(this, [<other args>])` (rather than being called directly), again to preserve `this`.\n * @returns void\n */\nfunction fill(source, name, replacementFactory) {\n  if (!(name in source)) {\n    return;\n  }\n\n  const original = source[name] ;\n  const wrapped = replacementFactory(original) ;\n\n  // Make sure it's a function first, as we need to attach an empty prototype for `defineProperties` to work\n  // otherwise it'll throw \"TypeError: Object.defineProperties called on non-object\"\n  if (typeof wrapped === 'function') {\n    markFunctionWrapped(wrapped, original);\n  }\n\n  source[name] = wrapped;\n}\n\n/**\n * Defines a non-enumerable property on the given object.\n *\n * @param obj The object on which to set the property\n * @param name The name of the property to be set\n * @param value The value to which to set the property\n */\nfunction addNonEnumerableProperty(obj, name, value) {\n  try {\n    Object.defineProperty(obj, name, {\n      // enumerable: false, // the default, so we can save on bundle size by not explicitly setting it\n      value: value,\n      writable: true,\n      configurable: true,\n    });\n  } catch (o_O) {\n    DEBUG_BUILD && logger.log(`Failed to add non-enumerable property \"${name}\" to object`, obj);\n  }\n}\n\n/**\n * Remembers the original function on the wrapped function and\n * patches up the prototype.\n *\n * @param wrapped the wrapper function\n * @param original the original function that gets wrapped\n */\nfunction markFunctionWrapped(wrapped, original) {\n  try {\n    const proto = original.prototype || {};\n    wrapped.prototype = original.prototype = proto;\n    addNonEnumerableProperty(wrapped, '__sentry_original__', original);\n  } catch (o_O) {} // eslint-disable-line no-empty\n}\n\n/**\n * This extracts the original function if available.  See\n * `markFunctionWrapped` for more information.\n *\n * @param func the function to unwrap\n * @returns the unwrapped version of the function if available.\n */\nfunction getOriginalFunction(func) {\n  return func.__sentry_original__;\n}\n\n/**\n * Encodes given object into url-friendly format\n *\n * @param object An object that contains serializable values\n * @returns string Encoded\n */\nfunction urlEncode(object) {\n  return Object.keys(object)\n    .map(key => `${encodeURIComponent(key)}=${encodeURIComponent(object[key])}`)\n    .join('&');\n}\n\n/**\n * Transforms any `Error` or `Event` into a plain object with all of their enumerable properties, and some of their\n * non-enumerable properties attached.\n *\n * @param value Initial source that we have to transform in order for it to be usable by the serializer\n * @returns An Event or Error turned into an object - or the value argurment itself, when value is neither an Event nor\n *  an Error.\n */\nfunction convertToPlainObject(\n  value,\n)\n\n {\n  if (isError(value)) {\n    return {\n      message: value.message,\n      name: value.name,\n      stack: value.stack,\n      ...getOwnProperties(value),\n    };\n  } else if (isEvent(value)) {\n    const newObj\n\n = {\n      type: value.type,\n      target: serializeEventTarget(value.target),\n      currentTarget: serializeEventTarget(value.currentTarget),\n      ...getOwnProperties(value),\n    };\n\n    if (typeof CustomEvent !== 'undefined' && isInstanceOf(value, CustomEvent)) {\n      newObj.detail = value.detail;\n    }\n\n    return newObj;\n  } else {\n    return value;\n  }\n}\n\n/** Creates a string representation of the target of an `Event` object */\nfunction serializeEventTarget(target) {\n  try {\n    return isElement(target) ? htmlTreeAsString(target) : Object.prototype.toString.call(target);\n  } catch (_oO) {\n    return '<unknown>';\n  }\n}\n\n/** Filters out all but an object's own properties */\nfunction getOwnProperties(obj) {\n  if (typeof obj === 'object' && obj !== null) {\n    const extractedProps = {};\n    for (const property in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, property)) {\n        extractedProps[property] = (obj )[property];\n      }\n    }\n    return extractedProps;\n  } else {\n    return {};\n  }\n}\n\n/**\n * Given any captured exception, extract its keys and create a sorted\n * and truncated list that will be used inside the event message.\n * eg. `Non-error exception captured with keys: foo, bar, baz`\n */\nfunction extractExceptionKeysForMessage(exception, maxLength = 40) {\n  const keys = Object.keys(convertToPlainObject(exception));\n  keys.sort();\n\n  if (!keys.length) {\n    return '[object has no keys]';\n  }\n\n  if (keys[0].length >= maxLength) {\n    return truncate(keys[0], maxLength);\n  }\n\n  for (let includedKeys = keys.length; includedKeys > 0; includedKeys--) {\n    const serialized = keys.slice(0, includedKeys).join(', ');\n    if (serialized.length > maxLength) {\n      continue;\n    }\n    if (includedKeys === keys.length) {\n      return serialized;\n    }\n    return truncate(serialized, maxLength);\n  }\n\n  return '';\n}\n\n/**\n * Given any object, return a new object having removed all fields whose value was `undefined`.\n * Works recursively on objects and arrays.\n *\n * Attention: This function keeps circular references in the returned object.\n */\nfunction dropUndefinedKeys(inputValue) {\n  // This map keeps track of what already visited nodes map to.\n  // Our Set - based memoBuilder doesn't work here because we want to the output object to have the same circular\n  // references as the input object.\n  const memoizationMap = new Map();\n\n  // This function just proxies `_dropUndefinedKeys` to keep the `memoBuilder` out of this function's API\n  return _dropUndefinedKeys(inputValue, memoizationMap);\n}\n\nfunction _dropUndefinedKeys(inputValue, memoizationMap) {\n  if (isPlainObject(inputValue)) {\n    // If this node has already been visited due to a circular reference, return the object it was mapped to in the new object\n    const memoVal = memoizationMap.get(inputValue);\n    if (memoVal !== undefined) {\n      return memoVal ;\n    }\n\n    const returnValue = {};\n    // Store the mapping of this value in case we visit it again, in case of circular data\n    memoizationMap.set(inputValue, returnValue);\n\n    for (const key of Object.keys(inputValue)) {\n      if (typeof inputValue[key] !== 'undefined') {\n        returnValue[key] = _dropUndefinedKeys(inputValue[key], memoizationMap);\n      }\n    }\n\n    return returnValue ;\n  }\n\n  if (Array.isArray(inputValue)) {\n    // If this node has already been visited due to a circular reference, return the array it was mapped to in the new object\n    const memoVal = memoizationMap.get(inputValue);\n    if (memoVal !== undefined) {\n      return memoVal ;\n    }\n\n    const returnValue = [];\n    // Store the mapping of this value in case we visit it again, in case of circular data\n    memoizationMap.set(inputValue, returnValue);\n\n    inputValue.forEach((item) => {\n      returnValue.push(_dropUndefinedKeys(item, memoizationMap));\n    });\n\n    return returnValue ;\n  }\n\n  return inputValue;\n}\n\n/**\n * Ensure that something is an object.\n *\n * Turns `undefined` and `null` into `String`s and all other primitives into instances of their respective wrapper\n * classes (String, Boolean, Number, etc.). Acts as the identity function on non-primitives.\n *\n * @param wat The subject of the objectification\n * @returns A version of `wat` which can safely be used with `Object` class methods\n */\nfunction objectify(wat) {\n  let objectified;\n  switch (true) {\n    case wat === undefined || wat === null:\n      objectified = new String(wat);\n      break;\n\n    // Though symbols and bigints do have wrapper classes (`Symbol` and `BigInt`, respectively), for whatever reason\n    // those classes don't have constructors which can be used with the `new` keyword. We therefore need to cast each as\n    // an object in order to wrap it.\n    case typeof wat === 'symbol' || typeof wat === 'bigint':\n      objectified = Object(wat);\n      break;\n\n    // this will catch the remaining primitives: `String`, `Number`, and `Boolean`\n    case isPrimitive(wat):\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      objectified = new (wat ).constructor(wat);\n      break;\n\n    // by process of elimination, at this point we know that `wat` must already be an object\n    default:\n      objectified = wat;\n      break;\n  }\n  return objectified;\n}\n\nexport { addNonEnumerableProperty, convertToPlainObject, dropUndefinedKeys, extractExceptionKeysForMessage, fill, getOriginalFunction, markFunctionWrapped, objectify, urlEncode };\n//# sourceMappingURL=object.js.map\n",
  "/**\n * Does this filename look like it's part of the app code?\n */\nfunction filenameIsInApp(filename, isNative = false) {\n  const isInternal =\n    isNative ||\n    (filename &&\n      // It's not internal if it's an absolute linux path\n      !filename.startsWith('/') &&\n      // It's not internal if it's an absolute windows path\n      !filename.includes(':\\\\') &&\n      // It's not internal if the path is starting with a dot\n      !filename.startsWith('.') &&\n      // It's not internal if the frame has a protocol. In node, this is usually the case if the file got pre-processed with a bundler like webpack\n      !filename.match(/^[a-zA-Z]([a-zA-Z0-9.\\-+])*:\\/\\//)); // Schema from: https://stackoverflow.com/a/3641782\n\n  // in_app is all that's not an internal Node function or a module within node_modules\n  // note that isNative appears to return true even for node core libraries\n  // see https://github.com/getsentry/raven-node/issues/176\n\n  return !isInternal && filename !== undefined && !filename.includes('node_modules/');\n}\n\n/** Node Stack line parser */\n// eslint-disable-next-line complexity\nfunction node(getModule) {\n  const FILENAME_MATCH = /^\\s*[-]{4,}$/;\n  const FULL_MATCH = /at (?:async )?(?:(.+?)\\s+\\()?(?:(.+):(\\d+):(\\d+)?|([^)]+))\\)?/;\n\n  // eslint-disable-next-line complexity\n  return (line) => {\n    const lineMatch = line.match(FULL_MATCH);\n\n    if (lineMatch) {\n      let object;\n      let method;\n      let functionName;\n      let typeName;\n      let methodName;\n\n      if (lineMatch[1]) {\n        functionName = lineMatch[1];\n\n        let methodStart = functionName.lastIndexOf('.');\n        if (functionName[methodStart - 1] === '.') {\n          methodStart--;\n        }\n\n        if (methodStart > 0) {\n          object = functionName.slice(0, methodStart);\n          method = functionName.slice(methodStart + 1);\n          const objectEnd = object.indexOf('.Module');\n          if (objectEnd > 0) {\n            functionName = functionName.slice(objectEnd + 1);\n            object = object.slice(0, objectEnd);\n          }\n        }\n        typeName = undefined;\n      }\n\n      if (method) {\n        typeName = object;\n        methodName = method;\n      }\n\n      if (method === '<anonymous>') {\n        methodName = undefined;\n        functionName = undefined;\n      }\n\n      if (functionName === undefined) {\n        methodName = methodName || '<anonymous>';\n        functionName = typeName ? `${typeName}.${methodName}` : methodName;\n      }\n\n      let filename = lineMatch[2] && lineMatch[2].startsWith('file://') ? lineMatch[2].slice(7) : lineMatch[2];\n      const isNative = lineMatch[5] === 'native';\n\n      if (!filename && lineMatch[5] && !isNative) {\n        filename = lineMatch[5];\n      }\n\n      return {\n        filename,\n        module: getModule ? getModule(filename) : undefined,\n        function: functionName,\n        lineno: parseInt(lineMatch[3], 10) || undefined,\n        colno: parseInt(lineMatch[4], 10) || undefined,\n        in_app: filenameIsInApp(filename, isNative),\n      };\n    }\n\n    if (line.match(FILENAME_MATCH)) {\n      return {\n        filename: line,\n      };\n    }\n\n    return undefined;\n  };\n}\n\nexport { filenameIsInApp, node };\n//# sourceMappingURL=node-stack-trace.js.map\n",
  "import { node } from './node-stack-trace.js';\nexport { filenameIsInApp } from './node-stack-trace.js';\n\nconst STACKTRACE_FRAME_LIMIT = 50;\n// Used to sanitize webpack (error: *) wrapped stack errors\nconst WEBPACK_ERROR_REGEXP = /\\(error: (.*)\\)/;\nconst STRIP_FRAME_REGEXP = /captureMessage|captureException/;\n\n/**\n * Creates a stack parser with the supplied line parsers\n *\n * StackFrames are returned in the correct order for Sentry Exception\n * frames and with Sentry SDK internal frames removed from the top and bottom\n *\n */\nfunction createStackParser(...parsers) {\n  const sortedParsers = parsers.sort((a, b) => a[0] - b[0]).map(p => p[1]);\n\n  return (stack, skipFirst = 0) => {\n    const frames = [];\n    const lines = stack.split('\\n');\n\n    for (let i = skipFirst; i < lines.length; i++) {\n      const line = lines[i];\n      // Ignore lines over 1kb as they are unlikely to be stack frames.\n      // Many of the regular expressions use backtracking which results in run time that increases exponentially with\n      // input size. Huge strings can result in hangs/Denial of Service:\n      // https://github.com/getsentry/sentry-javascript/issues/2286\n      if (line.length > 1024) {\n        continue;\n      }\n\n      // https://github.com/getsentry/sentry-javascript/issues/5459\n      // Remove webpack (error: *) wrappers\n      const cleanedLine = WEBPACK_ERROR_REGEXP.test(line) ? line.replace(WEBPACK_ERROR_REGEXP, '$1') : line;\n\n      // https://github.com/getsentry/sentry-javascript/issues/7813\n      // Skip Error: lines\n      if (cleanedLine.match(/\\S*Error: /)) {\n        continue;\n      }\n\n      for (const parser of sortedParsers) {\n        const frame = parser(cleanedLine);\n\n        if (frame) {\n          frames.push(frame);\n          break;\n        }\n      }\n\n      if (frames.length >= STACKTRACE_FRAME_LIMIT) {\n        break;\n      }\n    }\n\n    return stripSentryFramesAndReverse(frames);\n  };\n}\n\n/**\n * Gets a stack parser implementation from Options.stackParser\n * @see Options\n *\n * If options contains an array of line parsers, it is converted into a parser\n */\nfunction stackParserFromStackParserOptions(stackParser) {\n  if (Array.isArray(stackParser)) {\n    return createStackParser(...stackParser);\n  }\n  return stackParser;\n}\n\n/**\n * Removes Sentry frames from the top and bottom of the stack if present and enforces a limit of max number of frames.\n * Assumes stack input is ordered from top to bottom and returns the reverse representation so call site of the\n * function that caused the crash is the last frame in the array.\n * @hidden\n */\nfunction stripSentryFramesAndReverse(stack) {\n  if (!stack.length) {\n    return [];\n  }\n\n  const localStack = Array.from(stack);\n\n  // If stack starts with one of our API calls, remove it (starts, meaning it's the top of the stack - aka last call)\n  if (/sentryWrapped/.test(localStack[localStack.length - 1].function || '')) {\n    localStack.pop();\n  }\n\n  // Reversing in the middle of the procedure allows us to just pop the values off the stack\n  localStack.reverse();\n\n  // If stack ends with one of our internal API calls, remove it (ends, meaning it's the bottom of the stack - aka top-most call)\n  if (STRIP_FRAME_REGEXP.test(localStack[localStack.length - 1].function || '')) {\n    localStack.pop();\n\n    // When using synthetic events, we will have a 2 levels deep stack, as `new Error('Sentry syntheticException')`\n    // is produced within the hub itself, making it:\n    //\n    //   Sentry.captureException()\n    //   getCurrentHub().captureException()\n    //\n    // instead of just the top `Sentry` call itself.\n    // This forces us to possibly strip an additional frame in the exact same was as above.\n    if (STRIP_FRAME_REGEXP.test(localStack[localStack.length - 1].function || '')) {\n      localStack.pop();\n    }\n  }\n\n  return localStack.slice(0, STACKTRACE_FRAME_LIMIT).map(frame => ({\n    ...frame,\n    filename: frame.filename || localStack[localStack.length - 1].filename,\n    function: frame.function || '?',\n  }));\n}\n\nconst defaultFunctionName = '<anonymous>';\n\n/**\n * Safely extract function name from itself\n */\nfunction getFunctionName(fn) {\n  try {\n    if (!fn || typeof fn !== 'function') {\n      return defaultFunctionName;\n    }\n    return fn.name || defaultFunctionName;\n  } catch (e) {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    return defaultFunctionName;\n  }\n}\n\n/**\n * Node.js stack line parser\n *\n * This is in @sentry/utils so it can be used from the Electron SDK in the browser for when `nodeIntegration == true`.\n * This allows it to be used without referencing or importing any node specific code which causes bundlers to complain\n */\nfunction nodeStackLineParser(getModule) {\n  return [90, node(getModule)];\n}\n\nexport { createStackParser, getFunctionName, nodeStackLineParser, stackParserFromStackParserOptions, stripSentryFramesAndReverse };\n//# sourceMappingURL=stacktrace.js.map\n",
  "import { DEBUG_BUILD } from '../debug-build.js';\nimport { logger } from '../logger.js';\nimport { getFunctionName } from '../stacktrace.js';\n\n// We keep the handlers globally\nconst handlers = {};\nconst instrumented = {};\n\n/** Add a handler function. */\nfunction addHandler(type, handler) {\n  handlers[type] = handlers[type] || [];\n  (handlers[type] ).push(handler);\n}\n\n/**\n * Reset all instrumentation handlers.\n * This can be used by tests to ensure we have a clean slate of instrumentation handlers.\n */\nfunction resetInstrumentationHandlers() {\n  Object.keys(handlers).forEach(key => {\n    handlers[key ] = undefined;\n  });\n}\n\n/** Maybe run an instrumentation function, unless it was already called. */\nfunction maybeInstrument(type, instrumentFn) {\n  if (!instrumented[type]) {\n    instrumentFn();\n    instrumented[type] = true;\n  }\n}\n\n/** Trigger handlers for a given instrumentation type. */\nfunction triggerHandlers(type, data) {\n  const typeHandlers = type && handlers[type];\n  if (!typeHandlers) {\n    return;\n  }\n\n  for (const handler of typeHandlers) {\n    try {\n      handler(data);\n    } catch (e) {\n      DEBUG_BUILD &&\n        logger.error(\n          `Error while triggering instrumentation handler.\\nType: ${type}\\nName: ${getFunctionName(handler)}\\nError:`,\n          e,\n        );\n    }\n  }\n}\n\nexport { addHandler, maybeInstrument, resetInstrumentationHandlers, triggerHandlers };\n//# sourceMappingURL=_handlers.js.map\n",
  "import { DEBUG_BUILD } from '../debug-build.js';\nimport { logger } from '../logger.js';\nimport { getFunctionName } from '../stacktrace.js';\n\n// We keep the handlers globally\nconst handlers = {};\nconst instrumented = {};\n\n/** Add a handler function. */\nfunction addHandler(type, handler) {\n  handlers[type] = handlers[type] || [];\n  (handlers[type] ).push(handler);\n}\n\n/**\n * Reset all instrumentation handlers.\n * This can be used by tests to ensure we have a clean slate of instrumentation handlers.\n */\nfunction resetInstrumentationHandlers() {\n  Object.keys(handlers).forEach(key => {\n    handlers[key ] = undefined;\n  });\n}\n\n/** Maybe run an instrumentation function, unless it was already called. */\nfunction maybeInstrument(type, instrumentFn) {\n  if (!instrumented[type]) {\n    instrumentFn();\n    instrumented[type] = true;\n  }\n}\n\n/** Trigger handlers for a given instrumentation type. */\nfunction triggerHandlers(type, data) {\n  const typeHandlers = type && handlers[type];\n  if (!typeHandlers) {\n    return;\n  }\n\n  for (const handler of typeHandlers) {\n    try {\n      handler(data);\n    } catch (e) {\n      DEBUG_BUILD &&\n        logger.error(\n          `Error while triggering instrumentation handler.\\nType: ${type}\\nName: ${getFunctionName(handler)}\\nError:`,\n          e,\n        );\n    }\n  }\n}\n\nexport { addHandler, maybeInstrument, resetInstrumentationHandlers, triggerHandlers };\n//# sourceMappingURL=_handlers.js.map\n",
  "import { CONSOLE_LEVELS, originalConsoleMethods } from '../logger.js';\nimport { fill } from '../object.js';\nimport { GLOBAL_OBJ } from '../worldwide.js';\nimport { addHandler, maybeInstrument, triggerHandlers } from './_handlers.js';\n\n/**\n * Add an instrumentation handler for when a console.xxx method is called.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nfunction addConsoleInstrumentationHandler(handler) {\n  const type = 'console';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentConsole);\n}\n\nfunction instrumentConsole() {\n  if (!('console' in GLOBAL_OBJ)) {\n    return;\n  }\n\n  CONSOLE_LEVELS.forEach(function (level) {\n    if (!(level in GLOBAL_OBJ.console)) {\n      return;\n    }\n\n    fill(GLOBAL_OBJ.console, level, function (originalConsoleMethod) {\n      originalConsoleMethods[level] = originalConsoleMethod;\n\n      return function (...args) {\n        const handlerData = { args, level };\n        triggerHandlers('console', handlerData);\n\n        const log = originalConsoleMethods[level];\n        log && log.apply(GLOBAL_OBJ.console, args);\n      };\n    });\n  });\n}\n\nexport { addConsoleInstrumentationHandler };\n//# sourceMappingURL=console.js.map\n",
  "import { addNonEnumerableProperty } from './object.js';\nimport { snipLine } from './string.js';\nimport { GLOBAL_OBJ } from './worldwide.js';\n\n/**\n * UUID4 generator\n *\n * @returns string Generated UUID4.\n */\nfunction uuid4() {\n  const gbl = GLOBAL_OBJ ;\n  const crypto = gbl.crypto || gbl.msCrypto;\n\n  let getRandomByte = () => Math.random() * 16;\n  try {\n    if (crypto && crypto.randomUUID) {\n      return crypto.randomUUID().replace(/-/g, '');\n    }\n    if (crypto && crypto.getRandomValues) {\n      getRandomByte = () => crypto.getRandomValues(new Uint8Array(1))[0];\n    }\n  } catch (_) {\n    // some runtimes can crash invoking crypto\n    // https://github.com/getsentry/sentry-javascript/issues/8935\n  }\n\n  // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523\n  // Concatenating the following numbers as strings results in '10000000100040008000100000000000'\n  return (([1e7] ) + 1e3 + 4e3 + 8e3 + 1e11).replace(/[018]/g, c =>\n    // eslint-disable-next-line no-bitwise\n    ((c ) ^ ((getRandomByte() & 15) >> ((c ) / 4))).toString(16),\n  );\n}\n\nfunction getFirstException(event) {\n  return event.exception && event.exception.values ? event.exception.values[0] : undefined;\n}\n\n/**\n * Extracts either message or type+value from an event that can be used for user-facing logs\n * @returns event's description\n */\nfunction getEventDescription(event) {\n  const { message, event_id: eventId } = event;\n  if (message) {\n    return message;\n  }\n\n  const firstException = getFirstException(event);\n  if (firstException) {\n    if (firstException.type && firstException.value) {\n      return `${firstException.type}: ${firstException.value}`;\n    }\n    return firstException.type || firstException.value || eventId || '<unknown>';\n  }\n  return eventId || '<unknown>';\n}\n\n/**\n * Adds exception values, type and value to an synthetic Exception.\n * @param event The event to modify.\n * @param value Value of the exception.\n * @param type Type of the exception.\n * @hidden\n */\nfunction addExceptionTypeValue(event, value, type) {\n  const exception = (event.exception = event.exception || {});\n  const values = (exception.values = exception.values || []);\n  const firstException = (values[0] = values[0] || {});\n  if (!firstException.value) {\n    firstException.value = value || '';\n  }\n  if (!firstException.type) {\n    firstException.type = type || 'Error';\n  }\n}\n\n/**\n * Adds exception mechanism data to a given event. Uses defaults if the second parameter is not passed.\n *\n * @param event The event to modify.\n * @param newMechanism Mechanism data to add to the event.\n * @hidden\n */\nfunction addExceptionMechanism(event, newMechanism) {\n  const firstException = getFirstException(event);\n  if (!firstException) {\n    return;\n  }\n\n  const defaultMechanism = { type: 'generic', handled: true };\n  const currentMechanism = firstException.mechanism;\n  firstException.mechanism = { ...defaultMechanism, ...currentMechanism, ...newMechanism };\n\n  if (newMechanism && 'data' in newMechanism) {\n    const mergedData = { ...(currentMechanism && currentMechanism.data), ...newMechanism.data };\n    firstException.mechanism.data = mergedData;\n  }\n}\n\n// https://semver.org/#is-there-a-suggested-regular-expression-regex-to-check-a-semver-string\nconst SEMVER_REGEXP =\n  /^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$/;\n\n/**\n * Represents Semantic Versioning object\n */\n\n/**\n * Parses input into a SemVer interface\n * @param input string representation of a semver version\n */\nfunction parseSemver(input) {\n  const match = input.match(SEMVER_REGEXP) || [];\n  const major = parseInt(match[1], 10);\n  const minor = parseInt(match[2], 10);\n  const patch = parseInt(match[3], 10);\n  return {\n    buildmetadata: match[5],\n    major: isNaN(major) ? undefined : major,\n    minor: isNaN(minor) ? undefined : minor,\n    patch: isNaN(patch) ? undefined : patch,\n    prerelease: match[4],\n  };\n}\n\n/**\n * This function adds context (pre/post/line) lines to the provided frame\n *\n * @param lines string[] containing all lines\n * @param frame StackFrame that will be mutated\n * @param linesOfContext number of context lines we want to add pre/post\n */\nfunction addContextToFrame(lines, frame, linesOfContext = 5) {\n  // When there is no line number in the frame, attaching context is nonsensical and will even break grouping\n  if (frame.lineno === undefined) {\n    return;\n  }\n\n  const maxLines = lines.length;\n  const sourceLine = Math.max(Math.min(maxLines - 1, frame.lineno - 1), 0);\n\n  frame.pre_context = lines\n    .slice(Math.max(0, sourceLine - linesOfContext), sourceLine)\n    .map((line) => snipLine(line, 0));\n\n  frame.context_line = snipLine(lines[Math.min(maxLines - 1, sourceLine)], frame.colno || 0);\n\n  frame.post_context = lines\n    .slice(Math.min(sourceLine + 1, maxLines), sourceLine + 1 + linesOfContext)\n    .map((line) => snipLine(line, 0));\n}\n\n/**\n * Checks whether or not we've already captured the given exception (note: not an identical exception - the very object\n * in question), and marks it captured if not.\n *\n * This is useful because it's possible for an error to get captured by more than one mechanism. After we intercept and\n * record an error, we rethrow it (assuming we've intercepted it before it's reached the top-level global handlers), so\n * that we don't interfere with whatever effects the error might have had were the SDK not there. At that point, because\n * the error has been rethrown, it's possible for it to bubble up to some other code we've instrumented. If it's not\n * caught after that, it will bubble all the way up to the global handlers (which of course we also instrument). This\n * function helps us ensure that even if we encounter the same error more than once, we only record it the first time we\n * see it.\n *\n * Note: It will ignore primitives (always return `false` and not mark them as seen), as properties can't be set on\n * them. {@link: Object.objectify} can be used on exceptions to convert any that are primitives into their equivalent\n * object wrapper forms so that this check will always work. However, because we need to flag the exact object which\n * will get rethrown, and because that rethrowing happens outside of the event processing pipeline, the objectification\n * must be done before the exception captured.\n *\n * @param A thrown exception to check or flag as having been seen\n * @returns `true` if the exception has already been captured, `false` if not (with the side effect of marking it seen)\n */\nfunction checkOrSetAlreadyCaught(exception) {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  if (exception && (exception ).__sentry_captured__) {\n    return true;\n  }\n\n  try {\n    // set it this way rather than by assignment so that it's not ennumerable and therefore isn't recorded by the\n    // `ExtraErrorData` integration\n    addNonEnumerableProperty(exception , '__sentry_captured__', true);\n  } catch (err) {\n    // `exception` is a primitive, so we can't mark it seen\n  }\n\n  return false;\n}\n\n/**\n * Checks whether the given input is already an array, and if it isn't, wraps it in one.\n *\n * @param maybeArray Input to turn into an array, if necessary\n * @returns The input, if already an array, or an array with the input as the only element, if not\n */\nfunction arrayify(maybeArray) {\n  return Array.isArray(maybeArray) ? maybeArray : [maybeArray];\n}\n\nexport { addContextToFrame, addExceptionMechanism, addExceptionTypeValue, arrayify, checkOrSetAlreadyCaught, getEventDescription, parseSemver, uuid4 };\n//# sourceMappingURL=misc.js.map\n",
  "import { GLOBAL_OBJ } from '../worldwide.js';\nimport { addHandler, maybeInstrument, triggerHandlers } from './_handlers.js';\n\nlet _oldOnErrorHandler = null;\n\n/**\n * Add an instrumentation handler for when an error is captured by the global error handler.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nfunction addGlobalErrorInstrumentationHandler(handler) {\n  const type = 'error';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentError);\n}\n\nfunction instrumentError() {\n  _oldOnErrorHandler = GLOBAL_OBJ.onerror;\n\n  GLOBAL_OBJ.onerror = function (\n    msg,\n    url,\n    line,\n    column,\n    error,\n  ) {\n    const handlerData = {\n      column,\n      error,\n      line,\n      msg,\n      url,\n    };\n    triggerHandlers('error', handlerData);\n\n    if (_oldOnErrorHandler && !_oldOnErrorHandler.__SENTRY_LOADER__) {\n      // eslint-disable-next-line prefer-rest-params\n      return _oldOnErrorHandler.apply(this, arguments);\n    }\n\n    return false;\n  };\n\n  GLOBAL_OBJ.onerror.__SENTRY_INSTRUMENTED__ = true;\n}\n\nexport { addGlobalErrorInstrumentationHandler };\n//# sourceMappingURL=globalError.js.map\n",
  "import { GLOBAL_OBJ } from '../worldwide.js';\nimport { addHandler, maybeInstrument, triggerHandlers } from './_handlers.js';\n\nlet _oldOnUnhandledRejectionHandler = null;\n\n/**\n * Add an instrumentation handler for when an unhandled promise rejection is captured.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nfunction addGlobalUnhandledRejectionInstrumentationHandler(\n  handler,\n) {\n  const type = 'unhandledrejection';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentUnhandledRejection);\n}\n\nfunction instrumentUnhandledRejection() {\n  _oldOnUnhandledRejectionHandler = GLOBAL_OBJ.onunhandledrejection;\n\n  GLOBAL_OBJ.onunhandledrejection = function (e) {\n    const handlerData = e;\n    triggerHandlers('unhandledrejection', handlerData);\n\n    if (_oldOnUnhandledRejectionHandler && !_oldOnUnhandledRejectionHandler.__SENTRY_LOADER__) {\n      // eslint-disable-next-line prefer-rest-params\n      return _oldOnUnhandledRejectionHandler.apply(this, arguments);\n    }\n\n    return true;\n  };\n\n  GLOBAL_OBJ.onunhandledrejection.__SENTRY_INSTRUMENTED__ = true;\n}\n\nexport { addGlobalUnhandledRejectionInstrumentationHandler };\n//# sourceMappingURL=globalUnhandledRejection.js.map\n",
  "/*\n * This module exists for optimizations in the build process through rollup and terser.  We define some global\n * constants, which can be overridden during build. By guarding certain pieces of code with functions that return these\n * constants, we can control whether or not they appear in the final bundle. (Any code guarded by a false condition will\n * never run, and will hence be dropped during treeshaking.) The two primary uses for this are stripping out calls to\n * `logger` and preventing node-related code from appearing in browser bundles.\n *\n * Attention:\n * This file should not be used to define constants/flags that are intended to be used for tree-shaking conducted by\n * users. These flags should live in their respective packages, as we identified user tooling (specifically webpack)\n * having issues tree-shaking these constants across package boundaries.\n * An example for this is the __SENTRY_DEBUG__ constant. It is declared in each package individually because we want\n * users to be able to shake away expressions that it guards.\n */\n\n/**\n * Figures out if we're building a browser bundle.\n *\n * @returns true if this is a browser bundle build.\n */\nfunction isBrowserBundle() {\n  return typeof __SENTRY_BROWSER_BUNDLE__ !== 'undefined' && !!__SENTRY_BROWSER_BUNDLE__;\n}\n\n/**\n * Get source of SDK.\n */\nfunction getSDKSource() {\n  // @ts-expect-error \"npm\" is injected by rollup during build process\n  return \"npm\";\n}\n\nexport { getSDKSource, isBrowserBundle };\n//# sourceMappingURL=env.js.map\n",
  "import { isBrowserBundle } from './env.js';\n\n/**\n * NOTE: In order to avoid circular dependencies, if you add a function to this module and it needs to print something,\n * you must either a) use `console.log` rather than the logger, or b) put your function elsewhere.\n */\n\n/**\n * Checks whether we're in the Node.js or Browser environment\n *\n * @returns Answer to given question\n */\nfunction isNodeEnv() {\n  // explicitly check for browser bundles as those can be optimized statically\n  // by terser/rollup.\n  return (\n    !isBrowserBundle() &&\n    Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]'\n  );\n}\n\n/**\n * Requires a module which is protected against bundler minification.\n *\n * @param request The module path to resolve\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types, @typescript-eslint/no-explicit-any\nfunction dynamicRequire(mod, request) {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return mod.require(request);\n}\n\n/**\n * Helper for dynamically loading module that should work with linked dependencies.\n * The problem is that we _should_ be using `require(require.resolve(moduleName, { paths: [cwd()] }))`\n * However it's _not possible_ to do that with Webpack, as it has to know all the dependencies during\n * build time. `require.resolve` is also not available in any other way, so we cannot create,\n * a fake helper like we do with `dynamicRequire`.\n *\n * We always prefer to use local package, thus the value is not returned early from each `try/catch` block.\n * That is to mimic the behavior of `require.resolve` exactly.\n *\n * @param moduleName module name to require\n * @returns possibly required module\n */\nfunction loadModule(moduleName) {\n  let mod;\n\n  try {\n    mod = dynamicRequire(module, moduleName);\n  } catch (e) {\n    // no-empty\n  }\n\n  try {\n    const { cwd } = dynamicRequire(module, 'process');\n    mod = dynamicRequire(module, `${cwd()}/node_modules/${moduleName}`) ;\n  } catch (e) {\n    // no-empty\n  }\n\n  return mod;\n}\n\nexport { dynamicRequire, isNodeEnv, loadModule };\n//# sourceMappingURL=node.js.map\n",
  "/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/**\n * Helper to decycle json objects\n */\nfunction memoBuilder() {\n  const hasWeakSet = typeof WeakSet === 'function';\n  const inner = hasWeakSet ? new WeakSet() : [];\n  function memoize(obj) {\n    if (hasWeakSet) {\n      if (inner.has(obj)) {\n        return true;\n      }\n      inner.add(obj);\n      return false;\n    }\n    // eslint-disable-next-line @typescript-eslint/prefer-for-of\n    for (let i = 0; i < inner.length; i++) {\n      const value = inner[i];\n      if (value === obj) {\n        return true;\n      }\n    }\n    inner.push(obj);\n    return false;\n  }\n\n  function unmemoize(obj) {\n    if (hasWeakSet) {\n      inner.delete(obj);\n    } else {\n      for (let i = 0; i < inner.length; i++) {\n        if (inner[i] === obj) {\n          inner.splice(i, 1);\n          break;\n        }\n      }\n    }\n  }\n  return [memoize, unmemoize];\n}\n\nexport { memoBuilder };\n//# sourceMappingURL=memo.js.map\n",
  "import { isNaN, isVueViewModel, isSyntheticEvent } from './is.js';\nimport { memoBuilder } from './memo.js';\nimport { convertToPlainObject } from './object.js';\nimport { getFunctionName } from './stacktrace.js';\n\n/**\n * Recursively normalizes the given object.\n *\n * - Creates a copy to prevent original input mutation\n * - Skips non-enumerable properties\n * - When stringifying, calls `toJSON` if implemented\n * - Removes circular references\n * - Translates non-serializable values (`undefined`/`NaN`/functions) to serializable format\n * - Translates known global objects/classes to a string representations\n * - Takes care of `Error` object serialization\n * - Optionally limits depth of final output\n * - Optionally limits number of properties/elements included in any single object/array\n *\n * @param input The object to be normalized.\n * @param depth The max depth to which to normalize the object. (Anything deeper stringified whole.)\n * @param maxProperties The max number of elements or properties to be included in any single array or\n * object in the normallized output.\n * @returns A normalized version of the object, or `\"**non-serializable**\"` if any errors are thrown during normalization.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction normalize(input, depth = 100, maxProperties = +Infinity) {\n  try {\n    // since we're at the outermost level, we don't provide a key\n    return visit('', input, depth, maxProperties);\n  } catch (err) {\n    return { ERROR: `**non-serializable** (${err})` };\n  }\n}\n\n/** JSDoc */\nfunction normalizeToSize(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  object,\n  // Default Node.js REPL depth\n  depth = 3,\n  // 100kB, as 200kB is max payload size, so half sounds reasonable\n  maxSize = 100 * 1024,\n) {\n  const normalized = normalize(object, depth);\n\n  if (jsonSize(normalized) > maxSize) {\n    return normalizeToSize(object, depth - 1, maxSize);\n  }\n\n  return normalized ;\n}\n\n/**\n * Visits a node to perform normalization on it\n *\n * @param key The key corresponding to the given node\n * @param value The node to be visited\n * @param depth Optional number indicating the maximum recursion depth\n * @param maxProperties Optional maximum number of properties/elements included in any single object/array\n * @param memo Optional Memo class handling decycling\n */\nfunction visit(\n  key,\n  value,\n  depth = +Infinity,\n  maxProperties = +Infinity,\n  memo = memoBuilder(),\n) {\n  const [memoize, unmemoize] = memo;\n\n  // Get the simple cases out of the way first\n  if (\n    value == null || // this matches null and undefined -> eqeq not eqeqeq\n    (['number', 'boolean', 'string'].includes(typeof value) && !isNaN(value))\n  ) {\n    return value ;\n  }\n\n  const stringified = stringifyValue(key, value);\n\n  // Anything we could potentially dig into more (objects or arrays) will have come back as `\"[object XXXX]\"`.\n  // Everything else will have already been serialized, so if we don't see that pattern, we're done.\n  if (!stringified.startsWith('[object ')) {\n    return stringified;\n  }\n\n  // From here on, we can assert that `value` is either an object or an array.\n\n  // Do not normalize objects that we know have already been normalized. As a general rule, the\n  // \"__sentry_skip_normalization__\" property should only be used sparingly and only should only be set on objects that\n  // have already been normalized.\n  if ((value )['__sentry_skip_normalization__']) {\n    return value ;\n  }\n\n  // We can set `__sentry_override_normalization_depth__` on an object to ensure that from there\n  // We keep a certain amount of depth.\n  // This should be used sparingly, e.g. we use it for the redux integration to ensure we get a certain amount of state.\n  const remainingDepth =\n    typeof (value )['__sentry_override_normalization_depth__'] === 'number'\n      ? ((value )['__sentry_override_normalization_depth__'] )\n      : depth;\n\n  // We're also done if we've reached the max depth\n  if (remainingDepth === 0) {\n    // At this point we know `serialized` is a string of the form `\"[object XXXX]\"`. Clean it up so it's just `\"[XXXX]\"`.\n    return stringified.replace('object ', '');\n  }\n\n  // If we've already visited this branch, bail out, as it's circular reference. If not, note that we're seeing it now.\n  if (memoize(value)) {\n    return '[Circular ~]';\n  }\n\n  // If the value has a `toJSON` method, we call it to extract more information\n  const valueWithToJSON = value ;\n  if (valueWithToJSON && typeof valueWithToJSON.toJSON === 'function') {\n    try {\n      const jsonValue = valueWithToJSON.toJSON();\n      // We need to normalize the return value of `.toJSON()` in case it has circular references\n      return visit('', jsonValue, remainingDepth - 1, maxProperties, memo);\n    } catch (err) {\n      // pass (The built-in `toJSON` failed, but we can still try to do it ourselves)\n    }\n  }\n\n  // At this point we know we either have an object or an array, we haven't seen it before, and we're going to recurse\n  // because we haven't yet reached the max depth. Create an accumulator to hold the results of visiting each\n  // property/entry, and keep track of the number of items we add to it.\n  const normalized = (Array.isArray(value) ? [] : {}) ;\n  let numAdded = 0;\n\n  // Before we begin, convert`Error` and`Event` instances into plain objects, since some of each of their relevant\n  // properties are non-enumerable and otherwise would get missed.\n  const visitable = convertToPlainObject(value );\n\n  for (const visitKey in visitable) {\n    // Avoid iterating over fields in the prototype if they've somehow been exposed to enumeration.\n    if (!Object.prototype.hasOwnProperty.call(visitable, visitKey)) {\n      continue;\n    }\n\n    if (numAdded >= maxProperties) {\n      normalized[visitKey] = '[MaxProperties ~]';\n      break;\n    }\n\n    // Recursively visit all the child nodes\n    const visitValue = visitable[visitKey];\n    normalized[visitKey] = visit(visitKey, visitValue, remainingDepth - 1, maxProperties, memo);\n\n    numAdded++;\n  }\n\n  // Once we've visited all the branches, remove the parent from memo storage\n  unmemoize(value);\n\n  // Return accumulated values\n  return normalized;\n}\n\n/* eslint-disable complexity */\n/**\n * Stringify the given value. Handles various known special values and types.\n *\n * Not meant to be used on simple primitives which already have a string representation, as it will, for example, turn\n * the number 1231 into \"[Object Number]\", nor on `null`, as it will throw.\n *\n * @param value The value to stringify\n * @returns A stringified representation of the given value\n */\nfunction stringifyValue(\n  key,\n  // this type is a tiny bit of a cheat, since this function does handle NaN (which is technically a number), but for\n  // our internal use, it'll do\n  value,\n) {\n  try {\n    if (key === 'domain' && value && typeof value === 'object' && (value )._events) {\n      return '[Domain]';\n    }\n\n    if (key === 'domainEmitter') {\n      return '[DomainEmitter]';\n    }\n\n    // It's safe to use `global`, `window`, and `document` here in this manner, as we are asserting using `typeof` first\n    // which won't throw if they are not present.\n\n    if (typeof global !== 'undefined' && value === global) {\n      return '[Global]';\n    }\n\n    // eslint-disable-next-line no-restricted-globals\n    if (typeof window !== 'undefined' && value === window) {\n      return '[Window]';\n    }\n\n    // eslint-disable-next-line no-restricted-globals\n    if (typeof document !== 'undefined' && value === document) {\n      return '[Document]';\n    }\n\n    if (isVueViewModel(value)) {\n      return '[VueViewModel]';\n    }\n\n    // React's SyntheticEvent thingy\n    if (isSyntheticEvent(value)) {\n      return '[SyntheticEvent]';\n    }\n\n    if (typeof value === 'number' && value !== value) {\n      return '[NaN]';\n    }\n\n    if (typeof value === 'function') {\n      return `[Function: ${getFunctionName(value)}]`;\n    }\n\n    if (typeof value === 'symbol') {\n      return `[${String(value)}]`;\n    }\n\n    // stringified BigInts are indistinguishable from regular numbers, so we need to label them to avoid confusion\n    if (typeof value === 'bigint') {\n      return `[BigInt: ${String(value)}]`;\n    }\n\n    // Now that we've knocked out all the special cases and the primitives, all we have left are objects. Simply casting\n    // them to strings means that instances of classes which haven't defined their `toStringTag` will just come out as\n    // `\"[object Object]\"`. If we instead look at the constructor's name (which is the same as the name of the class),\n    // we can make sure that only plain objects come out that way.\n    const objName = getConstructorName(value);\n\n    // Handle HTML Elements\n    if (/^HTML(\\w*)Element$/.test(objName)) {\n      return `[HTMLElement: ${objName}]`;\n    }\n\n    return `[object ${objName}]`;\n  } catch (err) {\n    return `**non-serializable** (${err})`;\n  }\n}\n/* eslint-enable complexity */\n\nfunction getConstructorName(value) {\n  const prototype = Object.getPrototypeOf(value);\n\n  return prototype ? prototype.constructor.name : 'null prototype';\n}\n\n/** Calculates bytes size of input string */\nfunction utf8Length(value) {\n  // eslint-disable-next-line no-bitwise\n  return ~-encodeURI(value).split(/%..|./).length;\n}\n\n/** Calculates bytes size of input object */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction jsonSize(value) {\n  return utf8Length(JSON.stringify(value));\n}\n\nexport { normalize, normalizeToSize, visit as walk };\n//# sourceMappingURL=normalize.js.map\n",
  "import { isThenable } from './is.js';\n\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\n\n/** SyncPromise internal states */\nvar States; (function (States) {\n  /** Pending */\n  const PENDING = 0; States[States[\"PENDING\"] = PENDING] = \"PENDING\";\n  /** Resolved / OK */\n  const RESOLVED = 1; States[States[\"RESOLVED\"] = RESOLVED] = \"RESOLVED\";\n  /** Rejected / Error */\n  const REJECTED = 2; States[States[\"REJECTED\"] = REJECTED] = \"REJECTED\";\n})(States || (States = {}));\n\n// Overloads so we can call resolvedSyncPromise without arguments and generic argument\n\n/**\n * Creates a resolved sync promise.\n *\n * @param value the value to resolve the promise with\n * @returns the resolved sync promise\n */\nfunction resolvedSyncPromise(value) {\n  return new SyncPromise(resolve => {\n    resolve(value);\n  });\n}\n\n/**\n * Creates a rejected sync promise.\n *\n * @param value the value to reject the promise with\n * @returns the rejected sync promise\n */\nfunction rejectedSyncPromise(reason) {\n  return new SyncPromise((_, reject) => {\n    reject(reason);\n  });\n}\n\n/**\n * Thenable class that behaves like a Promise and follows it's interface\n * but is not async internally\n */\nclass SyncPromise {\n\n   constructor(\n    executor,\n  ) {SyncPromise.prototype.__init.call(this);SyncPromise.prototype.__init2.call(this);SyncPromise.prototype.__init3.call(this);SyncPromise.prototype.__init4.call(this);\n    this._state = States.PENDING;\n    this._handlers = [];\n\n    try {\n      executor(this._resolve, this._reject);\n    } catch (e) {\n      this._reject(e);\n    }\n  }\n\n  /** JSDoc */\n   then(\n    onfulfilled,\n    onrejected,\n  ) {\n    return new SyncPromise((resolve, reject) => {\n      this._handlers.push([\n        false,\n        result => {\n          if (!onfulfilled) {\n            // TODO: ¯\\_(ツ)_/¯\n            // TODO: FIXME\n            resolve(result );\n          } else {\n            try {\n              resolve(onfulfilled(result));\n            } catch (e) {\n              reject(e);\n            }\n          }\n        },\n        reason => {\n          if (!onrejected) {\n            reject(reason);\n          } else {\n            try {\n              resolve(onrejected(reason));\n            } catch (e) {\n              reject(e);\n            }\n          }\n        },\n      ]);\n      this._executeHandlers();\n    });\n  }\n\n  /** JSDoc */\n   catch(\n    onrejected,\n  ) {\n    return this.then(val => val, onrejected);\n  }\n\n  /** JSDoc */\n   finally(onfinally) {\n    return new SyncPromise((resolve, reject) => {\n      let val;\n      let isRejected;\n\n      return this.then(\n        value => {\n          isRejected = false;\n          val = value;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n        reason => {\n          isRejected = true;\n          val = reason;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n      ).then(() => {\n        if (isRejected) {\n          reject(val);\n          return;\n        }\n\n        resolve(val );\n      });\n    });\n  }\n\n  /** JSDoc */\n    __init() {this._resolve = (value) => {\n    this._setResult(States.RESOLVED, value);\n  };}\n\n  /** JSDoc */\n    __init2() {this._reject = (reason) => {\n    this._setResult(States.REJECTED, reason);\n  };}\n\n  /** JSDoc */\n    __init3() {this._setResult = (state, value) => {\n    if (this._state !== States.PENDING) {\n      return;\n    }\n\n    if (isThenable(value)) {\n      void (value ).then(this._resolve, this._reject);\n      return;\n    }\n\n    this._state = state;\n    this._value = value;\n\n    this._executeHandlers();\n  };}\n\n  /** JSDoc */\n    __init4() {this._executeHandlers = () => {\n    if (this._state === States.PENDING) {\n      return;\n    }\n\n    const cachedHandlers = this._handlers.slice();\n    this._handlers = [];\n\n    cachedHandlers.forEach(handler => {\n      if (handler[0]) {\n        return;\n      }\n\n      if (this._state === States.RESOLVED) {\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        handler[1](this._value );\n      }\n\n      if (this._state === States.REJECTED) {\n        handler[2](this._value);\n      }\n\n      handler[0] = true;\n    });\n  };}\n}\n\nexport { SyncPromise, rejectedSyncPromise, resolvedSyncPromise };\n//# sourceMappingURL=syncpromise.js.map\n",
  "import { SentryError } from './error.js';\nimport { rejectedSyncPromise, SyncPromise, resolvedSyncPromise } from './syncpromise.js';\n\n/**\n * Creates an new PromiseBuffer object with the specified limit\n * @param limit max number of promises that can be stored in the buffer\n */\nfunction makePromiseBuffer(limit) {\n  const buffer = [];\n\n  function isReady() {\n    return limit === undefined || buffer.length < limit;\n  }\n\n  /**\n   * Remove a promise from the queue.\n   *\n   * @param task Can be any PromiseLike<T>\n   * @returns Removed promise.\n   */\n  function remove(task) {\n    return buffer.splice(buffer.indexOf(task), 1)[0];\n  }\n\n  /**\n   * Add a promise (representing an in-flight action) to the queue, and set it to remove itself on fulfillment.\n   *\n   * @param taskProducer A function producing any PromiseLike<T>; In previous versions this used to be `task:\n   *        PromiseLike<T>`, but under that model, Promises were instantly created on the call-site and their executor\n   *        functions therefore ran immediately. Thus, even if the buffer was full, the action still happened. By\n   *        requiring the promise to be wrapped in a function, we can defer promise creation until after the buffer\n   *        limit check.\n   * @returns The original promise.\n   */\n  function add(taskProducer) {\n    if (!isReady()) {\n      return rejectedSyncPromise(new SentryError('Not adding Promise because buffer limit was reached.'));\n    }\n\n    // start the task and add its promise to the queue\n    const task = taskProducer();\n    if (buffer.indexOf(task) === -1) {\n      buffer.push(task);\n    }\n    void task\n      .then(() => remove(task))\n      // Use `then(null, rejectionHandler)` rather than `catch(rejectionHandler)` so that we can use `PromiseLike`\n      // rather than `Promise`. `PromiseLike` doesn't have a `.catch` method, making its polyfill smaller. (ES5 didn't\n      // have promises, so TS has to polyfill when down-compiling.)\n      .then(null, () =>\n        remove(task).then(null, () => {\n          // We have to add another catch here because `remove()` starts a new promise chain.\n        }),\n      );\n    return task;\n  }\n\n  /**\n   * Wait for all promises in the queue to resolve or for timeout to expire, whichever comes first.\n   *\n   * @param timeout The time, in ms, after which to resolve to `false` if the queue is still non-empty. Passing `0` (or\n   * not passing anything) will make the promise wait as long as it takes for the queue to drain before resolving to\n   * `true`.\n   * @returns A promise which will resolve to `true` if the queue is already empty or drains before the timeout, and\n   * `false` otherwise\n   */\n  function drain(timeout) {\n    return new SyncPromise((resolve, reject) => {\n      let counter = buffer.length;\n\n      if (!counter) {\n        return resolve(true);\n      }\n\n      // wait for `timeout` ms and then resolve to `false` (if not cancelled first)\n      const capturedSetTimeout = setTimeout(() => {\n        if (timeout && timeout > 0) {\n          resolve(false);\n        }\n      }, timeout);\n\n      // if all promises resolve in time, cancel the timer and resolve to `true`\n      buffer.forEach(item => {\n        void resolvedSyncPromise(item).then(() => {\n          if (!--counter) {\n            clearTimeout(capturedSetTimeout);\n            resolve(true);\n          }\n        }, reject);\n      });\n    });\n  }\n\n  return {\n    $: buffer,\n    add,\n    drain,\n  };\n}\n\nexport { makePromiseBuffer };\n//# sourceMappingURL=promisebuffer.js.map\n",
  "/**\n * This code was originally copied from the 'cookie` module at v0.5.0 and was simplified for our use case.\n * https://github.com/jshttp/cookie/blob/a0c84147aab6266bdb3996cf4062e93907c0b0fc/index.js\n * It had the following license:\n *\n * (The MIT License)\n *\n * Copyright (c) 2012-2014 Roman Shtylman <shtylman@gmail.com>\n * Copyright (c) 2015 Douglas Christopher Wilson <doug@somethingdoug.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * 'Software'), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Parses a cookie string\n */\nfunction parseCookie(str) {\n  const obj = {};\n  let index = 0;\n\n  while (index < str.length) {\n    const eqIdx = str.indexOf('=', index);\n\n    // no more cookie pairs\n    if (eqIdx === -1) {\n      break;\n    }\n\n    let endIdx = str.indexOf(';', index);\n\n    if (endIdx === -1) {\n      endIdx = str.length;\n    } else if (endIdx < eqIdx) {\n      // backtrack on prior semicolon\n      index = str.lastIndexOf(';', eqIdx - 1) + 1;\n      continue;\n    }\n\n    const key = str.slice(index, eqIdx).trim();\n\n    // only assign once\n    if (undefined === obj[key]) {\n      let val = str.slice(eqIdx + 1, endIdx).trim();\n\n      // quoted values\n      if (val.charCodeAt(0) === 0x22) {\n        val = val.slice(1, -1);\n      }\n\n      try {\n        obj[key] = val.indexOf('%') !== -1 ? decodeURIComponent(val) : val;\n      } catch (e) {\n        obj[key] = val;\n      }\n    }\n\n    index = endIdx + 1;\n  }\n\n  return obj;\n}\n\nexport { parseCookie };\n//# sourceMappingURL=cookie.js.map\n",
  "/**\n * Parses string form of URL into an object\n * // borrowed from https://tools.ietf.org/html/rfc3986#appendix-B\n * // intentionally using regex and not <a/> href parsing trick because React Native and other\n * // environments where DOM might not be available\n * @returns parsed URL object\n */\nfunction parseUrl(url) {\n  if (!url) {\n    return {};\n  }\n\n  const match = url.match(/^(([^:/?#]+):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$/);\n\n  if (!match) {\n    return {};\n  }\n\n  // coerce to undefined values to empty string so we don't get 'undefined'\n  const query = match[6] || '';\n  const fragment = match[8] || '';\n  return {\n    host: match[4],\n    path: match[5],\n    protocol: match[2],\n    search: query,\n    hash: fragment,\n    relative: match[5] + query + fragment, // everything minus origin\n  };\n}\n\n/**\n * Strip the query string and fragment off of a given URL or path (if present)\n *\n * @param urlPath Full URL or path, including possible query string and/or fragment\n * @returns URL or path without query string or fragment\n */\nfunction stripUrlQueryAndFragment(urlPath) {\n  // eslint-disable-next-line no-useless-escape\n  return urlPath.split(/[\\?#]/, 1)[0];\n}\n\n/**\n * Returns number of URL segments of a passed string URL.\n */\nfunction getNumberOfUrlSegments(url) {\n  // split at '/' or at '\\/' to split regex urls correctly\n  return url.split(/\\\\?\\//).filter(s => s.length > 0 && s !== ',').length;\n}\n\n/**\n * Takes a URL object and returns a sanitized string which is safe to use as span description\n * see: https://develop.sentry.dev/sdk/data-handling/#structuring-data\n */\nfunction getSanitizedUrlString(url) {\n  const { protocol, host, path } = url;\n\n  const filteredHost =\n    (host &&\n      host\n        // Always filter out authority\n        .replace(/^.*@/, '[filtered]:[filtered]@')\n        // Don't show standard :80 (http) and :443 (https) ports to reduce the noise\n        // TODO: Use new URL global if it exists\n        .replace(/(:80)$/, '')\n        .replace(/(:443)$/, '')) ||\n    '';\n\n  return `${protocol ? `${protocol}://` : ''}${filteredHost}${path}`;\n}\n\nexport { getNumberOfUrlSegments, getSanitizedUrlString, parseUrl, stripUrlQueryAndFragment };\n//# sourceMappingURL=url.js.map\n",
  "import { parseCookie } from './cookie.js';\nimport { DEBUG_BUILD } from './debug-build.js';\nimport { isString, isPlainObject } from './is.js';\nimport { logger } from './logger.js';\nimport { normalize } from './normalize.js';\nimport { stripUrlQueryAndFragment } from './url.js';\n\nconst DEFAULT_INCLUDES = {\n  ip: false,\n  request: true,\n  transaction: true,\n  user: true,\n};\nconst DEFAULT_REQUEST_INCLUDES = ['cookies', 'data', 'headers', 'method', 'query_string', 'url'];\nconst DEFAULT_USER_INCLUDES = ['id', 'username', 'email'];\n\n/**\n * Sets parameterized route as transaction name e.g.: `GET /users/:id`\n * Also adds more context data on the transaction from the request\n */\nfunction addRequestDataToTransaction(\n  transaction,\n  req,\n  deps,\n) {\n  if (!transaction) return;\n  if (!transaction.metadata.source || transaction.metadata.source === 'url') {\n    // Attempt to grab a parameterized route off of the request\n    transaction.setName(...extractPathForTransaction(req, { path: true, method: true }));\n  }\n  transaction.setData('url', req.originalUrl || req.url);\n  if (req.baseUrl) {\n    transaction.setData('baseUrl', req.baseUrl);\n  }\n  transaction.setData('query', extractQueryParams(req, deps));\n}\n\n/**\n * Extracts a complete and parameterized path from the request object and uses it to construct transaction name.\n * If the parameterized transaction name cannot be extracted, we fall back to the raw URL.\n *\n * Additionally, this function determines and returns the transaction name source\n *\n * eg. GET /mountpoint/user/:id\n *\n * @param req A request object\n * @param options What to include in the transaction name (method, path, or a custom route name to be\n *                used instead of the request's route)\n *\n * @returns A tuple of the fully constructed transaction name [0] and its source [1] (can be either 'route' or 'url')\n */\nfunction extractPathForTransaction(\n  req,\n  options = {},\n) {\n  const method = req.method && req.method.toUpperCase();\n\n  let path = '';\n  let source = 'url';\n\n  // Check to see if there's a parameterized route we can use (as there is in Express)\n  if (options.customRoute || req.route) {\n    path = options.customRoute || `${req.baseUrl || ''}${req.route && req.route.path}`;\n    source = 'route';\n  }\n\n  // Otherwise, just take the original URL\n  else if (req.originalUrl || req.url) {\n    path = stripUrlQueryAndFragment(req.originalUrl || req.url || '');\n  }\n\n  let name = '';\n  if (options.method && method) {\n    name += method;\n  }\n  if (options.method && options.path) {\n    name += ' ';\n  }\n  if (options.path && path) {\n    name += path;\n  }\n\n  return [name, source];\n}\n\n/** JSDoc */\nfunction extractTransaction(req, type) {\n  switch (type) {\n    case 'path': {\n      return extractPathForTransaction(req, { path: true })[0];\n    }\n    case 'handler': {\n      return (req.route && req.route.stack && req.route.stack[0] && req.route.stack[0].name) || '<anonymous>';\n    }\n    case 'methodPath':\n    default: {\n      // if exist _reconstructedRoute return that path instead of route.path\n      const customRoute = req._reconstructedRoute ? req._reconstructedRoute : undefined;\n      return extractPathForTransaction(req, { path: true, method: true, customRoute })[0];\n    }\n  }\n}\n\n/** JSDoc */\nfunction extractUserData(\n  user\n\n,\n  keys,\n) {\n  const extractedUser = {};\n  const attributes = Array.isArray(keys) ? keys : DEFAULT_USER_INCLUDES;\n\n  attributes.forEach(key => {\n    if (user && key in user) {\n      extractedUser[key] = user[key];\n    }\n  });\n\n  return extractedUser;\n}\n\n/**\n * Normalize data from the request object, accounting for framework differences.\n *\n * @param req The request object from which to extract data\n * @param options.include An optional array of keys to include in the normalized data. Defaults to\n * DEFAULT_REQUEST_INCLUDES if not provided.\n * @param options.deps Injected, platform-specific dependencies\n * @returns An object containing normalized request data\n */\nfunction extractRequestData(\n  req,\n  options\n\n,\n) {\n  const { include = DEFAULT_REQUEST_INCLUDES, deps } = options || {};\n  const requestData = {};\n\n  // headers:\n  //   node, express, koa, nextjs: req.headers\n  const headers = (req.headers || {})\n\n;\n  // method:\n  //   node, express, koa, nextjs: req.method\n  const method = req.method;\n  // host:\n  //   express: req.hostname in > 4 and req.host in < 4\n  //   koa: req.host\n  //   node, nextjs: req.headers.host\n  const host = req.hostname || req.host || headers.host || '<no host>';\n  // protocol:\n  //   node, nextjs: <n/a>\n  //   express, koa: req.protocol\n  const protocol = req.protocol === 'https' || (req.socket && req.socket.encrypted) ? 'https' : 'http';\n  // url (including path and query string):\n  //   node, express: req.originalUrl\n  //   koa, nextjs: req.url\n  const originalUrl = req.originalUrl || req.url || '';\n  // absolute url\n  const absoluteUrl = originalUrl.startsWith(protocol) ? originalUrl : `${protocol}://${host}${originalUrl}`;\n  include.forEach(key => {\n    switch (key) {\n      case 'headers': {\n        requestData.headers = headers;\n\n        // Remove the Cookie header in case cookie data should not be included in the event\n        if (!include.includes('cookies')) {\n          delete (requestData.headers ).cookie;\n        }\n\n        break;\n      }\n      case 'method': {\n        requestData.method = method;\n        break;\n      }\n      case 'url': {\n        requestData.url = absoluteUrl;\n        break;\n      }\n      case 'cookies': {\n        // cookies:\n        //   node, express, koa: req.headers.cookie\n        //   vercel, sails.js, express (w/ cookie middleware), nextjs: req.cookies\n        requestData.cookies =\n          // TODO (v8 / #5257): We're only sending the empty object for backwards compatibility, so the last bit can\n          // come off in v8\n          req.cookies || (headers.cookie && parseCookie(headers.cookie)) || {};\n        break;\n      }\n      case 'query_string': {\n        // query string:\n        //   node: req.url (raw)\n        //   express, koa, nextjs: req.query\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        requestData.query_string = extractQueryParams(req, deps);\n        break;\n      }\n      case 'data': {\n        if (method === 'GET' || method === 'HEAD') {\n          break;\n        }\n        // body data:\n        //   express, koa, nextjs: req.body\n        //\n        //   when using node by itself, you have to read the incoming stream(see\n        //   https://nodejs.dev/learn/get-http-request-body-data-using-nodejs); if a user is doing that, we can't know\n        //   where they're going to store the final result, so they'll have to capture this data themselves\n        if (req.body !== undefined) {\n          requestData.data = isString(req.body) ? req.body : JSON.stringify(normalize(req.body));\n        }\n        break;\n      }\n      default: {\n        if ({}.hasOwnProperty.call(req, key)) {\n          requestData[key] = (req )[key];\n        }\n      }\n    }\n  });\n\n  return requestData;\n}\n\n/**\n * Add data from the given request to the given event\n *\n * @param event The event to which the request data will be added\n * @param req Request object\n * @param options.include Flags to control what data is included\n * @param options.deps Injected platform-specific dependencies\n * @returns The mutated `Event` object\n */\nfunction addRequestDataToEvent(\n  event,\n  req,\n  options,\n) {\n  const include = {\n    ...DEFAULT_INCLUDES,\n    ...(options && options.include),\n  };\n\n  if (include.request) {\n    const extractedRequestData = Array.isArray(include.request)\n      ? extractRequestData(req, { include: include.request, deps: options && options.deps })\n      : extractRequestData(req, { deps: options && options.deps });\n\n    event.request = {\n      ...event.request,\n      ...extractedRequestData,\n    };\n  }\n\n  if (include.user) {\n    const extractedUser = req.user && isPlainObject(req.user) ? extractUserData(req.user, include.user) : {};\n\n    if (Object.keys(extractedUser).length) {\n      event.user = {\n        ...event.user,\n        ...extractedUser,\n      };\n    }\n  }\n\n  // client ip:\n  //   node, nextjs: req.socket.remoteAddress\n  //   express, koa: req.ip\n  if (include.ip) {\n    const ip = req.ip || (req.socket && req.socket.remoteAddress);\n    if (ip) {\n      event.user = {\n        ...event.user,\n        ip_address: ip,\n      };\n    }\n  }\n\n  if (include.transaction && !event.transaction) {\n    // TODO do we even need this anymore?\n    // TODO make this work for nextjs\n    event.transaction = extractTransaction(req, include.transaction);\n  }\n\n  return event;\n}\n\nfunction extractQueryParams(\n  req,\n  deps,\n) {\n  // url (including path and query string):\n  //   node, express: req.originalUrl\n  //   koa, nextjs: req.url\n  let originalUrl = req.originalUrl || req.url || '';\n\n  if (!originalUrl) {\n    return;\n  }\n\n  // The `URL` constructor can't handle internal URLs of the form `/some/path/here`, so stick a dummy protocol and\n  // hostname on the beginning. Since the point here is just to grab the query string, it doesn't matter what we use.\n  if (originalUrl.startsWith('/')) {\n    originalUrl = `http://dogs.are.great${originalUrl}`;\n  }\n\n  try {\n    return (\n      req.query ||\n      (typeof URL !== undefined && new URL(originalUrl).search.slice(1)) ||\n      // In Node 8, `URL` isn't in the global scope, so we have to use the built-in module from Node\n      (deps && deps.url && deps.url.parse(originalUrl).query) ||\n      undefined\n    );\n  } catch (e2) {\n    return undefined;\n  }\n}\n\n/**\n * Transforms a `Headers` object that implements the `Web Fetch API` (https://developer.mozilla.org/en-US/docs/Web/API/Headers) into a simple key-value dict.\n * The header keys will be lower case: e.g. A \"Content-Type\" header will be stored as \"content-type\".\n */\nfunction winterCGHeadersToDict(winterCGHeaders) {\n  const headers = {};\n  try {\n    winterCGHeaders.forEach((value, key) => {\n      if (typeof value === 'string') {\n        // We check that value is a string even though it might be redundant to make sure prototype pollution is not possible.\n        headers[key] = value;\n      }\n    });\n  } catch (e) {\n    DEBUG_BUILD &&\n      logger.warn('Sentry failed extracting headers from a request object. If you see this, please file an issue.');\n  }\n\n  return headers;\n}\n\n/**\n * Converts a `Request` object that implements the `Web Fetch API` (https://developer.mozilla.org/en-US/docs/Web/API/Headers) into the format that the `RequestData` integration understands.\n */\nfunction winterCGRequestToRequestData(req) {\n  const headers = winterCGHeadersToDict(req.headers);\n  return {\n    method: req.method,\n    url: req.url,\n    headers,\n  };\n}\n\nexport { DEFAULT_USER_INCLUDES, addRequestDataToEvent, addRequestDataToTransaction, extractPathForTransaction, extractRequestData, winterCGHeadersToDict, winterCGRequestToRequestData };\n//# sourceMappingURL=requestdata.js.map\n",
  "import { parseCookie } from './cookie.js';\nimport { DEBUG_BUILD } from './debug-build.js';\nimport { isString, isPlainObject } from './is.js';\nimport { logger } from './logger.js';\nimport { normalize } from './normalize.js';\nimport { stripUrlQueryAndFragment } from './url.js';\n\nconst DEFAULT_INCLUDES = {\n  ip: false,\n  request: true,\n  transaction: true,\n  user: true,\n};\nconst DEFAULT_REQUEST_INCLUDES = ['cookies', 'data', 'headers', 'method', 'query_string', 'url'];\nconst DEFAULT_USER_INCLUDES = ['id', 'username', 'email'];\n\n/**\n * Sets parameterized route as transaction name e.g.: `GET /users/:id`\n * Also adds more context data on the transaction from the request\n */\nfunction addRequestDataToTransaction(\n  transaction,\n  req,\n  deps,\n) {\n  if (!transaction) return;\n  if (!transaction.metadata.source || transaction.metadata.source === 'url') {\n    // Attempt to grab a parameterized route off of the request\n    transaction.setName(...extractPathForTransaction(req, { path: true, method: true }));\n  }\n  transaction.setData('url', req.originalUrl || req.url);\n  if (req.baseUrl) {\n    transaction.setData('baseUrl', req.baseUrl);\n  }\n  transaction.setData('query', extractQueryParams(req, deps));\n}\n\n/**\n * Extracts a complete and parameterized path from the request object and uses it to construct transaction name.\n * If the parameterized transaction name cannot be extracted, we fall back to the raw URL.\n *\n * Additionally, this function determines and returns the transaction name source\n *\n * eg. GET /mountpoint/user/:id\n *\n * @param req A request object\n * @param options What to include in the transaction name (method, path, or a custom route name to be\n *                used instead of the request's route)\n *\n * @returns A tuple of the fully constructed transaction name [0] and its source [1] (can be either 'route' or 'url')\n */\nfunction extractPathForTransaction(\n  req,\n  options = {},\n) {\n  const method = req.method && req.method.toUpperCase();\n\n  let path = '';\n  let source = 'url';\n\n  // Check to see if there's a parameterized route we can use (as there is in Express)\n  if (options.customRoute || req.route) {\n    path = options.customRoute || `${req.baseUrl || ''}${req.route && req.route.path}`;\n    source = 'route';\n  }\n\n  // Otherwise, just take the original URL\n  else if (req.originalUrl || req.url) {\n    path = stripUrlQueryAndFragment(req.originalUrl || req.url || '');\n  }\n\n  let name = '';\n  if (options.method && method) {\n    name += method;\n  }\n  if (options.method && options.path) {\n    name += ' ';\n  }\n  if (options.path && path) {\n    name += path;\n  }\n\n  return [name, source];\n}\n\n/** JSDoc */\nfunction extractTransaction(req, type) {\n  switch (type) {\n    case 'path': {\n      return extractPathForTransaction(req, { path: true })[0];\n    }\n    case 'handler': {\n      return (req.route && req.route.stack && req.route.stack[0] && req.route.stack[0].name) || '<anonymous>';\n    }\n    case 'methodPath':\n    default: {\n      // if exist _reconstructedRoute return that path instead of route.path\n      const customRoute = req._reconstructedRoute ? req._reconstructedRoute : undefined;\n      return extractPathForTransaction(req, { path: true, method: true, customRoute })[0];\n    }\n  }\n}\n\n/** JSDoc */\nfunction extractUserData(\n  user\n\n,\n  keys,\n) {\n  const extractedUser = {};\n  const attributes = Array.isArray(keys) ? keys : DEFAULT_USER_INCLUDES;\n\n  attributes.forEach(key => {\n    if (user && key in user) {\n      extractedUser[key] = user[key];\n    }\n  });\n\n  return extractedUser;\n}\n\n/**\n * Normalize data from the request object, accounting for framework differences.\n *\n * @param req The request object from which to extract data\n * @param options.include An optional array of keys to include in the normalized data. Defaults to\n * DEFAULT_REQUEST_INCLUDES if not provided.\n * @param options.deps Injected, platform-specific dependencies\n * @returns An object containing normalized request data\n */\nfunction extractRequestData(\n  req,\n  options\n\n,\n) {\n  const { include = DEFAULT_REQUEST_INCLUDES, deps } = options || {};\n  const requestData = {};\n\n  // headers:\n  //   node, express, koa, nextjs: req.headers\n  const headers = (req.headers || {})\n\n;\n  // method:\n  //   node, express, koa, nextjs: req.method\n  const method = req.method;\n  // host:\n  //   express: req.hostname in > 4 and req.host in < 4\n  //   koa: req.host\n  //   node, nextjs: req.headers.host\n  const host = req.hostname || req.host || headers.host || '<no host>';\n  // protocol:\n  //   node, nextjs: <n/a>\n  //   express, koa: req.protocol\n  const protocol = req.protocol === 'https' || (req.socket && req.socket.encrypted) ? 'https' : 'http';\n  // url (including path and query string):\n  //   node, express: req.originalUrl\n  //   koa, nextjs: req.url\n  const originalUrl = req.originalUrl || req.url || '';\n  // absolute url\n  const absoluteUrl = originalUrl.startsWith(protocol) ? originalUrl : `${protocol}://${host}${originalUrl}`;\n  include.forEach(key => {\n    switch (key) {\n      case 'headers': {\n        requestData.headers = headers;\n\n        // Remove the Cookie header in case cookie data should not be included in the event\n        if (!include.includes('cookies')) {\n          delete (requestData.headers ).cookie;\n        }\n\n        break;\n      }\n      case 'method': {\n        requestData.method = method;\n        break;\n      }\n      case 'url': {\n        requestData.url = absoluteUrl;\n        break;\n      }\n      case 'cookies': {\n        // cookies:\n        //   node, express, koa: req.headers.cookie\n        //   vercel, sails.js, express (w/ cookie middleware), nextjs: req.cookies\n        requestData.cookies =\n          // TODO (v8 / #5257): We're only sending the empty object for backwards compatibility, so the last bit can\n          // come off in v8\n          req.cookies || (headers.cookie && parseCookie(headers.cookie)) || {};\n        break;\n      }\n      case 'query_string': {\n        // query string:\n        //   node: req.url (raw)\n        //   express, koa, nextjs: req.query\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        requestData.query_string = extractQueryParams(req, deps);\n        break;\n      }\n      case 'data': {\n        if (method === 'GET' || method === 'HEAD') {\n          break;\n        }\n        // body data:\n        //   express, koa, nextjs: req.body\n        //\n        //   when using node by itself, you have to read the incoming stream(see\n        //   https://nodejs.dev/learn/get-http-request-body-data-using-nodejs); if a user is doing that, we can't know\n        //   where they're going to store the final result, so they'll have to capture this data themselves\n        if (req.body !== undefined) {\n          requestData.data = isString(req.body) ? req.body : JSON.stringify(normalize(req.body));\n        }\n        break;\n      }\n      default: {\n        if ({}.hasOwnProperty.call(req, key)) {\n          requestData[key] = (req )[key];\n        }\n      }\n    }\n  });\n\n  return requestData;\n}\n\n/**\n * Add data from the given request to the given event\n *\n * @param event The event to which the request data will be added\n * @param req Request object\n * @param options.include Flags to control what data is included\n * @param options.deps Injected platform-specific dependencies\n * @returns The mutated `Event` object\n */\nfunction addRequestDataToEvent(\n  event,\n  req,\n  options,\n) {\n  const include = {\n    ...DEFAULT_INCLUDES,\n    ...(options && options.include),\n  };\n\n  if (include.request) {\n    const extractedRequestData = Array.isArray(include.request)\n      ? extractRequestData(req, { include: include.request, deps: options && options.deps })\n      : extractRequestData(req, { deps: options && options.deps });\n\n    event.request = {\n      ...event.request,\n      ...extractedRequestData,\n    };\n  }\n\n  if (include.user) {\n    const extractedUser = req.user && isPlainObject(req.user) ? extractUserData(req.user, include.user) : {};\n\n    if (Object.keys(extractedUser).length) {\n      event.user = {\n        ...event.user,\n        ...extractedUser,\n      };\n    }\n  }\n\n  // client ip:\n  //   node, nextjs: req.socket.remoteAddress\n  //   express, koa: req.ip\n  if (include.ip) {\n    const ip = req.ip || (req.socket && req.socket.remoteAddress);\n    if (ip) {\n      event.user = {\n        ...event.user,\n        ip_address: ip,\n      };\n    }\n  }\n\n  if (include.transaction && !event.transaction) {\n    // TODO do we even need this anymore?\n    // TODO make this work for nextjs\n    event.transaction = extractTransaction(req, include.transaction);\n  }\n\n  return event;\n}\n\nfunction extractQueryParams(\n  req,\n  deps,\n) {\n  // url (including path and query string):\n  //   node, express: req.originalUrl\n  //   koa, nextjs: req.url\n  let originalUrl = req.originalUrl || req.url || '';\n\n  if (!originalUrl) {\n    return;\n  }\n\n  // The `URL` constructor can't handle internal URLs of the form `/some/path/here`, so stick a dummy protocol and\n  // hostname on the beginning. Since the point here is just to grab the query string, it doesn't matter what we use.\n  if (originalUrl.startsWith('/')) {\n    originalUrl = `http://dogs.are.great${originalUrl}`;\n  }\n\n  try {\n    return (\n      req.query ||\n      (typeof URL !== undefined && new URL(originalUrl).search.slice(1)) ||\n      // In Node 8, `URL` isn't in the global scope, so we have to use the built-in module from Node\n      (deps && deps.url && deps.url.parse(originalUrl).query) ||\n      undefined\n    );\n  } catch (e2) {\n    return undefined;\n  }\n}\n\n/**\n * Transforms a `Headers` object that implements the `Web Fetch API` (https://developer.mozilla.org/en-US/docs/Web/API/Headers) into a simple key-value dict.\n * The header keys will be lower case: e.g. A \"Content-Type\" header will be stored as \"content-type\".\n */\nfunction winterCGHeadersToDict(winterCGHeaders) {\n  const headers = {};\n  try {\n    winterCGHeaders.forEach((value, key) => {\n      if (typeof value === 'string') {\n        // We check that value is a string even though it might be redundant to make sure prototype pollution is not possible.\n        headers[key] = value;\n      }\n    });\n  } catch (e) {\n    DEBUG_BUILD &&\n      logger.warn('Sentry failed extracting headers from a request object. If you see this, please file an issue.');\n  }\n\n  return headers;\n}\n\n/**\n * Converts a `Request` object that implements the `Web Fetch API` (https://developer.mozilla.org/en-US/docs/Web/API/Headers) into the format that the `RequestData` integration understands.\n */\nfunction winterCGRequestToRequestData(req) {\n  const headers = winterCGHeadersToDict(req.headers);\n  return {\n    method: req.method,\n    url: req.url,\n    headers,\n  };\n}\n\nexport { DEFAULT_USER_INCLUDES, addRequestDataToEvent, addRequestDataToTransaction, extractPathForTransaction, extractRequestData, winterCGHeadersToDict, winterCGRequestToRequestData };\n//# sourceMappingURL=requestdata.js.map\n",
  "// Note: Ideally the `SeverityLevel` type would be derived from `validSeverityLevels`, but that would mean either\n//\n// a) moving `validSeverityLevels` to `@sentry/types`,\n// b) moving the`SeverityLevel` type here, or\n// c) importing `validSeverityLevels` from here into `@sentry/types`.\n//\n// Option A would make `@sentry/types` a runtime dependency of `@sentry/utils` (not good), and options B and C would\n// create a circular dependency between `@sentry/types` and `@sentry/utils` (also not good). So a TODO accompanying the\n// type, reminding anyone who changes it to change this list also, will have to do.\n\nconst validSeverityLevels = ['fatal', 'error', 'warning', 'log', 'info', 'debug'];\n\n/**\n * Converts a string-based level into a member of the deprecated {@link Severity} enum.\n *\n * @deprecated `severityFromString` is deprecated. Please use `severityLevelFromString` instead.\n *\n * @param level String representation of Severity\n * @returns Severity\n */\nfunction severityFromString(level) {\n  return severityLevelFromString(level) ;\n}\n\n/**\n * Converts a string-based level into a `SeverityLevel`, normalizing it along the way.\n *\n * @param level String representation of desired `SeverityLevel`.\n * @returns The `SeverityLevel` corresponding to the given string, or 'log' if the string isn't a valid level.\n */\nfunction severityLevelFromString(level) {\n  return (level === 'warn' ? 'warning' : validSeverityLevels.includes(level) ? level : 'log') ;\n}\n\nexport { severityFromString, severityLevelFromString, validSeverityLevels };\n//# sourceMappingURL=severity.js.map\n",
  "import { isNodeEnv, dynamicRequire } from './node.js';\nimport { getGlobalObject } from './worldwide.js';\n\n// eslint-disable-next-line deprecation/deprecation\nconst WINDOW = getGlobalObject();\n\n/**\n * An object that can return the current timestamp in seconds since the UNIX epoch.\n */\n\n/**\n * A TimestampSource implementation for environments that do not support the Performance Web API natively.\n *\n * Note that this TimestampSource does not use a monotonic clock. A call to `nowSeconds` may return a timestamp earlier\n * than a previously returned value. We do not try to emulate a monotonic behavior in order to facilitate debugging. It\n * is more obvious to explain \"why does my span have negative duration\" than \"why my spans have zero duration\".\n */\nconst dateTimestampSource = {\n  nowSeconds: () => Date.now() / 1000,\n};\n\n/**\n * A partial definition of the [Performance Web API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Performance}\n * for accessing a high-resolution monotonic clock.\n */\n\n/**\n * Returns a wrapper around the native Performance API browser implementation, or undefined for browsers that do not\n * support the API.\n *\n * Wrapping the native API works around differences in behavior from different browsers.\n */\nfunction getBrowserPerformance() {\n  const { performance } = WINDOW;\n  if (!performance || !performance.now) {\n    return undefined;\n  }\n\n  // Replace performance.timeOrigin with our own timeOrigin based on Date.now().\n  //\n  // This is a partial workaround for browsers reporting performance.timeOrigin such that performance.timeOrigin +\n  // performance.now() gives a date arbitrarily in the past.\n  //\n  // Additionally, computing timeOrigin in this way fills the gap for browsers where performance.timeOrigin is\n  // undefined.\n  //\n  // The assumption that performance.timeOrigin + performance.now() ~= Date.now() is flawed, but we depend on it to\n  // interact with data coming out of performance entries.\n  //\n  // Note that despite recommendations against it in the spec, browsers implement the Performance API with a clock that\n  // might stop when the computer is asleep (and perhaps under other circumstances). Such behavior causes\n  // performance.timeOrigin + performance.now() to have an arbitrary skew over Date.now(). In laptop computers, we have\n  // observed skews that can be as long as days, weeks or months.\n  //\n  // See https://github.com/getsentry/sentry-javascript/issues/2590.\n  //\n  // BUG: despite our best intentions, this workaround has its limitations. It mostly addresses timings of pageload\n  // transactions, but ignores the skew built up over time that can aversely affect timestamps of navigation\n  // transactions of long-lived web pages.\n  const timeOrigin = Date.now() - performance.now();\n\n  return {\n    now: () => performance.now(),\n    timeOrigin,\n  };\n}\n\n/**\n * Returns the native Performance API implementation from Node.js. Returns undefined in old Node.js versions that don't\n * implement the API.\n */\nfunction getNodePerformance() {\n  try {\n    const perfHooks = dynamicRequire(module, 'perf_hooks') ;\n    return perfHooks.performance;\n  } catch (_) {\n    return undefined;\n  }\n}\n\n/**\n * The Performance API implementation for the current platform, if available.\n */\nconst platformPerformance = isNodeEnv() ? getNodePerformance() : getBrowserPerformance();\n\nconst timestampSource =\n  platformPerformance === undefined\n    ? dateTimestampSource\n    : {\n        nowSeconds: () => (platformPerformance.timeOrigin + platformPerformance.now()) / 1000,\n      };\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using the Date API.\n */\nconst dateTimestampInSeconds = dateTimestampSource.nowSeconds.bind(dateTimestampSource);\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using either the Performance or Date APIs, depending on the\n * availability of the Performance API.\n *\n * See `usingPerformanceAPI` to test whether the Performance API is used.\n *\n * BUG: Note that because of how browsers implement the Performance API, the clock might stop when the computer is\n * asleep. This creates a skew between `dateTimestampInSeconds` and `timestampInSeconds`. The\n * skew can grow to arbitrary amounts like days, weeks or months.\n * See https://github.com/getsentry/sentry-javascript/issues/2590.\n */\nconst timestampInSeconds = timestampSource.nowSeconds.bind(timestampSource);\n\n/**\n * Re-exported with an old name for backwards-compatibility.\n * TODO (v8): Remove this\n *\n * @deprecated Use `timestampInSeconds` instead.\n */\nconst timestampWithMs = timestampInSeconds;\n\n/**\n * A boolean that is true when timestampInSeconds uses the Performance API to produce monotonic timestamps.\n */\nconst usingPerformanceAPI = platformPerformance !== undefined;\n\n/**\n * Internal helper to store what is the source of browserPerformanceTimeOrigin below. For debugging only.\n */\nlet _browserPerformanceTimeOriginMode;\n\n/**\n * The number of milliseconds since the UNIX epoch. This value is only usable in a browser, and only when the\n * performance API is available.\n */\nconst browserPerformanceTimeOrigin = (() => {\n  // Unfortunately browsers may report an inaccurate time origin data, through either performance.timeOrigin or\n  // performance.timing.navigationStart, which results in poor results in performance data. We only treat time origin\n  // data as reliable if they are within a reasonable threshold of the current time.\n\n  const { performance } = WINDOW;\n  if (!performance || !performance.now) {\n    _browserPerformanceTimeOriginMode = 'none';\n    return undefined;\n  }\n\n  const threshold = 3600 * 1000;\n  const performanceNow = performance.now();\n  const dateNow = Date.now();\n\n  // if timeOrigin isn't available set delta to threshold so it isn't used\n  const timeOriginDelta = performance.timeOrigin\n    ? Math.abs(performance.timeOrigin + performanceNow - dateNow)\n    : threshold;\n  const timeOriginIsReliable = timeOriginDelta < threshold;\n\n  // While performance.timing.navigationStart is deprecated in favor of performance.timeOrigin, performance.timeOrigin\n  // is not as widely supported. Namely, performance.timeOrigin is undefined in Safari as of writing.\n  // Also as of writing, performance.timing is not available in Web Workers in mainstream browsers, so it is not always\n  // a valid fallback. In the absence of an initial time provided by the browser, fallback to the current time from the\n  // Date API.\n  // eslint-disable-next-line deprecation/deprecation\n  const navigationStart = performance.timing && performance.timing.navigationStart;\n  const hasNavigationStart = typeof navigationStart === 'number';\n  // if navigationStart isn't available set delta to threshold so it isn't used\n  const navigationStartDelta = hasNavigationStart ? Math.abs(navigationStart + performanceNow - dateNow) : threshold;\n  const navigationStartIsReliable = navigationStartDelta < threshold;\n\n  if (timeOriginIsReliable || navigationStartIsReliable) {\n    // Use the more reliable time origin\n    if (timeOriginDelta <= navigationStartDelta) {\n      _browserPerformanceTimeOriginMode = 'timeOrigin';\n      return performance.timeOrigin;\n    } else {\n      _browserPerformanceTimeOriginMode = 'navigationStart';\n      return navigationStart;\n    }\n  }\n\n  // Either both timeOrigin and navigationStart are skewed or neither is available, fallback to Date.\n  _browserPerformanceTimeOriginMode = 'dateNow';\n  return dateNow;\n})();\n\nexport { _browserPerformanceTimeOriginMode, browserPerformanceTimeOrigin, dateTimestampInSeconds, timestampInSeconds, timestampWithMs, usingPerformanceAPI };\n//# sourceMappingURL=time.js.map\n",
  "import { isNodeEnv, dynamicRequire } from './node.js';\nimport { getGlobalObject } from './worldwide.js';\n\n// eslint-disable-next-line deprecation/deprecation\nconst WINDOW = getGlobalObject();\n\n/**\n * An object that can return the current timestamp in seconds since the UNIX epoch.\n */\n\n/**\n * A TimestampSource implementation for environments that do not support the Performance Web API natively.\n *\n * Note that this TimestampSource does not use a monotonic clock. A call to `nowSeconds` may return a timestamp earlier\n * than a previously returned value. We do not try to emulate a monotonic behavior in order to facilitate debugging. It\n * is more obvious to explain \"why does my span have negative duration\" than \"why my spans have zero duration\".\n */\nconst dateTimestampSource = {\n  nowSeconds: () => Date.now() / 1000,\n};\n\n/**\n * A partial definition of the [Performance Web API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Performance}\n * for accessing a high-resolution monotonic clock.\n */\n\n/**\n * Returns a wrapper around the native Performance API browser implementation, or undefined for browsers that do not\n * support the API.\n *\n * Wrapping the native API works around differences in behavior from different browsers.\n */\nfunction getBrowserPerformance() {\n  const { performance } = WINDOW;\n  if (!performance || !performance.now) {\n    return undefined;\n  }\n\n  // Replace performance.timeOrigin with our own timeOrigin based on Date.now().\n  //\n  // This is a partial workaround for browsers reporting performance.timeOrigin such that performance.timeOrigin +\n  // performance.now() gives a date arbitrarily in the past.\n  //\n  // Additionally, computing timeOrigin in this way fills the gap for browsers where performance.timeOrigin is\n  // undefined.\n  //\n  // The assumption that performance.timeOrigin + performance.now() ~= Date.now() is flawed, but we depend on it to\n  // interact with data coming out of performance entries.\n  //\n  // Note that despite recommendations against it in the spec, browsers implement the Performance API with a clock that\n  // might stop when the computer is asleep (and perhaps under other circumstances). Such behavior causes\n  // performance.timeOrigin + performance.now() to have an arbitrary skew over Date.now(). In laptop computers, we have\n  // observed skews that can be as long as days, weeks or months.\n  //\n  // See https://github.com/getsentry/sentry-javascript/issues/2590.\n  //\n  // BUG: despite our best intentions, this workaround has its limitations. It mostly addresses timings of pageload\n  // transactions, but ignores the skew built up over time that can aversely affect timestamps of navigation\n  // transactions of long-lived web pages.\n  const timeOrigin = Date.now() - performance.now();\n\n  return {\n    now: () => performance.now(),\n    timeOrigin,\n  };\n}\n\n/**\n * Returns the native Performance API implementation from Node.js. Returns undefined in old Node.js versions that don't\n * implement the API.\n */\nfunction getNodePerformance() {\n  try {\n    const perfHooks = dynamicRequire(module, 'perf_hooks') ;\n    return perfHooks.performance;\n  } catch (_) {\n    return undefined;\n  }\n}\n\n/**\n * The Performance API implementation for the current platform, if available.\n */\nconst platformPerformance = isNodeEnv() ? getNodePerformance() : getBrowserPerformance();\n\nconst timestampSource =\n  platformPerformance === undefined\n    ? dateTimestampSource\n    : {\n        nowSeconds: () => (platformPerformance.timeOrigin + platformPerformance.now()) / 1000,\n      };\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using the Date API.\n */\nconst dateTimestampInSeconds = dateTimestampSource.nowSeconds.bind(dateTimestampSource);\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using either the Performance or Date APIs, depending on the\n * availability of the Performance API.\n *\n * See `usingPerformanceAPI` to test whether the Performance API is used.\n *\n * BUG: Note that because of how browsers implement the Performance API, the clock might stop when the computer is\n * asleep. This creates a skew between `dateTimestampInSeconds` and `timestampInSeconds`. The\n * skew can grow to arbitrary amounts like days, weeks or months.\n * See https://github.com/getsentry/sentry-javascript/issues/2590.\n */\nconst timestampInSeconds = timestampSource.nowSeconds.bind(timestampSource);\n\n/**\n * Re-exported with an old name for backwards-compatibility.\n * TODO (v8): Remove this\n *\n * @deprecated Use `timestampInSeconds` instead.\n */\nconst timestampWithMs = timestampInSeconds;\n\n/**\n * A boolean that is true when timestampInSeconds uses the Performance API to produce monotonic timestamps.\n */\nconst usingPerformanceAPI = platformPerformance !== undefined;\n\n/**\n * Internal helper to store what is the source of browserPerformanceTimeOrigin below. For debugging only.\n */\nlet _browserPerformanceTimeOriginMode;\n\n/**\n * The number of milliseconds since the UNIX epoch. This value is only usable in a browser, and only when the\n * performance API is available.\n */\nconst browserPerformanceTimeOrigin = (() => {\n  // Unfortunately browsers may report an inaccurate time origin data, through either performance.timeOrigin or\n  // performance.timing.navigationStart, which results in poor results in performance data. We only treat time origin\n  // data as reliable if they are within a reasonable threshold of the current time.\n\n  const { performance } = WINDOW;\n  if (!performance || !performance.now) {\n    _browserPerformanceTimeOriginMode = 'none';\n    return undefined;\n  }\n\n  const threshold = 3600 * 1000;\n  const performanceNow = performance.now();\n  const dateNow = Date.now();\n\n  // if timeOrigin isn't available set delta to threshold so it isn't used\n  const timeOriginDelta = performance.timeOrigin\n    ? Math.abs(performance.timeOrigin + performanceNow - dateNow)\n    : threshold;\n  const timeOriginIsReliable = timeOriginDelta < threshold;\n\n  // While performance.timing.navigationStart is deprecated in favor of performance.timeOrigin, performance.timeOrigin\n  // is not as widely supported. Namely, performance.timeOrigin is undefined in Safari as of writing.\n  // Also as of writing, performance.timing is not available in Web Workers in mainstream browsers, so it is not always\n  // a valid fallback. In the absence of an initial time provided by the browser, fallback to the current time from the\n  // Date API.\n  // eslint-disable-next-line deprecation/deprecation\n  const navigationStart = performance.timing && performance.timing.navigationStart;\n  const hasNavigationStart = typeof navigationStart === 'number';\n  // if navigationStart isn't available set delta to threshold so it isn't used\n  const navigationStartDelta = hasNavigationStart ? Math.abs(navigationStart + performanceNow - dateNow) : threshold;\n  const navigationStartIsReliable = navigationStartDelta < threshold;\n\n  if (timeOriginIsReliable || navigationStartIsReliable) {\n    // Use the more reliable time origin\n    if (timeOriginDelta <= navigationStartDelta) {\n      _browserPerformanceTimeOriginMode = 'timeOrigin';\n      return performance.timeOrigin;\n    } else {\n      _browserPerformanceTimeOriginMode = 'navigationStart';\n      return navigationStart;\n    }\n  }\n\n  // Either both timeOrigin and navigationStart are skewed or neither is available, fallback to Date.\n  _browserPerformanceTimeOriginMode = 'dateNow';\n  return dateNow;\n})();\n\nexport { _browserPerformanceTimeOriginMode, browserPerformanceTimeOrigin, dateTimestampInSeconds, timestampInSeconds, timestampWithMs, usingPerformanceAPI };\n//# sourceMappingURL=time.js.map\n",
  "import { DEBUG_BUILD } from './debug-build.js';\nimport { isString } from './is.js';\nimport { logger } from './logger.js';\n\nconst BAGGAGE_HEADER_NAME = 'baggage';\n\nconst SENTRY_BAGGAGE_KEY_PREFIX = 'sentry-';\n\nconst SENTRY_BAGGAGE_KEY_PREFIX_REGEX = /^sentry-/;\n\n/**\n * Max length of a serialized baggage string\n *\n * https://www.w3.org/TR/baggage/#limits\n */\nconst MAX_BAGGAGE_STRING_LENGTH = 8192;\n\n/**\n * Takes a baggage header and turns it into Dynamic Sampling Context, by extracting all the \"sentry-\" prefixed values\n * from it.\n *\n * @param baggageHeader A very bread definition of a baggage header as it might appear in various frameworks.\n * @returns The Dynamic Sampling Context that was found on `baggageHeader`, if there was any, `undefined` otherwise.\n */\nfunction baggageHeaderToDynamicSamplingContext(\n  // Very liberal definition of what any incoming header might look like\n  baggageHeader,\n) {\n  if (!isString(baggageHeader) && !Array.isArray(baggageHeader)) {\n    return undefined;\n  }\n\n  // Intermediary object to store baggage key value pairs of incoming baggage headers on.\n  // It is later used to read Sentry-DSC-values from.\n  let baggageObject = {};\n\n  if (Array.isArray(baggageHeader)) {\n    // Combine all baggage headers into one object containing the baggage values so we can later read the Sentry-DSC-values from it\n    baggageObject = baggageHeader.reduce((acc, curr) => {\n      const currBaggageObject = baggageHeaderToObject(curr);\n      return {\n        ...acc,\n        ...currBaggageObject,\n      };\n    }, {});\n  } else {\n    // Return undefined if baggage header is an empty string (technically an empty baggage header is not spec conform but\n    // this is how we choose to handle it)\n    if (!baggageHeader) {\n      return undefined;\n    }\n\n    baggageObject = baggageHeaderToObject(baggageHeader);\n  }\n\n  // Read all \"sentry-\" prefixed values out of the baggage object and put it onto a dynamic sampling context object.\n  const dynamicSamplingContext = Object.entries(baggageObject).reduce((acc, [key, value]) => {\n    if (key.match(SENTRY_BAGGAGE_KEY_PREFIX_REGEX)) {\n      const nonPrefixedKey = key.slice(SENTRY_BAGGAGE_KEY_PREFIX.length);\n      acc[nonPrefixedKey] = value;\n    }\n    return acc;\n  }, {});\n\n  // Only return a dynamic sampling context object if there are keys in it.\n  // A keyless object means there were no sentry values on the header, which means that there is no DSC.\n  if (Object.keys(dynamicSamplingContext).length > 0) {\n    return dynamicSamplingContext ;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * Turns a Dynamic Sampling Object into a baggage header by prefixing all the keys on the object with \"sentry-\".\n *\n * @param dynamicSamplingContext The Dynamic Sampling Context to turn into a header. For convenience and compatibility\n * with the `getDynamicSamplingContext` method on the Transaction class ,this argument can also be `undefined`. If it is\n * `undefined` the function will return `undefined`.\n * @returns a baggage header, created from `dynamicSamplingContext`, or `undefined` either if `dynamicSamplingContext`\n * was `undefined`, or if `dynamicSamplingContext` didn't contain any values.\n */\nfunction dynamicSamplingContextToSentryBaggageHeader(\n  // this also takes undefined for convenience and bundle size in other places\n  dynamicSamplingContext,\n) {\n  if (!dynamicSamplingContext) {\n    return undefined;\n  }\n\n  // Prefix all DSC keys with \"sentry-\" and put them into a new object\n  const sentryPrefixedDSC = Object.entries(dynamicSamplingContext).reduce(\n    (acc, [dscKey, dscValue]) => {\n      if (dscValue) {\n        acc[`${SENTRY_BAGGAGE_KEY_PREFIX}${dscKey}`] = dscValue;\n      }\n      return acc;\n    },\n    {},\n  );\n\n  return objectToBaggageHeader(sentryPrefixedDSC);\n}\n\n/**\n * Will parse a baggage header, which is a simple key-value map, into a flat object.\n *\n * @param baggageHeader The baggage header to parse.\n * @returns a flat object containing all the key-value pairs from `baggageHeader`.\n */\nfunction baggageHeaderToObject(baggageHeader) {\n  return baggageHeader\n    .split(',')\n    .map(baggageEntry => baggageEntry.split('=').map(keyOrValue => decodeURIComponent(keyOrValue.trim())))\n    .reduce((acc, [key, value]) => {\n      acc[key] = value;\n      return acc;\n    }, {});\n}\n\n/**\n * Turns a flat object (key-value pairs) into a baggage header, which is also just key-value pairs.\n *\n * @param object The object to turn into a baggage header.\n * @returns a baggage header string, or `undefined` if the object didn't have any values, since an empty baggage header\n * is not spec compliant.\n */\nfunction objectToBaggageHeader(object) {\n  if (Object.keys(object).length === 0) {\n    // An empty baggage header is not spec compliant: We return undefined.\n    return undefined;\n  }\n\n  return Object.entries(object).reduce((baggageHeader, [objectKey, objectValue], currentIndex) => {\n    const baggageEntry = `${encodeURIComponent(objectKey)}=${encodeURIComponent(objectValue)}`;\n    const newBaggageHeader = currentIndex === 0 ? baggageEntry : `${baggageHeader},${baggageEntry}`;\n    if (newBaggageHeader.length > MAX_BAGGAGE_STRING_LENGTH) {\n      DEBUG_BUILD &&\n        logger.warn(\n          `Not adding key: ${objectKey} with val: ${objectValue} to baggage header due to exceeding baggage size limits.`,\n        );\n      return baggageHeader;\n    } else {\n      return newBaggageHeader;\n    }\n  }, '');\n}\n\nexport { BAGGAGE_HEADER_NAME, MAX_BAGGAGE_STRING_LENGTH, SENTRY_BAGGAGE_KEY_PREFIX, SENTRY_BAGGAGE_KEY_PREFIX_REGEX, baggageHeaderToDynamicSamplingContext, dynamicSamplingContextToSentryBaggageHeader };\n//# sourceMappingURL=baggage.js.map\n",
  "import { DEBUG_BUILD } from './debug-build.js';\nimport { isString } from './is.js';\nimport { logger } from './logger.js';\n\nconst BAGGAGE_HEADER_NAME = 'baggage';\n\nconst SENTRY_BAGGAGE_KEY_PREFIX = 'sentry-';\n\nconst SENTRY_BAGGAGE_KEY_PREFIX_REGEX = /^sentry-/;\n\n/**\n * Max length of a serialized baggage string\n *\n * https://www.w3.org/TR/baggage/#limits\n */\nconst MAX_BAGGAGE_STRING_LENGTH = 8192;\n\n/**\n * Takes a baggage header and turns it into Dynamic Sampling Context, by extracting all the \"sentry-\" prefixed values\n * from it.\n *\n * @param baggageHeader A very bread definition of a baggage header as it might appear in various frameworks.\n * @returns The Dynamic Sampling Context that was found on `baggageHeader`, if there was any, `undefined` otherwise.\n */\nfunction baggageHeaderToDynamicSamplingContext(\n  // Very liberal definition of what any incoming header might look like\n  baggageHeader,\n) {\n  if (!isString(baggageHeader) && !Array.isArray(baggageHeader)) {\n    return undefined;\n  }\n\n  // Intermediary object to store baggage key value pairs of incoming baggage headers on.\n  // It is later used to read Sentry-DSC-values from.\n  let baggageObject = {};\n\n  if (Array.isArray(baggageHeader)) {\n    // Combine all baggage headers into one object containing the baggage values so we can later read the Sentry-DSC-values from it\n    baggageObject = baggageHeader.reduce((acc, curr) => {\n      const currBaggageObject = baggageHeaderToObject(curr);\n      return {\n        ...acc,\n        ...currBaggageObject,\n      };\n    }, {});\n  } else {\n    // Return undefined if baggage header is an empty string (technically an empty baggage header is not spec conform but\n    // this is how we choose to handle it)\n    if (!baggageHeader) {\n      return undefined;\n    }\n\n    baggageObject = baggageHeaderToObject(baggageHeader);\n  }\n\n  // Read all \"sentry-\" prefixed values out of the baggage object and put it onto a dynamic sampling context object.\n  const dynamicSamplingContext = Object.entries(baggageObject).reduce((acc, [key, value]) => {\n    if (key.match(SENTRY_BAGGAGE_KEY_PREFIX_REGEX)) {\n      const nonPrefixedKey = key.slice(SENTRY_BAGGAGE_KEY_PREFIX.length);\n      acc[nonPrefixedKey] = value;\n    }\n    return acc;\n  }, {});\n\n  // Only return a dynamic sampling context object if there are keys in it.\n  // A keyless object means there were no sentry values on the header, which means that there is no DSC.\n  if (Object.keys(dynamicSamplingContext).length > 0) {\n    return dynamicSamplingContext ;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * Turns a Dynamic Sampling Object into a baggage header by prefixing all the keys on the object with \"sentry-\".\n *\n * @param dynamicSamplingContext The Dynamic Sampling Context to turn into a header. For convenience and compatibility\n * with the `getDynamicSamplingContext` method on the Transaction class ,this argument can also be `undefined`. If it is\n * `undefined` the function will return `undefined`.\n * @returns a baggage header, created from `dynamicSamplingContext`, or `undefined` either if `dynamicSamplingContext`\n * was `undefined`, or if `dynamicSamplingContext` didn't contain any values.\n */\nfunction dynamicSamplingContextToSentryBaggageHeader(\n  // this also takes undefined for convenience and bundle size in other places\n  dynamicSamplingContext,\n) {\n  if (!dynamicSamplingContext) {\n    return undefined;\n  }\n\n  // Prefix all DSC keys with \"sentry-\" and put them into a new object\n  const sentryPrefixedDSC = Object.entries(dynamicSamplingContext).reduce(\n    (acc, [dscKey, dscValue]) => {\n      if (dscValue) {\n        acc[`${SENTRY_BAGGAGE_KEY_PREFIX}${dscKey}`] = dscValue;\n      }\n      return acc;\n    },\n    {},\n  );\n\n  return objectToBaggageHeader(sentryPrefixedDSC);\n}\n\n/**\n * Will parse a baggage header, which is a simple key-value map, into a flat object.\n *\n * @param baggageHeader The baggage header to parse.\n * @returns a flat object containing all the key-value pairs from `baggageHeader`.\n */\nfunction baggageHeaderToObject(baggageHeader) {\n  return baggageHeader\n    .split(',')\n    .map(baggageEntry => baggageEntry.split('=').map(keyOrValue => decodeURIComponent(keyOrValue.trim())))\n    .reduce((acc, [key, value]) => {\n      acc[key] = value;\n      return acc;\n    }, {});\n}\n\n/**\n * Turns a flat object (key-value pairs) into a baggage header, which is also just key-value pairs.\n *\n * @param object The object to turn into a baggage header.\n * @returns a baggage header string, or `undefined` if the object didn't have any values, since an empty baggage header\n * is not spec compliant.\n */\nfunction objectToBaggageHeader(object) {\n  if (Object.keys(object).length === 0) {\n    // An empty baggage header is not spec compliant: We return undefined.\n    return undefined;\n  }\n\n  return Object.entries(object).reduce((baggageHeader, [objectKey, objectValue], currentIndex) => {\n    const baggageEntry = `${encodeURIComponent(objectKey)}=${encodeURIComponent(objectValue)}`;\n    const newBaggageHeader = currentIndex === 0 ? baggageEntry : `${baggageHeader},${baggageEntry}`;\n    if (newBaggageHeader.length > MAX_BAGGAGE_STRING_LENGTH) {\n      DEBUG_BUILD &&\n        logger.warn(\n          `Not adding key: ${objectKey} with val: ${objectValue} to baggage header due to exceeding baggage size limits.`,\n        );\n      return baggageHeader;\n    } else {\n      return newBaggageHeader;\n    }\n  }, '');\n}\n\nexport { BAGGAGE_HEADER_NAME, MAX_BAGGAGE_STRING_LENGTH, SENTRY_BAGGAGE_KEY_PREFIX, SENTRY_BAGGAGE_KEY_PREFIX_REGEX, baggageHeaderToDynamicSamplingContext, dynamicSamplingContextToSentryBaggageHeader };\n//# sourceMappingURL=baggage.js.map\n",
  "import { baggageHeaderToDynamicSamplingContext } from './baggage.js';\nimport { uuid4 } from './misc.js';\n\nconst TRACEPARENT_REGEXP = new RegExp(\n  '^[ \\\\t]*' + // whitespace\n    '([0-9a-f]{32})?' + // trace_id\n    '-?([0-9a-f]{16})?' + // span_id\n    '-?([01])?' + // sampled\n    '[ \\\\t]*$', // whitespace\n);\n\n/**\n * Extract transaction context data from a `sentry-trace` header.\n *\n * @param traceparent Traceparent string\n *\n * @returns Object containing data from the header, or undefined if traceparent string is malformed\n */\nfunction extractTraceparentData(traceparent) {\n  if (!traceparent) {\n    return undefined;\n  }\n\n  const matches = traceparent.match(TRACEPARENT_REGEXP);\n  if (!matches) {\n    return undefined;\n  }\n\n  let parentSampled;\n  if (matches[3] === '1') {\n    parentSampled = true;\n  } else if (matches[3] === '0') {\n    parentSampled = false;\n  }\n\n  return {\n    traceId: matches[1],\n    parentSampled,\n    parentSpanId: matches[2],\n  };\n}\n\n/**\n * Create tracing context from incoming headers.\n */\nfunction tracingContextFromHeaders(\n  sentryTrace,\n  baggage,\n)\n\n {\n  const traceparentData = extractTraceparentData(sentryTrace);\n  const dynamicSamplingContext = baggageHeaderToDynamicSamplingContext(baggage);\n\n  const { traceId, parentSpanId, parentSampled } = traceparentData || {};\n\n  const propagationContext = {\n    traceId: traceId || uuid4(),\n    spanId: uuid4().substring(16),\n    sampled: parentSampled,\n  };\n\n  if (parentSpanId) {\n    propagationContext.parentSpanId = parentSpanId;\n  }\n\n  if (dynamicSamplingContext) {\n    propagationContext.dsc = dynamicSamplingContext ;\n  }\n\n  return {\n    traceparentData,\n    dynamicSamplingContext,\n    propagationContext,\n  };\n}\n\n/**\n * Create sentry-trace header from span context values.\n */\nfunction generateSentryTraceHeader(\n  traceId = uuid4(),\n  spanId = uuid4().substring(16),\n  sampled,\n) {\n  let sampledString = '';\n  if (sampled !== undefined) {\n    sampledString = sampled ? '-1' : '-0';\n  }\n  return `${traceId}-${spanId}${sampledString}`;\n}\n\nexport { TRACEPARENT_REGEXP, extractTraceparentData, generateSentryTraceHeader, tracingContextFromHeaders };\n//# sourceMappingURL=tracing.js.map\n",
  "import { dsnToString } from './dsn.js';\nimport { normalize } from './normalize.js';\nimport { dropUndefinedKeys } from './object.js';\n\n/**\n * Creates an envelope.\n * Make sure to always explicitly provide the generic to this function\n * so that the envelope types resolve correctly.\n */\nfunction createEnvelope(headers, items = []) {\n  return [headers, items] ;\n}\n\n/**\n * Add an item to an envelope.\n * Make sure to always explicitly provide the generic to this function\n * so that the envelope types resolve correctly.\n */\nfunction addItemToEnvelope(envelope, newItem) {\n  const [headers, items] = envelope;\n  return [headers, [...items, newItem]] ;\n}\n\n/**\n * Convenience function to loop through the items and item types of an envelope.\n * (This function was mostly created because working with envelope types is painful at the moment)\n *\n * If the callback returns true, the rest of the items will be skipped.\n */\nfunction forEachEnvelopeItem(\n  envelope,\n  callback,\n) {\n  const envelopeItems = envelope[1];\n\n  for (const envelopeItem of envelopeItems) {\n    const envelopeItemType = envelopeItem[0].type;\n    const result = callback(envelopeItem, envelopeItemType);\n\n    if (result) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n/**\n * Returns true if the envelope contains any of the given envelope item types\n */\nfunction envelopeContainsItemType(envelope, types) {\n  return forEachEnvelopeItem(envelope, (_, type) => types.includes(type));\n}\n\n/**\n * Encode a string to UTF8.\n */\nfunction encodeUTF8(input, textEncoder) {\n  const utf8 = textEncoder || new TextEncoder();\n  return utf8.encode(input);\n}\n\n/**\n * Serializes an envelope.\n */\nfunction serializeEnvelope(envelope, textEncoder) {\n  const [envHeaders, items] = envelope;\n\n  // Initially we construct our envelope as a string and only convert to binary chunks if we encounter binary data\n  let parts = JSON.stringify(envHeaders);\n\n  function append(next) {\n    if (typeof parts === 'string') {\n      parts = typeof next === 'string' ? parts + next : [encodeUTF8(parts, textEncoder), next];\n    } else {\n      parts.push(typeof next === 'string' ? encodeUTF8(next, textEncoder) : next);\n    }\n  }\n\n  for (const item of items) {\n    const [itemHeaders, payload] = item;\n\n    append(`\\n${JSON.stringify(itemHeaders)}\\n`);\n\n    if (typeof payload === 'string' || payload instanceof Uint8Array) {\n      append(payload);\n    } else {\n      let stringifiedPayload;\n      try {\n        stringifiedPayload = JSON.stringify(payload);\n      } catch (e) {\n        // In case, despite all our efforts to keep `payload` circular-dependency-free, `JSON.strinify()` still\n        // fails, we try again after normalizing it again with infinite normalization depth. This of course has a\n        // performance impact but in this case a performance hit is better than throwing.\n        stringifiedPayload = JSON.stringify(normalize(payload));\n      }\n      append(stringifiedPayload);\n    }\n  }\n\n  return typeof parts === 'string' ? parts : concatBuffers(parts);\n}\n\nfunction concatBuffers(buffers) {\n  const totalLength = buffers.reduce((acc, buf) => acc + buf.length, 0);\n\n  const merged = new Uint8Array(totalLength);\n  let offset = 0;\n  for (const buffer of buffers) {\n    merged.set(buffer, offset);\n    offset += buffer.length;\n  }\n\n  return merged;\n}\n\n/**\n * Parses an envelope\n */\nfunction parseEnvelope(\n  env,\n  textEncoder,\n  textDecoder,\n) {\n  let buffer = typeof env === 'string' ? textEncoder.encode(env) : env;\n\n  function readBinary(length) {\n    const bin = buffer.subarray(0, length);\n    // Replace the buffer with the remaining data excluding trailing newline\n    buffer = buffer.subarray(length + 1);\n    return bin;\n  }\n\n  function readJson() {\n    let i = buffer.indexOf(0xa);\n    // If we couldn't find a newline, we must have found the end of the buffer\n    if (i < 0) {\n      i = buffer.length;\n    }\n\n    return JSON.parse(textDecoder.decode(readBinary(i))) ;\n  }\n\n  const envelopeHeader = readJson();\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const items = [];\n\n  while (buffer.length) {\n    const itemHeader = readJson();\n    const binaryLength = typeof itemHeader.length === 'number' ? itemHeader.length : undefined;\n\n    items.push([itemHeader, binaryLength ? readBinary(binaryLength) : readJson()]);\n  }\n\n  return [envelopeHeader, items];\n}\n\n/**\n * Creates attachment envelope items\n */\nfunction createAttachmentEnvelopeItem(\n  attachment,\n  textEncoder,\n) {\n  const buffer = typeof attachment.data === 'string' ? encodeUTF8(attachment.data, textEncoder) : attachment.data;\n\n  return [\n    dropUndefinedKeys({\n      type: 'attachment',\n      length: buffer.length,\n      filename: attachment.filename,\n      content_type: attachment.contentType,\n      attachment_type: attachment.attachmentType,\n    }),\n    buffer,\n  ];\n}\n\nconst ITEM_TYPE_TO_DATA_CATEGORY_MAP = {\n  session: 'session',\n  sessions: 'session',\n  attachment: 'attachment',\n  transaction: 'transaction',\n  event: 'error',\n  client_report: 'internal',\n  user_report: 'default',\n  profile: 'profile',\n  replay_event: 'replay',\n  replay_recording: 'replay',\n  check_in: 'monitor',\n  feedback: 'feedback',\n  // TODO: This is a temporary workaround until we have a proper data category for metrics\n  statsd: 'unknown',\n};\n\n/**\n * Maps the type of an envelope item to a data category.\n */\nfunction envelopeItemTypeToDataCategory(type) {\n  return ITEM_TYPE_TO_DATA_CATEGORY_MAP[type];\n}\n\n/** Extracts the minimal SDK info from from the metadata or an events */\nfunction getSdkMetadataForEnvelopeHeader(metadataOrEvent) {\n  if (!metadataOrEvent || !metadataOrEvent.sdk) {\n    return;\n  }\n  const { name, version } = metadataOrEvent.sdk;\n  return { name, version };\n}\n\n/**\n * Creates event envelope headers, based on event, sdk info and tunnel\n * Note: This function was extracted from the core package to make it available in Replay\n */\nfunction createEventEnvelopeHeaders(\n  event,\n  sdkInfo,\n  tunnel,\n  dsn,\n) {\n  const dynamicSamplingContext = event.sdkProcessingMetadata && event.sdkProcessingMetadata.dynamicSamplingContext;\n  return {\n    event_id: event.event_id ,\n    sent_at: new Date().toISOString(),\n    ...(sdkInfo && { sdk: sdkInfo }),\n    ...(!!tunnel && dsn && { dsn: dsnToString(dsn) }),\n    ...(dynamicSamplingContext && {\n      trace: dropUndefinedKeys({ ...dynamicSamplingContext }),\n    }),\n  };\n}\n\nexport { addItemToEnvelope, createAttachmentEnvelopeItem, createEnvelope, createEventEnvelopeHeaders, envelopeContainsItemType, envelopeItemTypeToDataCategory, forEachEnvelopeItem, getSdkMetadataForEnvelopeHeader, parseEnvelope, serializeEnvelope };\n//# sourceMappingURL=envelope.js.map\n",
  "import { dsnToString } from './dsn.js';\nimport { normalize } from './normalize.js';\nimport { dropUndefinedKeys } from './object.js';\n\n/**\n * Creates an envelope.\n * Make sure to always explicitly provide the generic to this function\n * so that the envelope types resolve correctly.\n */\nfunction createEnvelope(headers, items = []) {\n  return [headers, items] ;\n}\n\n/**\n * Add an item to an envelope.\n * Make sure to always explicitly provide the generic to this function\n * so that the envelope types resolve correctly.\n */\nfunction addItemToEnvelope(envelope, newItem) {\n  const [headers, items] = envelope;\n  return [headers, [...items, newItem]] ;\n}\n\n/**\n * Convenience function to loop through the items and item types of an envelope.\n * (This function was mostly created because working with envelope types is painful at the moment)\n *\n * If the callback returns true, the rest of the items will be skipped.\n */\nfunction forEachEnvelopeItem(\n  envelope,\n  callback,\n) {\n  const envelopeItems = envelope[1];\n\n  for (const envelopeItem of envelopeItems) {\n    const envelopeItemType = envelopeItem[0].type;\n    const result = callback(envelopeItem, envelopeItemType);\n\n    if (result) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n/**\n * Returns true if the envelope contains any of the given envelope item types\n */\nfunction envelopeContainsItemType(envelope, types) {\n  return forEachEnvelopeItem(envelope, (_, type) => types.includes(type));\n}\n\n/**\n * Encode a string to UTF8.\n */\nfunction encodeUTF8(input, textEncoder) {\n  const utf8 = textEncoder || new TextEncoder();\n  return utf8.encode(input);\n}\n\n/**\n * Serializes an envelope.\n */\nfunction serializeEnvelope(envelope, textEncoder) {\n  const [envHeaders, items] = envelope;\n\n  // Initially we construct our envelope as a string and only convert to binary chunks if we encounter binary data\n  let parts = JSON.stringify(envHeaders);\n\n  function append(next) {\n    if (typeof parts === 'string') {\n      parts = typeof next === 'string' ? parts + next : [encodeUTF8(parts, textEncoder), next];\n    } else {\n      parts.push(typeof next === 'string' ? encodeUTF8(next, textEncoder) : next);\n    }\n  }\n\n  for (const item of items) {\n    const [itemHeaders, payload] = item;\n\n    append(`\\n${JSON.stringify(itemHeaders)}\\n`);\n\n    if (typeof payload === 'string' || payload instanceof Uint8Array) {\n      append(payload);\n    } else {\n      let stringifiedPayload;\n      try {\n        stringifiedPayload = JSON.stringify(payload);\n      } catch (e) {\n        // In case, despite all our efforts to keep `payload` circular-dependency-free, `JSON.strinify()` still\n        // fails, we try again after normalizing it again with infinite normalization depth. This of course has a\n        // performance impact but in this case a performance hit is better than throwing.\n        stringifiedPayload = JSON.stringify(normalize(payload));\n      }\n      append(stringifiedPayload);\n    }\n  }\n\n  return typeof parts === 'string' ? parts : concatBuffers(parts);\n}\n\nfunction concatBuffers(buffers) {\n  const totalLength = buffers.reduce((acc, buf) => acc + buf.length, 0);\n\n  const merged = new Uint8Array(totalLength);\n  let offset = 0;\n  for (const buffer of buffers) {\n    merged.set(buffer, offset);\n    offset += buffer.length;\n  }\n\n  return merged;\n}\n\n/**\n * Parses an envelope\n */\nfunction parseEnvelope(\n  env,\n  textEncoder,\n  textDecoder,\n) {\n  let buffer = typeof env === 'string' ? textEncoder.encode(env) : env;\n\n  function readBinary(length) {\n    const bin = buffer.subarray(0, length);\n    // Replace the buffer with the remaining data excluding trailing newline\n    buffer = buffer.subarray(length + 1);\n    return bin;\n  }\n\n  function readJson() {\n    let i = buffer.indexOf(0xa);\n    // If we couldn't find a newline, we must have found the end of the buffer\n    if (i < 0) {\n      i = buffer.length;\n    }\n\n    return JSON.parse(textDecoder.decode(readBinary(i))) ;\n  }\n\n  const envelopeHeader = readJson();\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const items = [];\n\n  while (buffer.length) {\n    const itemHeader = readJson();\n    const binaryLength = typeof itemHeader.length === 'number' ? itemHeader.length : undefined;\n\n    items.push([itemHeader, binaryLength ? readBinary(binaryLength) : readJson()]);\n  }\n\n  return [envelopeHeader, items];\n}\n\n/**\n * Creates attachment envelope items\n */\nfunction createAttachmentEnvelopeItem(\n  attachment,\n  textEncoder,\n) {\n  const buffer = typeof attachment.data === 'string' ? encodeUTF8(attachment.data, textEncoder) : attachment.data;\n\n  return [\n    dropUndefinedKeys({\n      type: 'attachment',\n      length: buffer.length,\n      filename: attachment.filename,\n      content_type: attachment.contentType,\n      attachment_type: attachment.attachmentType,\n    }),\n    buffer,\n  ];\n}\n\nconst ITEM_TYPE_TO_DATA_CATEGORY_MAP = {\n  session: 'session',\n  sessions: 'session',\n  attachment: 'attachment',\n  transaction: 'transaction',\n  event: 'error',\n  client_report: 'internal',\n  user_report: 'default',\n  profile: 'profile',\n  replay_event: 'replay',\n  replay_recording: 'replay',\n  check_in: 'monitor',\n  feedback: 'feedback',\n  // TODO: This is a temporary workaround until we have a proper data category for metrics\n  statsd: 'unknown',\n};\n\n/**\n * Maps the type of an envelope item to a data category.\n */\nfunction envelopeItemTypeToDataCategory(type) {\n  return ITEM_TYPE_TO_DATA_CATEGORY_MAP[type];\n}\n\n/** Extracts the minimal SDK info from from the metadata or an events */\nfunction getSdkMetadataForEnvelopeHeader(metadataOrEvent) {\n  if (!metadataOrEvent || !metadataOrEvent.sdk) {\n    return;\n  }\n  const { name, version } = metadataOrEvent.sdk;\n  return { name, version };\n}\n\n/**\n * Creates event envelope headers, based on event, sdk info and tunnel\n * Note: This function was extracted from the core package to make it available in Replay\n */\nfunction createEventEnvelopeHeaders(\n  event,\n  sdkInfo,\n  tunnel,\n  dsn,\n) {\n  const dynamicSamplingContext = event.sdkProcessingMetadata && event.sdkProcessingMetadata.dynamicSamplingContext;\n  return {\n    event_id: event.event_id ,\n    sent_at: new Date().toISOString(),\n    ...(sdkInfo && { sdk: sdkInfo }),\n    ...(!!tunnel && dsn && { dsn: dsnToString(dsn) }),\n    ...(dynamicSamplingContext && {\n      trace: dropUndefinedKeys({ ...dynamicSamplingContext }),\n    }),\n  };\n}\n\nexport { addItemToEnvelope, createAttachmentEnvelopeItem, createEnvelope, createEventEnvelopeHeaders, envelopeContainsItemType, envelopeItemTypeToDataCategory, forEachEnvelopeItem, getSdkMetadataForEnvelopeHeader, parseEnvelope, serializeEnvelope };\n//# sourceMappingURL=envelope.js.map\n",
  "import { dsnToString } from './dsn.js';\nimport { normalize } from './normalize.js';\nimport { dropUndefinedKeys } from './object.js';\n\n/**\n * Creates an envelope.\n * Make sure to always explicitly provide the generic to this function\n * so that the envelope types resolve correctly.\n */\nfunction createEnvelope(headers, items = []) {\n  return [headers, items] ;\n}\n\n/**\n * Add an item to an envelope.\n * Make sure to always explicitly provide the generic to this function\n * so that the envelope types resolve correctly.\n */\nfunction addItemToEnvelope(envelope, newItem) {\n  const [headers, items] = envelope;\n  return [headers, [...items, newItem]] ;\n}\n\n/**\n * Convenience function to loop through the items and item types of an envelope.\n * (This function was mostly created because working with envelope types is painful at the moment)\n *\n * If the callback returns true, the rest of the items will be skipped.\n */\nfunction forEachEnvelopeItem(\n  envelope,\n  callback,\n) {\n  const envelopeItems = envelope[1];\n\n  for (const envelopeItem of envelopeItems) {\n    const envelopeItemType = envelopeItem[0].type;\n    const result = callback(envelopeItem, envelopeItemType);\n\n    if (result) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n/**\n * Returns true if the envelope contains any of the given envelope item types\n */\nfunction envelopeContainsItemType(envelope, types) {\n  return forEachEnvelopeItem(envelope, (_, type) => types.includes(type));\n}\n\n/**\n * Encode a string to UTF8.\n */\nfunction encodeUTF8(input, textEncoder) {\n  const utf8 = textEncoder || new TextEncoder();\n  return utf8.encode(input);\n}\n\n/**\n * Serializes an envelope.\n */\nfunction serializeEnvelope(envelope, textEncoder) {\n  const [envHeaders, items] = envelope;\n\n  // Initially we construct our envelope as a string and only convert to binary chunks if we encounter binary data\n  let parts = JSON.stringify(envHeaders);\n\n  function append(next) {\n    if (typeof parts === 'string') {\n      parts = typeof next === 'string' ? parts + next : [encodeUTF8(parts, textEncoder), next];\n    } else {\n      parts.push(typeof next === 'string' ? encodeUTF8(next, textEncoder) : next);\n    }\n  }\n\n  for (const item of items) {\n    const [itemHeaders, payload] = item;\n\n    append(`\\n${JSON.stringify(itemHeaders)}\\n`);\n\n    if (typeof payload === 'string' || payload instanceof Uint8Array) {\n      append(payload);\n    } else {\n      let stringifiedPayload;\n      try {\n        stringifiedPayload = JSON.stringify(payload);\n      } catch (e) {\n        // In case, despite all our efforts to keep `payload` circular-dependency-free, `JSON.strinify()` still\n        // fails, we try again after normalizing it again with infinite normalization depth. This of course has a\n        // performance impact but in this case a performance hit is better than throwing.\n        stringifiedPayload = JSON.stringify(normalize(payload));\n      }\n      append(stringifiedPayload);\n    }\n  }\n\n  return typeof parts === 'string' ? parts : concatBuffers(parts);\n}\n\nfunction concatBuffers(buffers) {\n  const totalLength = buffers.reduce((acc, buf) => acc + buf.length, 0);\n\n  const merged = new Uint8Array(totalLength);\n  let offset = 0;\n  for (const buffer of buffers) {\n    merged.set(buffer, offset);\n    offset += buffer.length;\n  }\n\n  return merged;\n}\n\n/**\n * Parses an envelope\n */\nfunction parseEnvelope(\n  env,\n  textEncoder,\n  textDecoder,\n) {\n  let buffer = typeof env === 'string' ? textEncoder.encode(env) : env;\n\n  function readBinary(length) {\n    const bin = buffer.subarray(0, length);\n    // Replace the buffer with the remaining data excluding trailing newline\n    buffer = buffer.subarray(length + 1);\n    return bin;\n  }\n\n  function readJson() {\n    let i = buffer.indexOf(0xa);\n    // If we couldn't find a newline, we must have found the end of the buffer\n    if (i < 0) {\n      i = buffer.length;\n    }\n\n    return JSON.parse(textDecoder.decode(readBinary(i))) ;\n  }\n\n  const envelopeHeader = readJson();\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const items = [];\n\n  while (buffer.length) {\n    const itemHeader = readJson();\n    const binaryLength = typeof itemHeader.length === 'number' ? itemHeader.length : undefined;\n\n    items.push([itemHeader, binaryLength ? readBinary(binaryLength) : readJson()]);\n  }\n\n  return [envelopeHeader, items];\n}\n\n/**\n * Creates attachment envelope items\n */\nfunction createAttachmentEnvelopeItem(\n  attachment,\n  textEncoder,\n) {\n  const buffer = typeof attachment.data === 'string' ? encodeUTF8(attachment.data, textEncoder) : attachment.data;\n\n  return [\n    dropUndefinedKeys({\n      type: 'attachment',\n      length: buffer.length,\n      filename: attachment.filename,\n      content_type: attachment.contentType,\n      attachment_type: attachment.attachmentType,\n    }),\n    buffer,\n  ];\n}\n\nconst ITEM_TYPE_TO_DATA_CATEGORY_MAP = {\n  session: 'session',\n  sessions: 'session',\n  attachment: 'attachment',\n  transaction: 'transaction',\n  event: 'error',\n  client_report: 'internal',\n  user_report: 'default',\n  profile: 'profile',\n  replay_event: 'replay',\n  replay_recording: 'replay',\n  check_in: 'monitor',\n  feedback: 'feedback',\n  // TODO: This is a temporary workaround until we have a proper data category for metrics\n  statsd: 'unknown',\n};\n\n/**\n * Maps the type of an envelope item to a data category.\n */\nfunction envelopeItemTypeToDataCategory(type) {\n  return ITEM_TYPE_TO_DATA_CATEGORY_MAP[type];\n}\n\n/** Extracts the minimal SDK info from from the metadata or an events */\nfunction getSdkMetadataForEnvelopeHeader(metadataOrEvent) {\n  if (!metadataOrEvent || !metadataOrEvent.sdk) {\n    return;\n  }\n  const { name, version } = metadataOrEvent.sdk;\n  return { name, version };\n}\n\n/**\n * Creates event envelope headers, based on event, sdk info and tunnel\n * Note: This function was extracted from the core package to make it available in Replay\n */\nfunction createEventEnvelopeHeaders(\n  event,\n  sdkInfo,\n  tunnel,\n  dsn,\n) {\n  const dynamicSamplingContext = event.sdkProcessingMetadata && event.sdkProcessingMetadata.dynamicSamplingContext;\n  return {\n    event_id: event.event_id ,\n    sent_at: new Date().toISOString(),\n    ...(sdkInfo && { sdk: sdkInfo }),\n    ...(!!tunnel && dsn && { dsn: dsnToString(dsn) }),\n    ...(dynamicSamplingContext && {\n      trace: dropUndefinedKeys({ ...dynamicSamplingContext }),\n    }),\n  };\n}\n\nexport { addItemToEnvelope, createAttachmentEnvelopeItem, createEnvelope, createEventEnvelopeHeaders, envelopeContainsItemType, envelopeItemTypeToDataCategory, forEachEnvelopeItem, getSdkMetadataForEnvelopeHeader, parseEnvelope, serializeEnvelope };\n//# sourceMappingURL=envelope.js.map\n",
  "// Intentionally keeping the key broad, as we don't know for sure what rate limit headers get returned from backend\n\nconst DEFAULT_RETRY_AFTER = 60 * 1000; // 60 seconds\n\n/**\n * Extracts Retry-After value from the request header or returns default value\n * @param header string representation of 'Retry-After' header\n * @param now current unix timestamp\n *\n */\nfunction parseRetryAfterHeader(header, now = Date.now()) {\n  const headerDelay = parseInt(`${header}`, 10);\n  if (!isNaN(headerDelay)) {\n    return headerDelay * 1000;\n  }\n\n  const headerDate = Date.parse(`${header}`);\n  if (!isNaN(headerDate)) {\n    return headerDate - now;\n  }\n\n  return DEFAULT_RETRY_AFTER;\n}\n\n/**\n * Gets the time that the given category is disabled until for rate limiting.\n * In case no category-specific limit is set but a general rate limit across all categories is active,\n * that time is returned.\n *\n * @return the time in ms that the category is disabled until or 0 if there's no active rate limit.\n */\nfunction disabledUntil(limits, category) {\n  return limits[category] || limits.all || 0;\n}\n\n/**\n * Checks if a category is rate limited\n */\nfunction isRateLimited(limits, category, now = Date.now()) {\n  return disabledUntil(limits, category) > now;\n}\n\n/**\n * Update ratelimits from incoming headers.\n *\n * @return the updated RateLimits object.\n */\nfunction updateRateLimits(\n  limits,\n  { statusCode, headers },\n  now = Date.now(),\n) {\n  const updatedRateLimits = {\n    ...limits,\n  };\n\n  // \"The name is case-insensitive.\"\n  // https://developer.mozilla.org/en-US/docs/Web/API/Headers/get\n  const rateLimitHeader = headers && headers['x-sentry-rate-limits'];\n  const retryAfterHeader = headers && headers['retry-after'];\n\n  if (rateLimitHeader) {\n    /**\n     * rate limit headers are of the form\n     *     <header>,<header>,..\n     * where each <header> is of the form\n     *     <retry_after>: <categories>: <scope>: <reason_code>\n     * where\n     *     <retry_after> is a delay in seconds\n     *     <categories> is the event type(s) (error, transaction, etc) being rate limited and is of the form\n     *         <category>;<category>;...\n     *     <scope> is what's being limited (org, project, or key) - ignored by SDK\n     *     <reason_code> is an arbitrary string like \"org_quota\" - ignored by SDK\n     */\n    for (const limit of rateLimitHeader.trim().split(',')) {\n      const [retryAfter, categories] = limit.split(':', 2);\n      const headerDelay = parseInt(retryAfter, 10);\n      const delay = (!isNaN(headerDelay) ? headerDelay : 60) * 1000; // 60sec default\n      if (!categories) {\n        updatedRateLimits.all = now + delay;\n      } else {\n        for (const category of categories.split(';')) {\n          updatedRateLimits[category] = now + delay;\n        }\n      }\n    }\n  } else if (retryAfterHeader) {\n    updatedRateLimits.all = now + parseRetryAfterHeader(retryAfterHeader, now);\n  } else if (statusCode === 429) {\n    updatedRateLimits.all = now + 60 * 1000;\n  }\n\n  return updatedRateLimits;\n}\n\nexport { DEFAULT_RETRY_AFTER, disabledUntil, isRateLimited, parseRetryAfterHeader, updateRateLimits };\n//# sourceMappingURL=ratelimit.js.map\n",
  "import { isError, isPlainObject } from './is.js';\nimport { addExceptionTypeValue, addExceptionMechanism } from './misc.js';\nimport { normalizeToSize } from './normalize.js';\nimport { extractExceptionKeysForMessage } from './object.js';\n\n/**\n * Extracts stack frames from the error.stack string\n */\nfunction parseStackFrames(stackParser, error) {\n  return stackParser(error.stack || '', 1);\n}\n\n/**\n * Extracts stack frames from the error and builds a Sentry Exception\n */\nfunction exceptionFromError(stackParser, error) {\n  const exception = {\n    type: error.name || error.constructor.name,\n    value: error.message,\n  };\n\n  const frames = parseStackFrames(stackParser, error);\n  if (frames.length) {\n    exception.stacktrace = { frames };\n  }\n\n  return exception;\n}\n\nfunction getMessageForObject(exception) {\n  if ('name' in exception && typeof exception.name === 'string') {\n    let message = `'${exception.name}' captured as exception`;\n\n    if ('message' in exception && typeof exception.message === 'string') {\n      message += ` with message '${exception.message}'`;\n    }\n\n    return message;\n  } else if ('message' in exception && typeof exception.message === 'string') {\n    return exception.message;\n  } else {\n    // This will allow us to group events based on top-level keys\n    // which is much better than creating new group when any key/value change\n    return `Object captured as exception with keys: ${extractExceptionKeysForMessage(\n      exception ,\n    )}`;\n  }\n}\n\n/**\n * Builds and Event from a Exception\n * @hidden\n */\nfunction eventFromUnknownInput(\n  getCurrentHub,\n  stackParser,\n  exception,\n  hint,\n) {\n  let ex = exception;\n  const providedMechanism =\n    hint && hint.data && (hint.data ).mechanism;\n  const mechanism = providedMechanism || {\n    handled: true,\n    type: 'generic',\n  };\n\n  if (!isError(exception)) {\n    if (isPlainObject(exception)) {\n      const hub = getCurrentHub();\n      const client = hub.getClient();\n      const normalizeDepth = client && client.getOptions().normalizeDepth;\n      hub.configureScope(scope => {\n        scope.setExtra('__serialized__', normalizeToSize(exception, normalizeDepth));\n      });\n\n      const message = getMessageForObject(exception);\n      ex = (hint && hint.syntheticException) || new Error(message);\n      (ex ).message = message;\n    } else {\n      // This handles when someone does: `throw \"something awesome\";`\n      // We use synthesized Error here so we can extract a (rough) stack trace.\n      ex = (hint && hint.syntheticException) || new Error(exception );\n      (ex ).message = exception ;\n    }\n    mechanism.synthetic = true;\n  }\n\n  const event = {\n    exception: {\n      values: [exceptionFromError(stackParser, ex )],\n    },\n  };\n\n  addExceptionTypeValue(event, undefined, undefined);\n  addExceptionMechanism(event, mechanism);\n\n  return {\n    ...event,\n    event_id: hint && hint.event_id,\n  };\n}\n\n/**\n * Builds and Event from a Message\n * @hidden\n */\nfunction eventFromMessage(\n  stackParser,\n  message,\n  // eslint-disable-next-line deprecation/deprecation\n  level = 'info',\n  hint,\n  attachStacktrace,\n) {\n  const event = {\n    event_id: hint && hint.event_id,\n    level,\n    message,\n  };\n\n  if (attachStacktrace && hint && hint.syntheticException) {\n    const frames = parseStackFrames(stackParser, hint.syntheticException);\n    if (frames.length) {\n      event.exception = {\n        values: [\n          {\n            value: message,\n            stacktrace: { frames },\n          },\n        ],\n      };\n    }\n  }\n\n  return event;\n}\n\nexport { eventFromMessage, eventFromUnknownInput, exceptionFromError, parseStackFrames };\n//# sourceMappingURL=eventbuilder.js.map\n",
  "/** A simple Least Recently Used map */\nclass LRUMap {\n\n   constructor(  _maxSize) {this._maxSize = _maxSize;\n    this._cache = new Map();\n  }\n\n  /** Get the current size of the cache */\n   get size() {\n    return this._cache.size;\n  }\n\n  /** Get an entry or undefined if it was not in the cache. Re-inserts to update the recently used order */\n   get(key) {\n    const value = this._cache.get(key);\n    if (value === undefined) {\n      return undefined;\n    }\n    // Remove and re-insert to update the order\n    this._cache.delete(key);\n    this._cache.set(key, value);\n    return value;\n  }\n\n  /** Insert an entry and evict an older entry if we've reached maxSize */\n   set(key, value) {\n    if (this._cache.size >= this._maxSize) {\n      // keys() returns an iterator in insertion order so keys().next() gives us the oldest key\n      this._cache.delete(this._cache.keys().next().value);\n    }\n    this._cache.set(key, value);\n  }\n\n  /** Remove an entry and return the entry if it was in the cache */\n   remove(key) {\n    const value = this._cache.get(key);\n    if (value) {\n      this._cache.delete(key);\n    }\n    return value;\n  }\n\n  /** Clear all entries */\n   clear() {\n    this._cache.clear();\n  }\n\n  /** Get all the keys */\n   keys() {\n    return Array.from(this._cache.keys());\n  }\n\n  /** Get all the values */\n   values() {\n    const values = [];\n    this._cache.forEach(value => values.push(value));\n    return values;\n  }\n}\n\nexport { LRUMap };\n//# sourceMappingURL=lru.js.map\n",
  "// https://github.com/alangpierce/sucrase/tree/265887868966917f3b924ce38dfad01fbab1329f\n//\n// The MIT License (MIT)\n//\n// Copyright (c) 2012-2018 various contributors (see AUTHORS)\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\n/**\n * Polyfill for the nullish coalescing operator (`??`).\n *\n * Note that the RHS is wrapped in a function so that if it's a computed value, that evaluation won't happen unless the\n * LHS evaluates to a nullish value, to mimic the operator's short-circuiting behavior.\n *\n * Adapted from Sucrase (https://github.com/alangpierce/sucrase)\n *\n * @param lhs The value of the expression to the left of the `??`\n * @param rhsFn A function returning the value of the expression to the right of the `??`\n * @returns The LHS value, unless it's `null` or `undefined`, in which case, the RHS value\n */\nfunction _nullishCoalesce(lhs, rhsFn) {\n  // by checking for loose equality to `null`, we catch both `null` and `undefined`\n  return lhs != null ? lhs : rhsFn();\n}\n\n// Sucrase version:\n// function _nullishCoalesce(lhs, rhsFn) {\n//   if (lhs != null) {\n//     return lhs;\n//   } else {\n//     return rhsFn();\n//   }\n// }\n\nexport { _nullishCoalesce };\n//# sourceMappingURL=_nullishCoalesce.js.map\n",
  "/**\n * Polyfill for the optional chain operator, `?.`, given previous conversion of the expression into an array of values,\n * descriptors, and functions.\n *\n * Adapted from Sucrase (https://github.com/alangpierce/sucrase)\n * See https://github.com/alangpierce/sucrase/blob/265887868966917f3b924ce38dfad01fbab1329f/src/transformers/OptionalChainingNullishTransformer.ts#L15\n *\n * @param ops Array result of expression conversion\n * @returns The value of the expression\n */\nfunction _optionalChain(ops) {\n  let lastAccessLHS = undefined;\n  let value = ops[0];\n  let i = 1;\n  while (i < ops.length) {\n    const op = ops[i] ;\n    const fn = ops[i + 1] ;\n    i += 2;\n    // by checking for loose equality to `null`, we catch both `null` and `undefined`\n    if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) {\n      // really we're meaning to return `undefined` as an actual value here, but it saves bytes not to write it\n      return;\n    }\n    if (op === 'access' || op === 'optionalAccess') {\n      lastAccessLHS = value;\n      value = fn(value);\n    } else if (op === 'call' || op === 'optionalCall') {\n      value = fn((...args) => (value ).call(lastAccessLHS, ...args));\n      lastAccessLHS = undefined;\n    }\n  }\n  return value;\n}\n\n// Sucrase version\n// function _optionalChain(ops) {\n//   let lastAccessLHS = undefined;\n//   let value = ops[0];\n//   let i = 1;\n//   while (i < ops.length) {\n//     const op = ops[i];\n//     const fn = ops[i + 1];\n//     i += 2;\n//     if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) {\n//       return undefined;\n//     }\n//     if (op === 'access' || op === 'optionalAccess') {\n//       lastAccessLHS = value;\n//       value = fn(value);\n//     } else if (op === 'call' || op === 'optionalCall') {\n//       value = fn((...args) => value.call(lastAccessLHS, ...args));\n//       lastAccessLHS = undefined;\n//     }\n//   }\n//   return value;\n// }\n\nexport { _optionalChain };\n//# sourceMappingURL=_optionalChain.js.map\n",
  "/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nconst DEBUG_BUILD = (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__);\n\nexport { DEBUG_BUILD };\n//# sourceMappingURL=debug-build.js.map\n",
  "const DEFAULT_ENVIRONMENT = 'production';\n\nexport { DEFAULT_ENVIRONMENT };\n//# sourceMappingURL=constants.js.map\n",
  "import { getGlobalSingleton, SyncPromise, logger, isThenable } from '@sentry/utils';\nimport { DEBUG_BUILD } from './debug-build.js';\n\n/**\n * Returns the global event processors.\n */\nfunction getGlobalEventProcessors() {\n  return getGlobalSingleton('globalEventProcessors', () => []);\n}\n\n/**\n * Add a EventProcessor to be kept globally.\n * @param callback EventProcessor to add\n */\nfunction addGlobalEventProcessor(callback) {\n  getGlobalEventProcessors().push(callback);\n}\n\n/**\n * Process an array of event processors, returning the processed event (or `null` if the event was dropped).\n */\nfunction notifyEventProcessors(\n  processors,\n  event,\n  hint,\n  index = 0,\n) {\n  return new SyncPromise((resolve, reject) => {\n    const processor = processors[index];\n    if (event === null || typeof processor !== 'function') {\n      resolve(event);\n    } else {\n      const result = processor({ ...event }, hint) ;\n\n      DEBUG_BUILD && processor.id && result === null && logger.log(`Event processor \"${processor.id}\" dropped event`);\n\n      if (isThenable(result)) {\n        void result\n          .then(final => notifyEventProcessors(processors, final, hint, index + 1).then(resolve))\n          .then(null, reject);\n      } else {\n        void notifyEventProcessors(processors, result, hint, index + 1)\n          .then(resolve)\n          .then(null, reject);\n      }\n    }\n  });\n}\n\nexport { addGlobalEventProcessor, getGlobalEventProcessors, notifyEventProcessors };\n//# sourceMappingURL=eventProcessors.js.map\n",
  "import { timestampInSeconds, uuid4, dropUndefinedKeys } from '@sentry/utils';\n\n/**\n * Creates a new `Session` object by setting certain default parameters. If optional @param context\n * is passed, the passed properties are applied to the session object.\n *\n * @param context (optional) additional properties to be applied to the returned session object\n *\n * @returns a new `Session` object\n */\nfunction makeSession(context) {\n  // Both timestamp and started are in seconds since the UNIX epoch.\n  const startingTime = timestampInSeconds();\n\n  const session = {\n    sid: uuid4(),\n    init: true,\n    timestamp: startingTime,\n    started: startingTime,\n    duration: 0,\n    status: 'ok',\n    errors: 0,\n    ignoreDuration: false,\n    toJSON: () => sessionToJSON(session),\n  };\n\n  if (context) {\n    updateSession(session, context);\n  }\n\n  return session;\n}\n\n/**\n * Updates a session object with the properties passed in the context.\n *\n * Note that this function mutates the passed object and returns void.\n * (Had to do this instead of returning a new and updated session because closing and sending a session\n * makes an update to the session after it was passed to the sending logic.\n * @see BaseClient.captureSession )\n *\n * @param session the `Session` to update\n * @param context the `SessionContext` holding the properties that should be updated in @param session\n */\n// eslint-disable-next-line complexity\nfunction updateSession(session, context = {}) {\n  if (context.user) {\n    if (!session.ipAddress && context.user.ip_address) {\n      session.ipAddress = context.user.ip_address;\n    }\n\n    if (!session.did && !context.did) {\n      session.did = context.user.id || context.user.email || context.user.username;\n    }\n  }\n\n  session.timestamp = context.timestamp || timestampInSeconds();\n\n  if (context.abnormal_mechanism) {\n    session.abnormal_mechanism = context.abnormal_mechanism;\n  }\n\n  if (context.ignoreDuration) {\n    session.ignoreDuration = context.ignoreDuration;\n  }\n  if (context.sid) {\n    // Good enough uuid validation. — Kamil\n    session.sid = context.sid.length === 32 ? context.sid : uuid4();\n  }\n  if (context.init !== undefined) {\n    session.init = context.init;\n  }\n  if (!session.did && context.did) {\n    session.did = `${context.did}`;\n  }\n  if (typeof context.started === 'number') {\n    session.started = context.started;\n  }\n  if (session.ignoreDuration) {\n    session.duration = undefined;\n  } else if (typeof context.duration === 'number') {\n    session.duration = context.duration;\n  } else {\n    const duration = session.timestamp - session.started;\n    session.duration = duration >= 0 ? duration : 0;\n  }\n  if (context.release) {\n    session.release = context.release;\n  }\n  if (context.environment) {\n    session.environment = context.environment;\n  }\n  if (!session.ipAddress && context.ipAddress) {\n    session.ipAddress = context.ipAddress;\n  }\n  if (!session.userAgent && context.userAgent) {\n    session.userAgent = context.userAgent;\n  }\n  if (typeof context.errors === 'number') {\n    session.errors = context.errors;\n  }\n  if (context.status) {\n    session.status = context.status;\n  }\n}\n\n/**\n * Closes a session by setting its status and updating the session object with it.\n * Internally calls `updateSession` to update the passed session object.\n *\n * Note that this function mutates the passed session (@see updateSession for explanation).\n *\n * @param session the `Session` object to be closed\n * @param status the `SessionStatus` with which the session was closed. If you don't pass a status,\n *               this function will keep the previously set status, unless it was `'ok'` in which case\n *               it is changed to `'exited'`.\n */\nfunction closeSession(session, status) {\n  let context = {};\n  if (status) {\n    context = { status };\n  } else if (session.status === 'ok') {\n    context = { status: 'exited' };\n  }\n\n  updateSession(session, context);\n}\n\n/**\n * Serializes a passed session object to a JSON object with a slightly different structure.\n * This is necessary because the Sentry backend requires a slightly different schema of a session\n * than the one the JS SDKs use internally.\n *\n * @param session the session to be converted\n *\n * @returns a JSON object of the passed session\n */\nfunction sessionToJSON(session) {\n  return dropUndefinedKeys({\n    sid: `${session.sid}`,\n    init: session.init,\n    // Make sure that sec is converted to ms for date constructor\n    started: new Date(session.started * 1000).toISOString(),\n    timestamp: new Date(session.timestamp * 1000).toISOString(),\n    status: session.status,\n    errors: session.errors,\n    did: typeof session.did === 'number' || typeof session.did === 'string' ? `${session.did}` : undefined,\n    duration: session.duration,\n    abnormal_mechanism: session.abnormal_mechanism,\n    attrs: {\n      release: session.release,\n      environment: session.environment,\n      ip_address: session.ipAddress,\n      user_agent: session.userAgent,\n    },\n  });\n}\n\nexport { closeSession, makeSession, updateSession };\n//# sourceMappingURL=session.js.map\n",
  "import { isPlainObject, dateTimestampInSeconds, arrayify, uuid4 } from '@sentry/utils';\nimport { notifyEventProcessors, getGlobalEventProcessors } from './eventProcessors.js';\nimport { updateSession } from './session.js';\n\n/**\n * Default value for maximum number of breadcrumbs added to an event.\n */\nconst DEFAULT_MAX_BREADCRUMBS = 100;\n\n/**\n * Holds additional event information. {@link Scope.applyToEvent} will be\n * called by the client before an event will be sent.\n */\nclass Scope  {\n  /** Flag if notifying is happening. */\n\n  /** Callback for client to receive scope changes. */\n\n  /** Callback list that will be called after {@link applyToEvent}. */\n\n  /** Array of breadcrumbs. */\n\n  /** User */\n\n  /** Tags */\n\n  /** Extra */\n\n  /** Contexts */\n\n  /** Attachments */\n\n  /** Propagation Context for distributed tracing */\n\n  /**\n   * A place to stash data which is needed at some point in the SDK's event processing pipeline but which shouldn't get\n   * sent to Sentry\n   */\n\n  /** Fingerprint */\n\n  /** Severity */\n  // eslint-disable-next-line deprecation/deprecation\n\n  /** Transaction Name */\n\n  /** Span */\n\n  /** Session */\n\n  /** Request Mode Session Status */\n\n  // NOTE: Any field which gets added here should get added not only to the constructor but also to the `clone` method.\n\n   constructor() {\n    this._notifyingListeners = false;\n    this._scopeListeners = [];\n    this._eventProcessors = [];\n    this._breadcrumbs = [];\n    this._attachments = [];\n    this._user = {};\n    this._tags = {};\n    this._extra = {};\n    this._contexts = {};\n    this._sdkProcessingMetadata = {};\n    this._propagationContext = generatePropagationContext();\n  }\n\n  /**\n   * Inherit values from the parent scope.\n   * @param scope to clone.\n   */\n   static clone(scope) {\n    const newScope = new Scope();\n    if (scope) {\n      newScope._breadcrumbs = [...scope._breadcrumbs];\n      newScope._tags = { ...scope._tags };\n      newScope._extra = { ...scope._extra };\n      newScope._contexts = { ...scope._contexts };\n      newScope._user = scope._user;\n      newScope._level = scope._level;\n      newScope._span = scope._span;\n      newScope._session = scope._session;\n      newScope._transactionName = scope._transactionName;\n      newScope._fingerprint = scope._fingerprint;\n      newScope._eventProcessors = [...scope._eventProcessors];\n      newScope._requestSession = scope._requestSession;\n      newScope._attachments = [...scope._attachments];\n      newScope._sdkProcessingMetadata = { ...scope._sdkProcessingMetadata };\n      newScope._propagationContext = { ...scope._propagationContext };\n    }\n    return newScope;\n  }\n\n  /**\n   * Add internal on change listener. Used for sub SDKs that need to store the scope.\n   * @hidden\n   */\n   addScopeListener(callback) {\n    this._scopeListeners.push(callback);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addEventProcessor(callback) {\n    this._eventProcessors.push(callback);\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setUser(user) {\n    this._user = user || {};\n    if (this._session) {\n      updateSession(this._session, { user });\n    }\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getUser() {\n    return this._user;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getRequestSession() {\n    return this._requestSession;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setRequestSession(requestSession) {\n    this._requestSession = requestSession;\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTags(tags) {\n    this._tags = {\n      ...this._tags,\n      ...tags,\n    };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTag(key, value) {\n    this._tags = { ...this._tags, [key]: value };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setExtras(extras) {\n    this._extra = {\n      ...this._extra,\n      ...extras,\n    };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setExtra(key, extra) {\n    this._extra = { ...this._extra, [key]: extra };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setFingerprint(fingerprint) {\n    this._fingerprint = fingerprint;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setLevel(\n    // eslint-disable-next-line deprecation/deprecation\n    level,\n  ) {\n    this._level = level;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTransactionName(name) {\n    this._transactionName = name;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setContext(key, context) {\n    if (context === null) {\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete this._contexts[key];\n    } else {\n      this._contexts[key] = context;\n    }\n\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setSpan(span) {\n    this._span = span;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getSpan() {\n    return this._span;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getTransaction() {\n    // Often, this span (if it exists at all) will be a transaction, but it's not guaranteed to be. Regardless, it will\n    // have a pointer to the currently-active transaction.\n    const span = this.getSpan();\n    return span && span.transaction;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setSession(session) {\n    if (!session) {\n      delete this._session;\n    } else {\n      this._session = session;\n    }\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getSession() {\n    return this._session;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   update(captureContext) {\n    if (!captureContext) {\n      return this;\n    }\n\n    if (typeof captureContext === 'function') {\n      const updatedScope = (captureContext )(this);\n      return updatedScope instanceof Scope ? updatedScope : this;\n    }\n\n    if (captureContext instanceof Scope) {\n      this._tags = { ...this._tags, ...captureContext._tags };\n      this._extra = { ...this._extra, ...captureContext._extra };\n      this._contexts = { ...this._contexts, ...captureContext._contexts };\n      if (captureContext._user && Object.keys(captureContext._user).length) {\n        this._user = captureContext._user;\n      }\n      if (captureContext._level) {\n        this._level = captureContext._level;\n      }\n      if (captureContext._fingerprint) {\n        this._fingerprint = captureContext._fingerprint;\n      }\n      if (captureContext._requestSession) {\n        this._requestSession = captureContext._requestSession;\n      }\n      if (captureContext._propagationContext) {\n        this._propagationContext = captureContext._propagationContext;\n      }\n    } else if (isPlainObject(captureContext)) {\n      // eslint-disable-next-line no-param-reassign\n      captureContext = captureContext ;\n      this._tags = { ...this._tags, ...captureContext.tags };\n      this._extra = { ...this._extra, ...captureContext.extra };\n      this._contexts = { ...this._contexts, ...captureContext.contexts };\n      if (captureContext.user) {\n        this._user = captureContext.user;\n      }\n      if (captureContext.level) {\n        this._level = captureContext.level;\n      }\n      if (captureContext.fingerprint) {\n        this._fingerprint = captureContext.fingerprint;\n      }\n      if (captureContext.requestSession) {\n        this._requestSession = captureContext.requestSession;\n      }\n      if (captureContext.propagationContext) {\n        this._propagationContext = captureContext.propagationContext;\n      }\n    }\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   clear() {\n    this._breadcrumbs = [];\n    this._tags = {};\n    this._extra = {};\n    this._user = {};\n    this._contexts = {};\n    this._level = undefined;\n    this._transactionName = undefined;\n    this._fingerprint = undefined;\n    this._requestSession = undefined;\n    this._span = undefined;\n    this._session = undefined;\n    this._notifyScopeListeners();\n    this._attachments = [];\n    this._propagationContext = generatePropagationContext();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addBreadcrumb(breadcrumb, maxBreadcrumbs) {\n    const maxCrumbs = typeof maxBreadcrumbs === 'number' ? maxBreadcrumbs : DEFAULT_MAX_BREADCRUMBS;\n\n    // No data has been changed, so don't notify scope listeners\n    if (maxCrumbs <= 0) {\n      return this;\n    }\n\n    const mergedBreadcrumb = {\n      timestamp: dateTimestampInSeconds(),\n      ...breadcrumb,\n    };\n\n    const breadcrumbs = this._breadcrumbs;\n    breadcrumbs.push(mergedBreadcrumb);\n    this._breadcrumbs = breadcrumbs.length > maxCrumbs ? breadcrumbs.slice(-maxCrumbs) : breadcrumbs;\n\n    this._notifyScopeListeners();\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getLastBreadcrumb() {\n    return this._breadcrumbs[this._breadcrumbs.length - 1];\n  }\n\n  /**\n   * @inheritDoc\n   */\n   clearBreadcrumbs() {\n    this._breadcrumbs = [];\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addAttachment(attachment) {\n    this._attachments.push(attachment);\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getAttachments() {\n    return this._attachments;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   clearAttachments() {\n    this._attachments = [];\n    return this;\n  }\n\n  /**\n   * Applies data from the scope to the event and runs all event processors on it.\n   *\n   * @param event Event\n   * @param hint Object containing additional information about the original exception, for use by the event processors.\n   * @hidden\n   */\n   applyToEvent(\n    event,\n    hint = {},\n    additionalEventProcessors,\n  ) {\n    if (this._extra && Object.keys(this._extra).length) {\n      event.extra = { ...this._extra, ...event.extra };\n    }\n    if (this._tags && Object.keys(this._tags).length) {\n      event.tags = { ...this._tags, ...event.tags };\n    }\n    if (this._user && Object.keys(this._user).length) {\n      event.user = { ...this._user, ...event.user };\n    }\n    if (this._contexts && Object.keys(this._contexts).length) {\n      event.contexts = { ...this._contexts, ...event.contexts };\n    }\n    if (this._level) {\n      event.level = this._level;\n    }\n    if (this._transactionName) {\n      event.transaction = this._transactionName;\n    }\n\n    // We want to set the trace context for normal events only if there isn't already\n    // a trace context on the event. There is a product feature in place where we link\n    // errors with transaction and it relies on that.\n    if (this._span) {\n      event.contexts = { trace: this._span.getTraceContext(), ...event.contexts };\n      const transaction = this._span.transaction;\n      if (transaction) {\n        event.sdkProcessingMetadata = {\n          dynamicSamplingContext: transaction.getDynamicSamplingContext(),\n          ...event.sdkProcessingMetadata,\n        };\n        const transactionName = transaction.name;\n        if (transactionName) {\n          event.tags = { transaction: transactionName, ...event.tags };\n        }\n      }\n    }\n\n    this._applyFingerprint(event);\n\n    const scopeBreadcrumbs = this._getBreadcrumbs();\n    const breadcrumbs = [...(event.breadcrumbs || []), ...scopeBreadcrumbs];\n    event.breadcrumbs = breadcrumbs.length > 0 ? breadcrumbs : undefined;\n\n    event.sdkProcessingMetadata = {\n      ...event.sdkProcessingMetadata,\n      ...this._sdkProcessingMetadata,\n      propagationContext: this._propagationContext,\n    };\n\n    // TODO (v8): Update this order to be: Global > Client > Scope\n    return notifyEventProcessors(\n      [...(additionalEventProcessors || []), ...getGlobalEventProcessors(), ...this._eventProcessors],\n      event,\n      hint,\n    );\n  }\n\n  /**\n   * Add data which will be accessible during event processing but won't get sent to Sentry\n   */\n   setSDKProcessingMetadata(newData) {\n    this._sdkProcessingMetadata = { ...this._sdkProcessingMetadata, ...newData };\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setPropagationContext(context) {\n    this._propagationContext = context;\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getPropagationContext() {\n    return this._propagationContext;\n  }\n\n  /**\n   * Get the breadcrumbs for this scope.\n   */\n   _getBreadcrumbs() {\n    return this._breadcrumbs;\n  }\n\n  /**\n   * This will be called on every set call.\n   */\n   _notifyScopeListeners() {\n    // We need this check for this._notifyingListeners to be able to work on scope during updates\n    // If this check is not here we'll produce endless recursion when something is done with the scope\n    // during the callback.\n    if (!this._notifyingListeners) {\n      this._notifyingListeners = true;\n      this._scopeListeners.forEach(callback => {\n        callback(this);\n      });\n      this._notifyingListeners = false;\n    }\n  }\n\n  /**\n   * Applies fingerprint from the scope to the event if there's one,\n   * uses message if there's one instead or get rid of empty fingerprint\n   */\n   _applyFingerprint(event) {\n    // Make sure it's an array first and we actually have something in place\n    event.fingerprint = event.fingerprint ? arrayify(event.fingerprint) : [];\n\n    // If we have something on the scope, then merge it with event\n    if (this._fingerprint) {\n      event.fingerprint = event.fingerprint.concat(this._fingerprint);\n    }\n\n    // If we have no data at all, remove empty array default\n    if (event.fingerprint && !event.fingerprint.length) {\n      delete event.fingerprint;\n    }\n  }\n}\n\nfunction generatePropagationContext() {\n  return {\n    traceId: uuid4(),\n    spanId: uuid4().substring(16),\n  };\n}\n\nexport { Scope };\n//# sourceMappingURL=scope.js.map\n",
  "import { uuid4, dateTimestampInSeconds, consoleSandbox, logger, GLOBAL_OBJ, getGlobalSingleton } from '@sentry/utils';\nimport { DEFAULT_ENVIRONMENT } from './constants.js';\nimport { DEBUG_BUILD } from './debug-build.js';\nimport { Scope } from './scope.js';\nimport { closeSession, makeSession, updateSession } from './session.js';\n\n/**\n * API compatibility version of this hub.\n *\n * WARNING: This number should only be increased when the global interface\n * changes and new methods are introduced.\n *\n * @hidden\n */\nconst API_VERSION = 4;\n\n/**\n * Default maximum number of breadcrumbs added to an event. Can be overwritten\n * with {@link Options.maxBreadcrumbs}.\n */\nconst DEFAULT_BREADCRUMBS = 100;\n\n/**\n * @inheritDoc\n */\nclass Hub  {\n  /** Is a {@link Layer}[] containing the client and scope */\n\n  /** Contains the last event id of a captured event.  */\n\n  /**\n   * Creates a new instance of the hub, will push one {@link Layer} into the\n   * internal stack on creation.\n   *\n   * @param client bound to the hub.\n   * @param scope bound to the hub.\n   * @param version number, higher number means higher priority.\n   */\n   constructor(client, scope = new Scope(),   _version = API_VERSION) {this._version = _version;\n    this._stack = [{ scope }];\n    if (client) {\n      this.bindClient(client);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   isOlderThan(version) {\n    return this._version < version;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   bindClient(client) {\n    const top = this.getStackTop();\n    top.client = client;\n    if (client && client.setupIntegrations) {\n      client.setupIntegrations();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   pushScope() {\n    // We want to clone the content of prev scope\n    const scope = Scope.clone(this.getScope());\n    this.getStack().push({\n      client: this.getClient(),\n      scope,\n    });\n    return scope;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   popScope() {\n    if (this.getStack().length <= 1) return false;\n    return !!this.getStack().pop();\n  }\n\n  /**\n   * @inheritDoc\n   */\n   withScope(callback) {\n    const scope = this.pushScope();\n    try {\n      callback(scope);\n    } finally {\n      this.popScope();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getClient() {\n    return this.getStackTop().client ;\n  }\n\n  /** Returns the scope of the top stack. */\n   getScope() {\n    return this.getStackTop().scope;\n  }\n\n  /** Returns the scope stack for domains or the process. */\n   getStack() {\n    return this._stack;\n  }\n\n  /** Returns the topmost scope layer in the order domain > local > process. */\n   getStackTop() {\n    return this._stack[this._stack.length - 1];\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureException(exception, hint) {\n    const eventId = (this._lastEventId = hint && hint.event_id ? hint.event_id : uuid4());\n    const syntheticException = new Error('Sentry syntheticException');\n    this._withClient((client, scope) => {\n      client.captureException(\n        exception,\n        {\n          originalException: exception,\n          syntheticException,\n          ...hint,\n          event_id: eventId,\n        },\n        scope,\n      );\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureMessage(\n    message,\n    // eslint-disable-next-line deprecation/deprecation\n    level,\n    hint,\n  ) {\n    const eventId = (this._lastEventId = hint && hint.event_id ? hint.event_id : uuid4());\n    const syntheticException = new Error(message);\n    this._withClient((client, scope) => {\n      client.captureMessage(\n        message,\n        level,\n        {\n          originalException: message,\n          syntheticException,\n          ...hint,\n          event_id: eventId,\n        },\n        scope,\n      );\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureEvent(event, hint) {\n    const eventId = hint && hint.event_id ? hint.event_id : uuid4();\n    if (!event.type) {\n      this._lastEventId = eventId;\n    }\n\n    this._withClient((client, scope) => {\n      client.captureEvent(event, { ...hint, event_id: eventId }, scope);\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   lastEventId() {\n    return this._lastEventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addBreadcrumb(breadcrumb, hint) {\n    const { scope, client } = this.getStackTop();\n\n    if (!client) return;\n\n    const { beforeBreadcrumb = null, maxBreadcrumbs = DEFAULT_BREADCRUMBS } =\n      (client.getOptions && client.getOptions()) || {};\n\n    if (maxBreadcrumbs <= 0) return;\n\n    const timestamp = dateTimestampInSeconds();\n    const mergedBreadcrumb = { timestamp, ...breadcrumb };\n    const finalBreadcrumb = beforeBreadcrumb\n      ? (consoleSandbox(() => beforeBreadcrumb(mergedBreadcrumb, hint)) )\n      : mergedBreadcrumb;\n\n    if (finalBreadcrumb === null) return;\n\n    if (client.emit) {\n      client.emit('beforeAddBreadcrumb', finalBreadcrumb, hint);\n    }\n\n    scope.addBreadcrumb(finalBreadcrumb, maxBreadcrumbs);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setUser(user) {\n    this.getScope().setUser(user);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTags(tags) {\n    this.getScope().setTags(tags);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setExtras(extras) {\n    this.getScope().setExtras(extras);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTag(key, value) {\n    this.getScope().setTag(key, value);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setExtra(key, extra) {\n    this.getScope().setExtra(key, extra);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n   setContext(name, context) {\n    this.getScope().setContext(name, context);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   configureScope(callback) {\n    const { scope, client } = this.getStackTop();\n    if (client) {\n      callback(scope);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   run(callback) {\n    const oldHub = makeMain(this);\n    try {\n      callback(this);\n    } finally {\n      makeMain(oldHub);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getIntegration(integration) {\n    const client = this.getClient();\n    if (!client) return null;\n    try {\n      return client.getIntegration(integration);\n    } catch (_oO) {\n      DEBUG_BUILD && logger.warn(`Cannot retrieve integration ${integration.id} from the current Hub`);\n      return null;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   startTransaction(context, customSamplingContext) {\n    const result = this._callExtensionMethod('startTransaction', context, customSamplingContext);\n\n    if (DEBUG_BUILD && !result) {\n      const client = this.getClient();\n      if (!client) {\n        logger.warn(\n          \"Tracing extension 'startTransaction' is missing. You should 'init' the SDK before calling 'startTransaction'\",\n        );\n      } else {\n        logger.warn(`Tracing extension 'startTransaction' has not been added. Call 'addTracingExtensions' before calling 'init':\nSentry.addTracingExtensions();\nSentry.init({...});\n`);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   traceHeaders() {\n    return this._callExtensionMethod('traceHeaders');\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureSession(endSession = false) {\n    // both send the update and pull the session from the scope\n    if (endSession) {\n      return this.endSession();\n    }\n\n    // only send the update\n    this._sendSessionUpdate();\n  }\n\n  /**\n   * @inheritDoc\n   */\n   endSession() {\n    const layer = this.getStackTop();\n    const scope = layer.scope;\n    const session = scope.getSession();\n    if (session) {\n      closeSession(session);\n    }\n    this._sendSessionUpdate();\n\n    // the session is over; take it off of the scope\n    scope.setSession();\n  }\n\n  /**\n   * @inheritDoc\n   */\n   startSession(context) {\n    const { scope, client } = this.getStackTop();\n    const { release, environment = DEFAULT_ENVIRONMENT } = (client && client.getOptions()) || {};\n\n    // Will fetch userAgent if called from browser sdk\n    const { userAgent } = GLOBAL_OBJ.navigator || {};\n\n    const session = makeSession({\n      release,\n      environment,\n      user: scope.getUser(),\n      ...(userAgent && { userAgent }),\n      ...context,\n    });\n\n    // End existing session if there's one\n    const currentSession = scope.getSession && scope.getSession();\n    if (currentSession && currentSession.status === 'ok') {\n      updateSession(currentSession, { status: 'exited' });\n    }\n    this.endSession();\n\n    // Afterwards we set the new session on the scope\n    scope.setSession(session);\n\n    return session;\n  }\n\n  /**\n   * Returns if default PII should be sent to Sentry and propagated in ourgoing requests\n   * when Tracing is used.\n   */\n   shouldSendDefaultPii() {\n    const client = this.getClient();\n    const options = client && client.getOptions();\n    return Boolean(options && options.sendDefaultPii);\n  }\n\n  /**\n   * Sends the current Session on the scope\n   */\n   _sendSessionUpdate() {\n    const { scope, client } = this.getStackTop();\n\n    const session = scope.getSession();\n    if (session && client && client.captureSession) {\n      client.captureSession(session);\n    }\n  }\n\n  /**\n   * Internal helper function to call a method on the top client if it exists.\n   *\n   * @param method The method to call on the client.\n   * @param args Arguments to pass to the client function.\n   */\n   _withClient(callback) {\n    const { scope, client } = this.getStackTop();\n    if (client) {\n      callback(client, scope);\n    }\n  }\n\n  /**\n   * Calls global extension method and binding current instance to the function call\n   */\n  // @ts-expect-error Function lacks ending return statement and return type does not include 'undefined'. ts(2366)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n   _callExtensionMethod(method, ...args) {\n    const carrier = getMainCarrier();\n    const sentry = carrier.__SENTRY__;\n    if (sentry && sentry.extensions && typeof sentry.extensions[method] === 'function') {\n      return sentry.extensions[method].apply(this, args);\n    }\n    DEBUG_BUILD && logger.warn(`Extension method ${method} couldn't be found, doing nothing.`);\n  }\n}\n\n/**\n * Returns the global shim registry.\n *\n * FIXME: This function is problematic, because despite always returning a valid Carrier,\n * it has an optional `__SENTRY__` property, which then in turn requires us to always perform an unnecessary check\n * at the call-site. We always access the carrier through this function, so we can guarantee that `__SENTRY__` is there.\n **/\nfunction getMainCarrier() {\n  GLOBAL_OBJ.__SENTRY__ = GLOBAL_OBJ.__SENTRY__ || {\n    extensions: {},\n    hub: undefined,\n  };\n  return GLOBAL_OBJ;\n}\n\n/**\n * Replaces the current main hub with the passed one on the global object\n *\n * @returns The old replaced hub\n */\nfunction makeMain(hub) {\n  const registry = getMainCarrier();\n  const oldHub = getHubFromCarrier(registry);\n  setHubOnCarrier(registry, hub);\n  return oldHub;\n}\n\n/**\n * Returns the default hub instance.\n *\n * If a hub is already registered in the global carrier but this module\n * contains a more recent version, it replaces the registered version.\n * Otherwise, the currently registered hub will be returned.\n */\nfunction getCurrentHub() {\n  // Get main carrier (global for every environment)\n  const registry = getMainCarrier();\n\n  if (registry.__SENTRY__ && registry.__SENTRY__.acs) {\n    const hub = registry.__SENTRY__.acs.getCurrentHub();\n\n    if (hub) {\n      return hub;\n    }\n  }\n\n  // Return hub that lives on a global object\n  return getGlobalHub(registry);\n}\n\nfunction getGlobalHub(registry = getMainCarrier()) {\n  // If there's no hub, or its an old API, assign a new one\n  if (!hasHubOnCarrier(registry) || getHubFromCarrier(registry).isOlderThan(API_VERSION)) {\n    setHubOnCarrier(registry, new Hub());\n  }\n\n  // Return hub that lives on a global object\n  return getHubFromCarrier(registry);\n}\n\n/**\n * @private Private API with no semver guarantees!\n *\n * If the carrier does not contain a hub, a new hub is created with the global hub client and scope.\n */\nfunction ensureHubOnCarrier(carrier, parent = getGlobalHub()) {\n  // If there's no hub on current domain, or it's an old API, assign a new one\n  if (!hasHubOnCarrier(carrier) || getHubFromCarrier(carrier).isOlderThan(API_VERSION)) {\n    const globalHubTopStack = parent.getStackTop();\n    setHubOnCarrier(carrier, new Hub(globalHubTopStack.client, Scope.clone(globalHubTopStack.scope)));\n  }\n}\n\n/**\n * @private Private API with no semver guarantees!\n *\n * Sets the global async context strategy\n */\nfunction setAsyncContextStrategy(strategy) {\n  // Get main carrier (global for every environment)\n  const registry = getMainCarrier();\n  registry.__SENTRY__ = registry.__SENTRY__ || {};\n  registry.__SENTRY__.acs = strategy;\n}\n\n/**\n * Runs the supplied callback in its own async context. Async Context strategies are defined per SDK.\n *\n * @param callback The callback to run in its own async context\n * @param options Options to pass to the async context strategy\n * @returns The result of the callback\n */\nfunction runWithAsyncContext(callback, options = {}) {\n  const registry = getMainCarrier();\n\n  if (registry.__SENTRY__ && registry.__SENTRY__.acs) {\n    return registry.__SENTRY__.acs.runWithAsyncContext(callback, options);\n  }\n\n  // if there was no strategy, fallback to just calling the callback\n  return callback();\n}\n\n/**\n * This will tell whether a carrier has a hub on it or not\n * @param carrier object\n */\nfunction hasHubOnCarrier(carrier) {\n  return !!(carrier && carrier.__SENTRY__ && carrier.__SENTRY__.hub);\n}\n\n/**\n * This will create a new {@link Hub} and add to the passed object on\n * __SENTRY__.hub.\n * @param carrier object\n * @hidden\n */\nfunction getHubFromCarrier(carrier) {\n  return getGlobalSingleton('hub', () => new Hub(), carrier);\n}\n\n/**\n * This will set passed {@link Hub} on the passed object's __SENTRY__.hub attribute\n * @param carrier object\n * @param hub Hub\n * @returns A boolean indicating success or failure\n */\nfunction setHubOnCarrier(carrier, hub) {\n  if (!carrier) return false;\n  const __SENTRY__ = (carrier.__SENTRY__ = carrier.__SENTRY__ || {});\n  __SENTRY__.hub = hub;\n  return true;\n}\n\nexport { API_VERSION, Hub, ensureHubOnCarrier, getCurrentHub, getHubFromCarrier, getMainCarrier, makeMain, runWithAsyncContext, setAsyncContextStrategy, setHubOnCarrier };\n//# sourceMappingURL=hub.js.map\n",
  "import { extractTraceparentData as extractTraceparentData$1 } from '@sentry/utils';\nexport { stripUrlQueryAndFragment } from '@sentry/utils';\nimport { getCurrentHub } from '../hub.js';\n\n/** Grabs active transaction off scope, if any */\nfunction getActiveTransaction(maybeHub) {\n  const hub = maybeHub || getCurrentHub();\n  const scope = hub.getScope();\n  return scope.getTransaction() ;\n}\n\n/**\n * The `extractTraceparentData` function and `TRACEPARENT_REGEXP` constant used\n * to be declared in this file. It was later moved into `@sentry/utils` as part of a\n * move to remove `@sentry/tracing` dependencies from `@sentry/node` (`extractTraceparentData`\n * is the only tracing function used by `@sentry/node`).\n *\n * These exports are kept here for backwards compatability's sake.\n *\n * See https://github.com/getsentry/sentry-javascript/issues/4642 for more details.\n *\n * @deprecated Import this function from `@sentry/utils` instead\n */\nconst extractTraceparentData = extractTraceparentData$1;\n\nexport { extractTraceparentData, getActiveTransaction };\n//# sourceMappingURL=utils.js.map\n",
  "import { addGlobalErrorInstrumentationHandler, addGlobalUnhandledRejectionInstrumentationHandler, logger } from '@sentry/utils';\nimport { DEBUG_BUILD } from '../debug-build.js';\nimport { getActiveTransaction } from './utils.js';\n\nlet errorsInstrumented = false;\n\n/**\n * Configures global error listeners\n */\nfunction registerErrorInstrumentation() {\n  if (errorsInstrumented) {\n    return;\n  }\n\n  errorsInstrumented = true;\n  addGlobalErrorInstrumentationHandler(errorCallback);\n  addGlobalUnhandledRejectionInstrumentationHandler(errorCallback);\n}\n\n/**\n * If an error or unhandled promise occurs, we mark the active transaction as failed\n */\nfunction errorCallback() {\n  const activeTransaction = getActiveTransaction();\n  if (activeTransaction) {\n    const status = 'internal_error';\n    DEBUG_BUILD && logger.log(`[Tracing] Transaction: ${status} -> Global error occured`);\n    activeTransaction.setStatus(status);\n  }\n}\n\n// The function name will be lost when bundling but we need to be able to identify this listener later to maintain the\n// node.js default exit behaviour\nerrorCallback.tag = 'sentry_tracingErrorCallback';\n\nexport { registerErrorInstrumentation };\n//# sourceMappingURL=errors.js.map\n",
  "import { uuid4, timestampInSeconds, logger, generateSentryTraceHeader, dropUndefinedKeys } from '@sentry/utils';\nimport { DEBUG_BUILD } from '../debug-build.js';\n\n/**\n * Keeps track of finished spans for a given transaction\n * @internal\n * @hideconstructor\n * @hidden\n */\nclass SpanRecorder {\n\n   constructor(maxlen = 1000) {\n    this._maxlen = maxlen;\n    this.spans = [];\n  }\n\n  /**\n   * This is just so that we don't run out of memory while recording a lot\n   * of spans. At some point we just stop and flush out the start of the\n   * trace tree (i.e.the first n spans with the smallest\n   * start_timestamp).\n   */\n   add(span) {\n    if (this.spans.length > this._maxlen) {\n      span.spanRecorder = undefined;\n    } else {\n      this.spans.push(span);\n    }\n  }\n}\n\n/**\n * Span contains all data about a span\n */\nclass Span  {\n  /**\n   * @inheritDoc\n   */\n\n  /**\n   * @inheritDoc\n   */\n\n  /**\n   * @inheritDoc\n   */\n\n  /**\n   * Internal keeper of the status\n   */\n\n  /**\n   * @inheritDoc\n   */\n\n  /**\n   * Timestamp in seconds when the span was created.\n   */\n\n  /**\n   * Timestamp in seconds when the span ended.\n   */\n\n  /**\n   * @inheritDoc\n   */\n\n  /**\n   * @inheritDoc\n   */\n\n  /**\n   * @inheritDoc\n   */\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  /**\n   * List of spans that were finalized\n   */\n\n  /**\n   * @inheritDoc\n   */\n\n  /**\n   * The instrumenter that created this span.\n   */\n\n  /**\n   * The origin of the span, giving context about what created the span.\n   */\n\n  /**\n   * You should never call the constructor manually, always use `Sentry.startTransaction()`\n   * or call `startChild()` on an existing span.\n   * @internal\n   * @hideconstructor\n   * @hidden\n   */\n   constructor(spanContext = {}) {\n    this.traceId = spanContext.traceId || uuid4();\n    this.spanId = spanContext.spanId || uuid4().substring(16);\n    this.startTimestamp = spanContext.startTimestamp || timestampInSeconds();\n    this.tags = spanContext.tags || {};\n    this.data = spanContext.data || {};\n    this.instrumenter = spanContext.instrumenter || 'sentry';\n    this.origin = spanContext.origin || 'manual';\n\n    if (spanContext.parentSpanId) {\n      this.parentSpanId = spanContext.parentSpanId;\n    }\n    // We want to include booleans as well here\n    if ('sampled' in spanContext) {\n      this.sampled = spanContext.sampled;\n    }\n    if (spanContext.op) {\n      this.op = spanContext.op;\n    }\n    if (spanContext.description) {\n      this.description = spanContext.description;\n    }\n    if (spanContext.name) {\n      this.description = spanContext.name;\n    }\n    if (spanContext.status) {\n      this.status = spanContext.status;\n    }\n    if (spanContext.endTimestamp) {\n      this.endTimestamp = spanContext.endTimestamp;\n    }\n  }\n\n  /** An alias for `description` of the Span. */\n   get name() {\n    return this.description || '';\n  }\n  /** Update the name of the span. */\n   set name(name) {\n    this.setName(name);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   startChild(\n    spanContext,\n  ) {\n    const childSpan = new Span({\n      ...spanContext,\n      parentSpanId: this.spanId,\n      sampled: this.sampled,\n      traceId: this.traceId,\n    });\n\n    childSpan.spanRecorder = this.spanRecorder;\n    if (childSpan.spanRecorder) {\n      childSpan.spanRecorder.add(childSpan);\n    }\n\n    childSpan.transaction = this.transaction;\n\n    if (DEBUG_BUILD && childSpan.transaction) {\n      const opStr = (spanContext && spanContext.op) || '< unknown op >';\n      const nameStr = childSpan.transaction.name || '< unknown name >';\n      const idStr = childSpan.transaction.spanId;\n\n      const logMessage = `[Tracing] Starting '${opStr}' span on transaction '${nameStr}' (${idStr}).`;\n      childSpan.transaction.metadata.spanMetadata[childSpan.spanId] = { logMessage };\n      logger.log(logMessage);\n    }\n\n    return childSpan;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTag(key, value) {\n    this.tags = { ...this.tags, [key]: value };\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n   setData(key, value) {\n    this.data = { ...this.data, [key]: value };\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setStatus(value) {\n    this.status = value;\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setHttpStatus(httpStatus) {\n    this.setTag('http.status_code', String(httpStatus));\n    this.setData('http.response.status_code', httpStatus);\n    const spanStatus = spanStatusfromHttpCode(httpStatus);\n    if (spanStatus !== 'unknown_error') {\n      this.setStatus(spanStatus);\n    }\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setName(name) {\n    this.description = name;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   isSuccess() {\n    return this.status === 'ok';\n  }\n\n  /**\n   * @inheritDoc\n   */\n   finish(endTimestamp) {\n    if (\n      DEBUG_BUILD &&\n      // Don't call this for transactions\n      this.transaction &&\n      this.transaction.spanId !== this.spanId\n    ) {\n      const { logMessage } = this.transaction.metadata.spanMetadata[this.spanId];\n      if (logMessage) {\n        logger.log((logMessage ).replace('Starting', 'Finishing'));\n      }\n    }\n\n    this.endTimestamp = typeof endTimestamp === 'number' ? endTimestamp : timestampInSeconds();\n  }\n\n  /**\n   * @inheritDoc\n   */\n   toTraceparent() {\n    return generateSentryTraceHeader(this.traceId, this.spanId, this.sampled);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   toContext() {\n    return dropUndefinedKeys({\n      data: this.data,\n      description: this.description,\n      endTimestamp: this.endTimestamp,\n      op: this.op,\n      parentSpanId: this.parentSpanId,\n      sampled: this.sampled,\n      spanId: this.spanId,\n      startTimestamp: this.startTimestamp,\n      status: this.status,\n      tags: this.tags,\n      traceId: this.traceId,\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n   updateWithContext(spanContext) {\n    this.data = spanContext.data || {};\n    this.description = spanContext.description;\n    this.endTimestamp = spanContext.endTimestamp;\n    this.op = spanContext.op;\n    this.parentSpanId = spanContext.parentSpanId;\n    this.sampled = spanContext.sampled;\n    this.spanId = spanContext.spanId || this.spanId;\n    this.startTimestamp = spanContext.startTimestamp || this.startTimestamp;\n    this.status = spanContext.status;\n    this.tags = spanContext.tags || {};\n    this.traceId = spanContext.traceId || this.traceId;\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getTraceContext() {\n    return dropUndefinedKeys({\n      data: Object.keys(this.data).length > 0 ? this.data : undefined,\n      description: this.description,\n      op: this.op,\n      parent_span_id: this.parentSpanId,\n      span_id: this.spanId,\n      status: this.status,\n      tags: Object.keys(this.tags).length > 0 ? this.tags : undefined,\n      trace_id: this.traceId,\n      origin: this.origin,\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n   toJSON()\n\n {\n    return dropUndefinedKeys({\n      data: Object.keys(this.data).length > 0 ? this.data : undefined,\n      description: this.description,\n      op: this.op,\n      parent_span_id: this.parentSpanId,\n      span_id: this.spanId,\n      start_timestamp: this.startTimestamp,\n      status: this.status,\n      tags: Object.keys(this.tags).length > 0 ? this.tags : undefined,\n      timestamp: this.endTimestamp,\n      trace_id: this.traceId,\n      origin: this.origin,\n    });\n  }\n}\n\n/**\n * Converts a HTTP status code into a {@link SpanStatusType}.\n *\n * @param httpStatus The HTTP response status code.\n * @returns The span status or unknown_error.\n */\nfunction spanStatusfromHttpCode(httpStatus) {\n  if (httpStatus < 400 && httpStatus >= 100) {\n    return 'ok';\n  }\n\n  if (httpStatus >= 400 && httpStatus < 500) {\n    switch (httpStatus) {\n      case 401:\n        return 'unauthenticated';\n      case 403:\n        return 'permission_denied';\n      case 404:\n        return 'not_found';\n      case 409:\n        return 'already_exists';\n      case 413:\n        return 'failed_precondition';\n      case 429:\n        return 'resource_exhausted';\n      default:\n        return 'invalid_argument';\n    }\n  }\n\n  if (httpStatus >= 500 && httpStatus < 600) {\n    switch (httpStatus) {\n      case 501:\n        return 'unimplemented';\n      case 503:\n        return 'unavailable';\n      case 504:\n        return 'deadline_exceeded';\n      default:\n        return 'internal_error';\n    }\n  }\n\n  return 'unknown_error';\n}\n\nexport { Span, SpanRecorder, spanStatusfromHttpCode };\n//# sourceMappingURL=span.js.map\n",
  "import { dropUndefinedKeys } from '@sentry/utils';\nimport { DEFAULT_ENVIRONMENT } from '../constants.js';\n\n/**\n * Creates a dynamic sampling context from a client.\n *\n * Dispatchs the `createDsc` lifecycle hook as a side effect.\n */\nfunction getDynamicSamplingContextFromClient(\n  trace_id,\n  client,\n  scope,\n) {\n  const options = client.getOptions();\n\n  const { publicKey: public_key } = client.getDsn() || {};\n  const { segment: user_segment } = (scope && scope.getUser()) || {};\n\n  const dsc = dropUndefinedKeys({\n    environment: options.environment || DEFAULT_ENVIRONMENT,\n    release: options.release,\n    user_segment,\n    public_key,\n    trace_id,\n  }) ;\n\n  client.emit && client.emit('createDsc', dsc);\n\n  return dsc;\n}\n\nexport { getDynamicSamplingContextFromClient };\n//# sourceMappingURL=dynamicSamplingContext.js.map\n",
  "import { dropUndefinedKeys, logger } from '@sentry/utils';\nimport { DEBUG_BUILD } from '../debug-build.js';\nimport { getCurrentHub } from '../hub.js';\nimport { getDynamicSamplingContextFromClient } from './dynamicSamplingContext.js';\nimport { Span, SpanRecorder } from './span.js';\n\n/** JSDoc */\nclass Transaction extends Span  {\n\n  /**\n   * The reference to the current hub.\n   */\n\n  /**\n   * This constructor should never be called manually. Those instrumenting tracing should use\n   * `Sentry.startTransaction()`, and internal methods should use `hub.startTransaction()`.\n   * @internal\n   * @hideconstructor\n   * @hidden\n   */\n   constructor(transactionContext, hub) {\n    super(transactionContext);\n    // We need to delete description since it's set by the Span class constructor\n    // but not needed for transactions.\n    delete this.description;\n\n    this._measurements = {};\n    this._contexts = {};\n\n    this._hub = hub || getCurrentHub();\n\n    this._name = transactionContext.name || '';\n\n    this.metadata = {\n      source: 'custom',\n      ...transactionContext.metadata,\n      spanMetadata: {},\n    };\n\n    this._trimEnd = transactionContext.trimEnd;\n\n    // this is because transactions are also spans, and spans have a transaction pointer\n    this.transaction = this;\n\n    // If Dynamic Sampling Context is provided during the creation of the transaction, we freeze it as it usually means\n    // there is incoming Dynamic Sampling Context. (Either through an incoming request, a baggage meta-tag, or other means)\n    const incomingDynamicSamplingContext = this.metadata.dynamicSamplingContext;\n    if (incomingDynamicSamplingContext) {\n      // We shallow copy this in case anything writes to the original reference of the passed in `dynamicSamplingContext`\n      this._frozenDynamicSamplingContext = { ...incomingDynamicSamplingContext };\n    }\n  }\n\n  /** Getter for `name` property */\n   get name() {\n    return this._name;\n  }\n\n  /** Setter for `name` property, which also sets `source` as custom */\n   set name(newName) {\n    this.setName(newName);\n  }\n\n  /**\n   * JSDoc\n   */\n   setName(name, source = 'custom') {\n    this._name = name;\n    this.metadata.source = source;\n  }\n\n  /**\n   * Attaches SpanRecorder to the span itself\n   * @param maxlen maximum number of spans that can be recorded\n   */\n   initSpanRecorder(maxlen = 1000) {\n    if (!this.spanRecorder) {\n      this.spanRecorder = new SpanRecorder(maxlen);\n    }\n    this.spanRecorder.add(this);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setContext(key, context) {\n    if (context === null) {\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete this._contexts[key];\n    } else {\n      this._contexts[key] = context;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setMeasurement(name, value, unit = '') {\n    this._measurements[name] = { value, unit };\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setMetadata(newMetadata) {\n    this.metadata = { ...this.metadata, ...newMetadata };\n  }\n\n  /**\n   * @inheritDoc\n   */\n   finish(endTimestamp) {\n    const transaction = this._finishTransaction(endTimestamp);\n    if (!transaction) {\n      return undefined;\n    }\n    return this._hub.captureEvent(transaction);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   toContext() {\n    const spanContext = super.toContext();\n\n    return dropUndefinedKeys({\n      ...spanContext,\n      name: this.name,\n      trimEnd: this._trimEnd,\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n   updateWithContext(transactionContext) {\n    super.updateWithContext(transactionContext);\n\n    this.name = transactionContext.name || '';\n\n    this._trimEnd = transactionContext.trimEnd;\n\n    return this;\n  }\n\n  /**\n   * @inheritdoc\n   *\n   * @experimental\n   */\n   getDynamicSamplingContext() {\n    if (this._frozenDynamicSamplingContext) {\n      return this._frozenDynamicSamplingContext;\n    }\n\n    const hub = this._hub || getCurrentHub();\n    const client = hub.getClient();\n\n    if (!client) return {};\n\n    const scope = hub.getScope();\n    const dsc = getDynamicSamplingContextFromClient(this.traceId, client, scope);\n\n    const maybeSampleRate = this.metadata.sampleRate;\n    if (maybeSampleRate !== undefined) {\n      dsc.sample_rate = `${maybeSampleRate}`;\n    }\n\n    // We don't want to have a transaction name in the DSC if the source is \"url\" because URLs might contain PII\n    const source = this.metadata.source;\n    if (source && source !== 'url') {\n      dsc.transaction = this.name;\n    }\n\n    if (this.sampled !== undefined) {\n      dsc.sampled = String(this.sampled);\n    }\n\n    // Uncomment if we want to make DSC immutable\n    // this._frozenDynamicSamplingContext = dsc;\n\n    return dsc;\n  }\n\n  /**\n   * Override the current hub with a new one.\n   * Used if you want another hub to finish the transaction.\n   *\n   * @internal\n   */\n   setHub(hub) {\n    this._hub = hub;\n  }\n\n  /**\n   * Finish the transaction & prepare the event to send to Sentry.\n   */\n   _finishTransaction(endTimestamp) {\n    // This transaction is already finished, so we should not flush it again.\n    if (this.endTimestamp !== undefined) {\n      return undefined;\n    }\n\n    if (!this.name) {\n      DEBUG_BUILD && logger.warn('Transaction has no name, falling back to `<unlabeled transaction>`.');\n      this.name = '<unlabeled transaction>';\n    }\n\n    // just sets the end timestamp\n    super.finish(endTimestamp);\n\n    const client = this._hub.getClient();\n    if (client && client.emit) {\n      client.emit('finishTransaction', this);\n    }\n\n    if (this.sampled !== true) {\n      // At this point if `sampled !== true` we want to discard the transaction.\n      DEBUG_BUILD && logger.log('[Tracing] Discarding transaction because its trace was not chosen to be sampled.');\n\n      if (client) {\n        client.recordDroppedEvent('sample_rate', 'transaction');\n      }\n\n      return undefined;\n    }\n\n    const finishedSpans = this.spanRecorder ? this.spanRecorder.spans.filter(s => s !== this && s.endTimestamp) : [];\n\n    if (this._trimEnd && finishedSpans.length > 0) {\n      this.endTimestamp = finishedSpans.reduce((prev, current) => {\n        if (prev.endTimestamp && current.endTimestamp) {\n          return prev.endTimestamp > current.endTimestamp ? prev : current;\n        }\n        return prev;\n      }).endTimestamp;\n    }\n\n    const metadata = this.metadata;\n\n    const transaction = {\n      contexts: {\n        ...this._contexts,\n        // We don't want to override trace context\n        trace: this.getTraceContext(),\n      },\n      spans: finishedSpans,\n      start_timestamp: this.startTimestamp,\n      tags: this.tags,\n      timestamp: this.endTimestamp,\n      transaction: this.name,\n      type: 'transaction',\n      sdkProcessingMetadata: {\n        ...metadata,\n        dynamicSamplingContext: this.getDynamicSamplingContext(),\n      },\n      ...(metadata.source && {\n        transaction_info: {\n          source: metadata.source,\n        },\n      }),\n    };\n\n    const hasMeasurements = Object.keys(this._measurements).length > 0;\n\n    if (hasMeasurements) {\n      DEBUG_BUILD &&\n        logger.log(\n          '[Measurements] Adding measurements to transaction',\n          JSON.stringify(this._measurements, undefined, 2),\n        );\n      transaction.measurements = this._measurements;\n    }\n\n    DEBUG_BUILD && logger.log(`[Tracing] Finishing ${this.op} transaction: ${this.name}.`);\n\n    return transaction;\n  }\n}\n\nexport { Transaction };\n//# sourceMappingURL=transaction.js.map\n",
  "import { uuid4, dateTimestampInSeconds, addExceptionMechanism, resolvedSyncPromise, truncate, GLOBAL_OBJ, normalize } from '@sentry/utils';\nimport { DEFAULT_ENVIRONMENT } from '../constants.js';\nimport { notifyEventProcessors, getGlobalEventProcessors } from '../eventProcessors.js';\nimport { Scope } from '../scope.js';\n\n/**\n * This type makes sure that we get either a CaptureContext, OR an EventHint.\n * It does not allow mixing them, which could lead to unexpected outcomes, e.g. this is disallowed:\n * { user: { id: '123' }, mechanism: { handled: false } }\n */\n\n/**\n * Adds common information to events.\n *\n * The information includes release and environment from `options`,\n * breadcrumbs and context (extra, tags and user) from the scope.\n *\n * Information that is already present in the event is never overwritten. For\n * nested objects, such as the context, keys are merged.\n *\n * Note: This also triggers callbacks for `addGlobalEventProcessor`, but not `beforeSend`.\n *\n * @param event The original event.\n * @param hint May contain additional information about the original exception.\n * @param scope A scope containing event metadata.\n * @returns A new event with more information.\n * @hidden\n */\nfunction prepareEvent(\n  options,\n  event,\n  hint,\n  scope,\n  client,\n) {\n  const { normalizeDepth = 3, normalizeMaxBreadth = 1000 } = options;\n  const prepared = {\n    ...event,\n    event_id: event.event_id || hint.event_id || uuid4(),\n    timestamp: event.timestamp || dateTimestampInSeconds(),\n  };\n  const integrations = hint.integrations || options.integrations.map(i => i.name);\n\n  applyClientOptions(prepared, options);\n  applyIntegrationsMetadata(prepared, integrations);\n\n  // Only put debug IDs onto frames for error events.\n  if (event.type === undefined) {\n    applyDebugIds(prepared, options.stackParser);\n  }\n\n  // If we have scope given to us, use it as the base for further modifications.\n  // This allows us to prevent unnecessary copying of data if `captureContext` is not provided.\n  let finalScope = scope;\n  if (hint.captureContext) {\n    finalScope = Scope.clone(finalScope).update(hint.captureContext);\n  }\n\n  if (hint.mechanism) {\n    addExceptionMechanism(prepared, hint.mechanism);\n  }\n\n  // We prepare the result here with a resolved Event.\n  let result = resolvedSyncPromise(prepared);\n\n  const clientEventProcessors = client && client.getEventProcessors ? client.getEventProcessors() : [];\n\n  // This should be the last thing called, since we want that\n  // {@link Hub.addEventProcessor} gets the finished prepared event.\n  //\n  // We need to check for the existence of `finalScope.getAttachments`\n  // because `getAttachments` can be undefined if users are using an older version\n  // of `@sentry/core` that does not have the `getAttachments` method.\n  // See: https://github.com/getsentry/sentry-javascript/issues/5229\n  if (finalScope) {\n    // Collect attachments from the hint and scope\n    if (finalScope.getAttachments) {\n      const attachments = [...(hint.attachments || []), ...finalScope.getAttachments()];\n\n      if (attachments.length) {\n        hint.attachments = attachments;\n      }\n    }\n\n    // In case we have a hub we reassign it.\n    result = finalScope.applyToEvent(prepared, hint, clientEventProcessors);\n  } else {\n    // Apply client & global event processors even if there is no scope\n    // TODO (v8): Update the order to be Global > Client\n    result = notifyEventProcessors([...clientEventProcessors, ...getGlobalEventProcessors()], prepared, hint);\n  }\n\n  return result.then(evt => {\n    if (evt) {\n      // We apply the debug_meta field only after all event processors have ran, so that if any event processors modified\n      // file names (e.g.the RewriteFrames integration) the filename -> debug ID relationship isn't destroyed.\n      // This should not cause any PII issues, since we're only moving data that is already on the event and not adding\n      // any new data\n      applyDebugMeta(evt);\n    }\n\n    if (typeof normalizeDepth === 'number' && normalizeDepth > 0) {\n      return normalizeEvent(evt, normalizeDepth, normalizeMaxBreadth);\n    }\n    return evt;\n  });\n}\n\n/**\n *  Enhances event using the client configuration.\n *  It takes care of all \"static\" values like environment, release and `dist`,\n *  as well as truncating overly long values.\n * @param event event instance to be enhanced\n */\nfunction applyClientOptions(event, options) {\n  const { environment, release, dist, maxValueLength = 250 } = options;\n\n  if (!('environment' in event)) {\n    event.environment = 'environment' in options ? environment : DEFAULT_ENVIRONMENT;\n  }\n\n  if (event.release === undefined && release !== undefined) {\n    event.release = release;\n  }\n\n  if (event.dist === undefined && dist !== undefined) {\n    event.dist = dist;\n  }\n\n  if (event.message) {\n    event.message = truncate(event.message, maxValueLength);\n  }\n\n  const exception = event.exception && event.exception.values && event.exception.values[0];\n  if (exception && exception.value) {\n    exception.value = truncate(exception.value, maxValueLength);\n  }\n\n  const request = event.request;\n  if (request && request.url) {\n    request.url = truncate(request.url, maxValueLength);\n  }\n}\n\nconst debugIdStackParserCache = new WeakMap();\n\n/**\n * Puts debug IDs into the stack frames of an error event.\n */\nfunction applyDebugIds(event, stackParser) {\n  const debugIdMap = GLOBAL_OBJ._sentryDebugIds;\n\n  if (!debugIdMap) {\n    return;\n  }\n\n  let debugIdStackFramesCache;\n  const cachedDebugIdStackFrameCache = debugIdStackParserCache.get(stackParser);\n  if (cachedDebugIdStackFrameCache) {\n    debugIdStackFramesCache = cachedDebugIdStackFrameCache;\n  } else {\n    debugIdStackFramesCache = new Map();\n    debugIdStackParserCache.set(stackParser, debugIdStackFramesCache);\n  }\n\n  // Build a map of filename -> debug_id\n  const filenameDebugIdMap = Object.keys(debugIdMap).reduce((acc, debugIdStackTrace) => {\n    let parsedStack;\n    const cachedParsedStack = debugIdStackFramesCache.get(debugIdStackTrace);\n    if (cachedParsedStack) {\n      parsedStack = cachedParsedStack;\n    } else {\n      parsedStack = stackParser(debugIdStackTrace);\n      debugIdStackFramesCache.set(debugIdStackTrace, parsedStack);\n    }\n\n    for (let i = parsedStack.length - 1; i >= 0; i--) {\n      const stackFrame = parsedStack[i];\n      if (stackFrame.filename) {\n        acc[stackFrame.filename] = debugIdMap[debugIdStackTrace];\n        break;\n      }\n    }\n    return acc;\n  }, {});\n\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    event.exception.values.forEach(exception => {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      exception.stacktrace.frames.forEach(frame => {\n        if (frame.filename) {\n          frame.debug_id = filenameDebugIdMap[frame.filename];\n        }\n      });\n    });\n  } catch (e) {\n    // To save bundle size we're just try catching here instead of checking for the existence of all the different objects.\n  }\n}\n\n/**\n * Moves debug IDs from the stack frames of an error event into the debug_meta field.\n */\nfunction applyDebugMeta(event) {\n  // Extract debug IDs and filenames from the stack frames on the event.\n  const filenameDebugIdMap = {};\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    event.exception.values.forEach(exception => {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      exception.stacktrace.frames.forEach(frame => {\n        if (frame.debug_id) {\n          if (frame.abs_path) {\n            filenameDebugIdMap[frame.abs_path] = frame.debug_id;\n          } else if (frame.filename) {\n            filenameDebugIdMap[frame.filename] = frame.debug_id;\n          }\n          delete frame.debug_id;\n        }\n      });\n    });\n  } catch (e) {\n    // To save bundle size we're just try catching here instead of checking for the existence of all the different objects.\n  }\n\n  if (Object.keys(filenameDebugIdMap).length === 0) {\n    return;\n  }\n\n  // Fill debug_meta information\n  event.debug_meta = event.debug_meta || {};\n  event.debug_meta.images = event.debug_meta.images || [];\n  const images = event.debug_meta.images;\n  Object.keys(filenameDebugIdMap).forEach(filename => {\n    images.push({\n      type: 'sourcemap',\n      code_file: filename,\n      debug_id: filenameDebugIdMap[filename],\n    });\n  });\n}\n\n/**\n * This function adds all used integrations to the SDK info in the event.\n * @param event The event that will be filled with all integrations.\n */\nfunction applyIntegrationsMetadata(event, integrationNames) {\n  if (integrationNames.length > 0) {\n    event.sdk = event.sdk || {};\n    event.sdk.integrations = [...(event.sdk.integrations || []), ...integrationNames];\n  }\n}\n\n/**\n * Applies `normalize` function on necessary `Event` attributes to make them safe for serialization.\n * Normalized keys:\n * - `breadcrumbs.data`\n * - `user`\n * - `contexts`\n * - `extra`\n * @param event Event\n * @returns Normalized event\n */\nfunction normalizeEvent(event, depth, maxBreadth) {\n  if (!event) {\n    return null;\n  }\n\n  const normalized = {\n    ...event,\n    ...(event.breadcrumbs && {\n      breadcrumbs: event.breadcrumbs.map(b => ({\n        ...b,\n        ...(b.data && {\n          data: normalize(b.data, depth, maxBreadth),\n        }),\n      })),\n    }),\n    ...(event.user && {\n      user: normalize(event.user, depth, maxBreadth),\n    }),\n    ...(event.contexts && {\n      contexts: normalize(event.contexts, depth, maxBreadth),\n    }),\n    ...(event.extra && {\n      extra: normalize(event.extra, depth, maxBreadth),\n    }),\n  };\n\n  // event.contexts.trace stores information about a Transaction. Similarly,\n  // event.spans[] stores information about child Spans. Given that a\n  // Transaction is conceptually a Span, normalization should apply to both\n  // Transactions and Spans consistently.\n  // For now the decision is to skip normalization of Transactions and Spans,\n  // so this block overwrites the normalized event to add back the original\n  // Transaction information prior to normalization.\n  if (event.contexts && event.contexts.trace && normalized.contexts) {\n    normalized.contexts.trace = event.contexts.trace;\n\n    // event.contexts.trace.data may contain circular/dangerous data so we need to normalize it\n    if (event.contexts.trace.data) {\n      normalized.contexts.trace.data = normalize(event.contexts.trace.data, depth, maxBreadth);\n    }\n  }\n\n  // event.spans[].data may contain circular/dangerous data so we need to normalize it\n  if (event.spans) {\n    normalized.spans = event.spans.map(span => {\n      // We cannot use the spread operator here because `toJSON` on `span` is non-enumerable\n      if (span.data) {\n        span.data = normalize(span.data, depth, maxBreadth);\n      }\n      return span;\n    });\n  }\n\n  return normalized;\n}\n\n/**\n * Parse either an `EventHint` directly, or convert a `CaptureContext` to an `EventHint`.\n * This is used to allow to update method signatures that used to accept a `CaptureContext` but should now accept an `EventHint`.\n */\nfunction parseEventHintOrCaptureContext(\n  hint,\n) {\n  if (!hint) {\n    return undefined;\n  }\n\n  // If you pass a Scope or `() => Scope` as CaptureContext, we just return this as captureContext\n  if (hintIsScopeOrFunction(hint)) {\n    return { captureContext: hint };\n  }\n\n  if (hintIsScopeContext(hint)) {\n    return {\n      captureContext: hint,\n    };\n  }\n\n  return hint;\n}\n\nfunction hintIsScopeOrFunction(\n  hint,\n) {\n  return hint instanceof Scope || typeof hint === 'function';\n}\n\nconst captureContextKeys = [\n  'user',\n  'level',\n  'extra',\n  'contexts',\n  'tags',\n  'fingerprint',\n  'requestSession',\n  'propagationContext',\n] ;\n\nfunction hintIsScopeContext(hint) {\n  return Object.keys(hint).some(key => captureContextKeys.includes(key ));\n}\n\nexport { applyDebugIds, applyDebugMeta, parseEventHintOrCaptureContext, prepareEvent };\n//# sourceMappingURL=prepareEvent.js.map\n",
  "import { logger, uuid4, timestampInSeconds, isThenable } from '@sentry/utils';\nimport { DEBUG_BUILD } from './debug-build.js';\nimport { getCurrentHub } from './hub.js';\nimport { parseEventHintOrCaptureContext } from './utils/prepareEvent.js';\n\n// Note: All functions in this file are typed with a return value of `ReturnType<Hub[HUB_FUNCTION]>`,\n// where HUB_FUNCTION is some method on the Hub class.\n//\n// This is done to make sure the top level SDK methods stay in sync with the hub methods.\n// Although every method here has an explicit return type, some of them (that map to void returns) do not\n// contain `return` keywords. This is done to save on bundle size, as `return` is not minifiable.\n\n/**\n * Captures an exception event and sends it to Sentry.\n * This accepts an event hint as optional second parameter.\n * Alternatively, you can also pass a CaptureContext directly as second parameter.\n */\nfunction captureException(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  exception,\n  hint,\n) {\n  return getCurrentHub().captureException(exception, parseEventHintOrCaptureContext(hint));\n}\n\n/**\n * Captures a message event and sends it to Sentry.\n *\n * @param message The message to send to Sentry.\n * @param Severity Define the level of the message.\n * @returns The generated eventId.\n */\nfunction captureMessage(\n  message,\n  // eslint-disable-next-line deprecation/deprecation\n  captureContext,\n) {\n  // This is necessary to provide explicit scopes upgrade, without changing the original\n  // arity of the `captureMessage(message, level)` method.\n  const level = typeof captureContext === 'string' ? captureContext : undefined;\n  const context = typeof captureContext !== 'string' ? { captureContext } : undefined;\n  return getCurrentHub().captureMessage(message, level, context);\n}\n\n/**\n * Captures a manually created event and sends it to Sentry.\n *\n * @param event The event to send to Sentry.\n * @returns The generated eventId.\n */\nfunction captureEvent(event, hint) {\n  return getCurrentHub().captureEvent(event, hint);\n}\n\n/**\n * Callback to set context information onto the scope.\n * @param callback Callback function that receives Scope.\n */\nfunction configureScope(callback) {\n  getCurrentHub().configureScope(callback);\n}\n\n/**\n * Records a new breadcrumb which will be attached to future events.\n *\n * Breadcrumbs will be added to subsequent events to provide more context on\n * user's actions prior to an error or crash.\n *\n * @param breadcrumb The breadcrumb to record.\n */\nfunction addBreadcrumb(breadcrumb) {\n  getCurrentHub().addBreadcrumb(breadcrumb);\n}\n\n/**\n * Sets context data with the given name.\n * @param name of the context\n * @param context Any kind of data. This data will be normalized.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction setContext(name, context) {\n  getCurrentHub().setContext(name, context);\n}\n\n/**\n * Set an object that will be merged sent as extra data with the event.\n * @param extras Extras object to merge into current context.\n */\nfunction setExtras(extras) {\n  getCurrentHub().setExtras(extras);\n}\n\n/**\n * Set key:value that will be sent as extra data with the event.\n * @param key String of extra\n * @param extra Any kind of data. This data will be normalized.\n */\nfunction setExtra(key, extra) {\n  getCurrentHub().setExtra(key, extra);\n}\n\n/**\n * Set an object that will be merged sent as tags data with the event.\n * @param tags Tags context object to merge into current context.\n */\nfunction setTags(tags) {\n  getCurrentHub().setTags(tags);\n}\n\n/**\n * Set key:value that will be sent as tags data with the event.\n *\n * Can also be used to unset a tag, by passing `undefined`.\n *\n * @param key String key of tag\n * @param value Value of tag\n */\nfunction setTag(key, value) {\n  getCurrentHub().setTag(key, value);\n}\n\n/**\n * Updates user context information for future events.\n *\n * @param user User context object to be set in the current context. Pass `null` to unset the user.\n */\nfunction setUser(user) {\n  getCurrentHub().setUser(user);\n}\n\n/**\n * Creates a new scope with and executes the given operation within.\n * The scope is automatically removed once the operation\n * finishes or throws.\n *\n * This is essentially a convenience function for:\n *\n *     pushScope();\n *     callback();\n *     popScope();\n *\n * @param callback that will be enclosed into push/popScope.\n */\nfunction withScope(callback) {\n  getCurrentHub().withScope(callback);\n}\n\n/**\n * Starts a new `Transaction` and returns it. This is the entry point to manual tracing instrumentation.\n *\n * A tree structure can be built by adding child spans to the transaction, and child spans to other spans. To start a\n * new child span within the transaction or any span, call the respective `.startChild()` method.\n *\n * Every child span must be finished before the transaction is finished, otherwise the unfinished spans are discarded.\n *\n * The transaction must be finished with a call to its `.finish()` method, at which point the transaction with all its\n * finished child spans will be sent to Sentry.\n *\n * NOTE: This function should only be used for *manual* instrumentation. Auto-instrumentation should call\n * `startTransaction` directly on the hub.\n *\n * @param context Properties of the new `Transaction`.\n * @param customSamplingContext Information given to the transaction sampling function (along with context-dependent\n * default values). See {@link Options.tracesSampler}.\n *\n * @returns The transaction which was just started\n */\nfunction startTransaction(\n  context,\n  customSamplingContext,\n) {\n  return getCurrentHub().startTransaction({ ...context }, customSamplingContext);\n}\n\n/**\n * Create a cron monitor check in and send it to Sentry.\n *\n * @param checkIn An object that describes a check in.\n * @param upsertMonitorConfig An optional object that describes a monitor config. Use this if you want\n * to create a monitor automatically when sending a check in.\n */\nfunction captureCheckIn(checkIn, upsertMonitorConfig) {\n  const hub = getCurrentHub();\n  const scope = hub.getScope();\n  const client = hub.getClient();\n  if (!client) {\n    DEBUG_BUILD && logger.warn('Cannot capture check-in. No client defined.');\n  } else if (!client.captureCheckIn) {\n    DEBUG_BUILD && logger.warn('Cannot capture check-in. Client does not support sending check-ins.');\n  } else {\n    return client.captureCheckIn(checkIn, upsertMonitorConfig, scope);\n  }\n\n  return uuid4();\n}\n\n/**\n * Wraps a callback with a cron monitor check in. The check in will be sent to Sentry when the callback finishes.\n *\n * @param monitorSlug The distinct slug of the monitor.\n * @param upsertMonitorConfig An optional object that describes a monitor config. Use this if you want\n * to create a monitor automatically when sending a check in.\n */\nfunction withMonitor(\n  monitorSlug,\n  callback,\n  upsertMonitorConfig,\n) {\n  const checkInId = captureCheckIn({ monitorSlug, status: 'in_progress' }, upsertMonitorConfig);\n  const now = timestampInSeconds();\n\n  function finishCheckIn(status) {\n    captureCheckIn({ monitorSlug, status, checkInId, duration: timestampInSeconds() - now });\n  }\n\n  let maybePromiseResult;\n  try {\n    maybePromiseResult = callback();\n  } catch (e) {\n    finishCheckIn('error');\n    throw e;\n  }\n\n  if (isThenable(maybePromiseResult)) {\n    Promise.resolve(maybePromiseResult).then(\n      () => {\n        finishCheckIn('ok');\n      },\n      () => {\n        finishCheckIn('error');\n      },\n    );\n  } else {\n    finishCheckIn('ok');\n  }\n\n  return maybePromiseResult;\n}\n\n/**\n * Call `flush()` on the current client, if there is one. See {@link Client.flush}.\n *\n * @param timeout Maximum time in ms the client should wait to flush its event queue. Omitting this parameter will cause\n * the client to wait until all events are sent before resolving the promise.\n * @returns A promise which resolves to `true` if the queue successfully drains before the timeout, or `false` if it\n * doesn't (or if there's no client defined).\n */\nasync function flush(timeout) {\n  const client = getClient();\n  if (client) {\n    return client.flush(timeout);\n  }\n  DEBUG_BUILD && logger.warn('Cannot flush events. No client defined.');\n  return Promise.resolve(false);\n}\n\n/**\n * Call `close()` on the current client, if there is one. See {@link Client.close}.\n *\n * @param timeout Maximum time in ms the client should wait to flush its event queue before shutting down. Omitting this\n * parameter will cause the client to wait until all events are sent before disabling itself.\n * @returns A promise which resolves to `true` if the queue successfully drains before the timeout, or `false` if it\n * doesn't (or if there's no client defined).\n */\nasync function close(timeout) {\n  const client = getClient();\n  if (client) {\n    return client.close(timeout);\n  }\n  DEBUG_BUILD && logger.warn('Cannot flush events and disable SDK. No client defined.');\n  return Promise.resolve(false);\n}\n\n/**\n * This is the getter for lastEventId.\n *\n * @returns The last event id of a captured event.\n */\nfunction lastEventId() {\n  return getCurrentHub().lastEventId();\n}\n\n/**\n * Get the currently active client.\n */\nfunction getClient() {\n  return getCurrentHub().getClient();\n}\n\nexport { addBreadcrumb, captureCheckIn, captureEvent, captureException, captureMessage, close, configureScope, flush, getClient, lastEventId, setContext, setExtra, setExtras, setTag, setTags, setUser, startTransaction, withMonitor, withScope };\n//# sourceMappingURL=exports.js.map\n",
  "import { logger, uuid4, timestampInSeconds, isThenable } from '@sentry/utils';\nimport { DEBUG_BUILD } from './debug-build.js';\nimport { getCurrentHub } from './hub.js';\nimport { parseEventHintOrCaptureContext } from './utils/prepareEvent.js';\n\n// Note: All functions in this file are typed with a return value of `ReturnType<Hub[HUB_FUNCTION]>`,\n// where HUB_FUNCTION is some method on the Hub class.\n//\n// This is done to make sure the top level SDK methods stay in sync with the hub methods.\n// Although every method here has an explicit return type, some of them (that map to void returns) do not\n// contain `return` keywords. This is done to save on bundle size, as `return` is not minifiable.\n\n/**\n * Captures an exception event and sends it to Sentry.\n * This accepts an event hint as optional second parameter.\n * Alternatively, you can also pass a CaptureContext directly as second parameter.\n */\nfunction captureException(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  exception,\n  hint,\n) {\n  return getCurrentHub().captureException(exception, parseEventHintOrCaptureContext(hint));\n}\n\n/**\n * Captures a message event and sends it to Sentry.\n *\n * @param message The message to send to Sentry.\n * @param Severity Define the level of the message.\n * @returns The generated eventId.\n */\nfunction captureMessage(\n  message,\n  // eslint-disable-next-line deprecation/deprecation\n  captureContext,\n) {\n  // This is necessary to provide explicit scopes upgrade, without changing the original\n  // arity of the `captureMessage(message, level)` method.\n  const level = typeof captureContext === 'string' ? captureContext : undefined;\n  const context = typeof captureContext !== 'string' ? { captureContext } : undefined;\n  return getCurrentHub().captureMessage(message, level, context);\n}\n\n/**\n * Captures a manually created event and sends it to Sentry.\n *\n * @param event The event to send to Sentry.\n * @returns The generated eventId.\n */\nfunction captureEvent(event, hint) {\n  return getCurrentHub().captureEvent(event, hint);\n}\n\n/**\n * Callback to set context information onto the scope.\n * @param callback Callback function that receives Scope.\n */\nfunction configureScope(callback) {\n  getCurrentHub().configureScope(callback);\n}\n\n/**\n * Records a new breadcrumb which will be attached to future events.\n *\n * Breadcrumbs will be added to subsequent events to provide more context on\n * user's actions prior to an error or crash.\n *\n * @param breadcrumb The breadcrumb to record.\n */\nfunction addBreadcrumb(breadcrumb) {\n  getCurrentHub().addBreadcrumb(breadcrumb);\n}\n\n/**\n * Sets context data with the given name.\n * @param name of the context\n * @param context Any kind of data. This data will be normalized.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction setContext(name, context) {\n  getCurrentHub().setContext(name, context);\n}\n\n/**\n * Set an object that will be merged sent as extra data with the event.\n * @param extras Extras object to merge into current context.\n */\nfunction setExtras(extras) {\n  getCurrentHub().setExtras(extras);\n}\n\n/**\n * Set key:value that will be sent as extra data with the event.\n * @param key String of extra\n * @param extra Any kind of data. This data will be normalized.\n */\nfunction setExtra(key, extra) {\n  getCurrentHub().setExtra(key, extra);\n}\n\n/**\n * Set an object that will be merged sent as tags data with the event.\n * @param tags Tags context object to merge into current context.\n */\nfunction setTags(tags) {\n  getCurrentHub().setTags(tags);\n}\n\n/**\n * Set key:value that will be sent as tags data with the event.\n *\n * Can also be used to unset a tag, by passing `undefined`.\n *\n * @param key String key of tag\n * @param value Value of tag\n */\nfunction setTag(key, value) {\n  getCurrentHub().setTag(key, value);\n}\n\n/**\n * Updates user context information for future events.\n *\n * @param user User context object to be set in the current context. Pass `null` to unset the user.\n */\nfunction setUser(user) {\n  getCurrentHub().setUser(user);\n}\n\n/**\n * Creates a new scope with and executes the given operation within.\n * The scope is automatically removed once the operation\n * finishes or throws.\n *\n * This is essentially a convenience function for:\n *\n *     pushScope();\n *     callback();\n *     popScope();\n *\n * @param callback that will be enclosed into push/popScope.\n */\nfunction withScope(callback) {\n  getCurrentHub().withScope(callback);\n}\n\n/**\n * Starts a new `Transaction` and returns it. This is the entry point to manual tracing instrumentation.\n *\n * A tree structure can be built by adding child spans to the transaction, and child spans to other spans. To start a\n * new child span within the transaction or any span, call the respective `.startChild()` method.\n *\n * Every child span must be finished before the transaction is finished, otherwise the unfinished spans are discarded.\n *\n * The transaction must be finished with a call to its `.finish()` method, at which point the transaction with all its\n * finished child spans will be sent to Sentry.\n *\n * NOTE: This function should only be used for *manual* instrumentation. Auto-instrumentation should call\n * `startTransaction` directly on the hub.\n *\n * @param context Properties of the new `Transaction`.\n * @param customSamplingContext Information given to the transaction sampling function (along with context-dependent\n * default values). See {@link Options.tracesSampler}.\n *\n * @returns The transaction which was just started\n */\nfunction startTransaction(\n  context,\n  customSamplingContext,\n) {\n  return getCurrentHub().startTransaction({ ...context }, customSamplingContext);\n}\n\n/**\n * Create a cron monitor check in and send it to Sentry.\n *\n * @param checkIn An object that describes a check in.\n * @param upsertMonitorConfig An optional object that describes a monitor config. Use this if you want\n * to create a monitor automatically when sending a check in.\n */\nfunction captureCheckIn(checkIn, upsertMonitorConfig) {\n  const hub = getCurrentHub();\n  const scope = hub.getScope();\n  const client = hub.getClient();\n  if (!client) {\n    DEBUG_BUILD && logger.warn('Cannot capture check-in. No client defined.');\n  } else if (!client.captureCheckIn) {\n    DEBUG_BUILD && logger.warn('Cannot capture check-in. Client does not support sending check-ins.');\n  } else {\n    return client.captureCheckIn(checkIn, upsertMonitorConfig, scope);\n  }\n\n  return uuid4();\n}\n\n/**\n * Wraps a callback with a cron monitor check in. The check in will be sent to Sentry when the callback finishes.\n *\n * @param monitorSlug The distinct slug of the monitor.\n * @param upsertMonitorConfig An optional object that describes a monitor config. Use this if you want\n * to create a monitor automatically when sending a check in.\n */\nfunction withMonitor(\n  monitorSlug,\n  callback,\n  upsertMonitorConfig,\n) {\n  const checkInId = captureCheckIn({ monitorSlug, status: 'in_progress' }, upsertMonitorConfig);\n  const now = timestampInSeconds();\n\n  function finishCheckIn(status) {\n    captureCheckIn({ monitorSlug, status, checkInId, duration: timestampInSeconds() - now });\n  }\n\n  let maybePromiseResult;\n  try {\n    maybePromiseResult = callback();\n  } catch (e) {\n    finishCheckIn('error');\n    throw e;\n  }\n\n  if (isThenable(maybePromiseResult)) {\n    Promise.resolve(maybePromiseResult).then(\n      () => {\n        finishCheckIn('ok');\n      },\n      () => {\n        finishCheckIn('error');\n      },\n    );\n  } else {\n    finishCheckIn('ok');\n  }\n\n  return maybePromiseResult;\n}\n\n/**\n * Call `flush()` on the current client, if there is one. See {@link Client.flush}.\n *\n * @param timeout Maximum time in ms the client should wait to flush its event queue. Omitting this parameter will cause\n * the client to wait until all events are sent before resolving the promise.\n * @returns A promise which resolves to `true` if the queue successfully drains before the timeout, or `false` if it\n * doesn't (or if there's no client defined).\n */\nasync function flush(timeout) {\n  const client = getClient();\n  if (client) {\n    return client.flush(timeout);\n  }\n  DEBUG_BUILD && logger.warn('Cannot flush events. No client defined.');\n  return Promise.resolve(false);\n}\n\n/**\n * Call `close()` on the current client, if there is one. See {@link Client.close}.\n *\n * @param timeout Maximum time in ms the client should wait to flush its event queue before shutting down. Omitting this\n * parameter will cause the client to wait until all events are sent before disabling itself.\n * @returns A promise which resolves to `true` if the queue successfully drains before the timeout, or `false` if it\n * doesn't (or if there's no client defined).\n */\nasync function close(timeout) {\n  const client = getClient();\n  if (client) {\n    return client.close(timeout);\n  }\n  DEBUG_BUILD && logger.warn('Cannot flush events and disable SDK. No client defined.');\n  return Promise.resolve(false);\n}\n\n/**\n * This is the getter for lastEventId.\n *\n * @returns The last event id of a captured event.\n */\nfunction lastEventId() {\n  return getCurrentHub().lastEventId();\n}\n\n/**\n * Get the currently active client.\n */\nfunction getClient() {\n  return getCurrentHub().getClient();\n}\n\nexport { addBreadcrumb, captureCheckIn, captureEvent, captureException, captureMessage, close, configureScope, flush, getClient, lastEventId, setContext, setExtra, setExtras, setTag, setTags, setUser, startTransaction, withMonitor, withScope };\n//# sourceMappingURL=exports.js.map\n",
  "import { getClient } from '../exports.js';\n\n// Treeshakable guard to remove all code related to tracing\n\n/**\n * Determines if tracing is currently enabled.\n *\n * Tracing is enabled when at least one of `tracesSampleRate` and `tracesSampler` is defined in the SDK config.\n */\nfunction hasTracingEnabled(\n  maybeOptions,\n) {\n  if (typeof __SENTRY_TRACING__ === 'boolean' && !__SENTRY_TRACING__) {\n    return false;\n  }\n\n  const client = getClient();\n  const options = maybeOptions || (client && client.getOptions());\n  return !!options && (options.enableTracing || 'tracesSampleRate' in options || 'tracesSampler' in options);\n}\n\nexport { hasTracingEnabled };\n//# sourceMappingURL=hasTracingEnabled.js.map\n",
  "import { logger, isNaN } from '@sentry/utils';\nimport { DEBUG_BUILD } from '../debug-build.js';\nimport { hasTracingEnabled } from '../utils/hasTracingEnabled.js';\n\n/**\n * Makes a sampling decision for the given transaction and stores it on the transaction.\n *\n * Called every time a transaction is created. Only transactions which emerge with a `sampled` value of `true` will be\n * sent to Sentry.\n *\n * This method muttes the given `transaction` and will set the `sampled` value on it.\n * It returns the same transaction, for convenience.\n */\nfunction sampleTransaction(\n  transaction,\n  options,\n  samplingContext,\n) {\n  // nothing to do if tracing is not enabled\n  if (!hasTracingEnabled(options)) {\n    transaction.sampled = false;\n    return transaction;\n  }\n\n  // if the user has forced a sampling decision by passing a `sampled` value in their transaction context, go with that\n  if (transaction.sampled !== undefined) {\n    transaction.setMetadata({\n      sampleRate: Number(transaction.sampled),\n    });\n    return transaction;\n  }\n\n  // we would have bailed already if neither `tracesSampler` nor `tracesSampleRate` nor `enableTracing` were defined, so one of these should\n  // work; prefer the hook if so\n  let sampleRate;\n  if (typeof options.tracesSampler === 'function') {\n    sampleRate = options.tracesSampler(samplingContext);\n    transaction.setMetadata({\n      sampleRate: Number(sampleRate),\n    });\n  } else if (samplingContext.parentSampled !== undefined) {\n    sampleRate = samplingContext.parentSampled;\n  } else if (typeof options.tracesSampleRate !== 'undefined') {\n    sampleRate = options.tracesSampleRate;\n    transaction.setMetadata({\n      sampleRate: Number(sampleRate),\n    });\n  } else {\n    // When `enableTracing === true`, we use a sample rate of 100%\n    sampleRate = 1;\n    transaction.setMetadata({\n      sampleRate,\n    });\n  }\n\n  // Since this is coming from the user (or from a function provided by the user), who knows what we might get. (The\n  // only valid values are booleans or numbers between 0 and 1.)\n  if (!isValidSampleRate(sampleRate)) {\n    DEBUG_BUILD && logger.warn('[Tracing] Discarding transaction because of invalid sample rate.');\n    transaction.sampled = false;\n    return transaction;\n  }\n\n  // if the function returned 0 (or false), or if `tracesSampleRate` is 0, it's a sign the transaction should be dropped\n  if (!sampleRate) {\n    DEBUG_BUILD &&\n      logger.log(\n        `[Tracing] Discarding transaction because ${\n          typeof options.tracesSampler === 'function'\n            ? 'tracesSampler returned 0 or false'\n            : 'a negative sampling decision was inherited or tracesSampleRate is set to 0'\n        }`,\n      );\n    transaction.sampled = false;\n    return transaction;\n  }\n\n  // Now we roll the dice. Math.random is inclusive of 0, but not of 1, so strict < is safe here. In case sampleRate is\n  // a boolean, the < comparison will cause it to be automatically cast to 1 if it's true and 0 if it's false.\n  transaction.sampled = Math.random() < (sampleRate );\n\n  // if we're not going to keep it, we're done\n  if (!transaction.sampled) {\n    DEBUG_BUILD &&\n      logger.log(\n        `[Tracing] Discarding transaction because it's not included in the random sample (sampling rate = ${Number(\n          sampleRate,\n        )})`,\n      );\n    return transaction;\n  }\n\n  DEBUG_BUILD && logger.log(`[Tracing] starting ${transaction.op} transaction - ${transaction.name}`);\n  return transaction;\n}\n\n/**\n * Checks the given sample rate to make sure it is valid type and value (a boolean, or a number between 0 and 1).\n */\nfunction isValidSampleRate(rate) {\n  // we need to check NaN explicitly because it's of type 'number' and therefore wouldn't get caught by this typecheck\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  if (isNaN(rate) || !(typeof rate === 'number' || typeof rate === 'boolean')) {\n    DEBUG_BUILD &&\n      logger.warn(\n        `[Tracing] Given sample rate is invalid. Sample rate must be a boolean or a number between 0 and 1. Got ${JSON.stringify(\n          rate,\n        )} of type ${JSON.stringify(typeof rate)}.`,\n      );\n    return false;\n  }\n\n  // in case sampleRate is a boolean, it will get automatically cast to 1 if it's true and 0 if it's false\n  if (rate < 0 || rate > 1) {\n    DEBUG_BUILD &&\n      logger.warn(`[Tracing] Given sample rate is invalid. Sample rate must be between 0 and 1. Got ${rate}.`);\n    return false;\n  }\n  return true;\n}\n\nexport { sampleTransaction };\n//# sourceMappingURL=sampling.js.map\n",
  "import { logger } from '@sentry/utils';\nimport { DEBUG_BUILD } from '../debug-build.js';\nimport { getMainCarrier } from '../hub.js';\nimport { registerErrorInstrumentation } from './errors.js';\nimport { IdleTransaction } from './idletransaction.js';\nimport { sampleTransaction } from './sampling.js';\nimport { Transaction } from './transaction.js';\n\n/** Returns all trace headers that are currently on the top scope. */\nfunction traceHeaders() {\n  const scope = this.getScope();\n  const span = scope.getSpan();\n\n  return span\n    ? {\n        'sentry-trace': span.toTraceparent(),\n      }\n    : {};\n}\n\n/**\n * Creates a new transaction and adds a sampling decision if it doesn't yet have one.\n *\n * The Hub.startTransaction method delegates to this method to do its work, passing the Hub instance in as `this`, as if\n * it had been called on the hub directly. Exists as a separate function so that it can be injected into the class as an\n * \"extension method.\"\n *\n * @param this: The Hub starting the transaction\n * @param transactionContext: Data used to configure the transaction\n * @param CustomSamplingContext: Optional data to be provided to the `tracesSampler` function (if any)\n *\n * @returns The new transaction\n *\n * @see {@link Hub.startTransaction}\n */\nfunction _startTransaction(\n\n  transactionContext,\n  customSamplingContext,\n) {\n  const client = this.getClient();\n  const options = (client && client.getOptions()) || {};\n\n  const configInstrumenter = options.instrumenter || 'sentry';\n  const transactionInstrumenter = transactionContext.instrumenter || 'sentry';\n\n  if (configInstrumenter !== transactionInstrumenter) {\n    DEBUG_BUILD &&\n      logger.error(\n        `A transaction was started with instrumenter=\\`${transactionInstrumenter}\\`, but the SDK is configured with the \\`${configInstrumenter}\\` instrumenter.\nThe transaction will not be sampled. Please use the ${configInstrumenter} instrumentation to start transactions.`,\n      );\n\n    transactionContext.sampled = false;\n  }\n\n  let transaction = new Transaction(transactionContext, this);\n  transaction = sampleTransaction(transaction, options, {\n    parentSampled: transactionContext.parentSampled,\n    transactionContext,\n    ...customSamplingContext,\n  });\n  if (transaction.sampled) {\n    transaction.initSpanRecorder(options._experiments && (options._experiments.maxSpans ));\n  }\n  if (client && client.emit) {\n    client.emit('startTransaction', transaction);\n  }\n  return transaction;\n}\n\n/**\n * Create new idle transaction.\n */\nfunction startIdleTransaction(\n  hub,\n  transactionContext,\n  idleTimeout,\n  finalTimeout,\n  onScope,\n  customSamplingContext,\n  heartbeatInterval,\n) {\n  const client = hub.getClient();\n  const options = (client && client.getOptions()) || {};\n\n  let transaction = new IdleTransaction(transactionContext, hub, idleTimeout, finalTimeout, heartbeatInterval, onScope);\n  transaction = sampleTransaction(transaction, options, {\n    parentSampled: transactionContext.parentSampled,\n    transactionContext,\n    ...customSamplingContext,\n  });\n  if (transaction.sampled) {\n    transaction.initSpanRecorder(options._experiments && (options._experiments.maxSpans ));\n  }\n  if (client && client.emit) {\n    client.emit('startTransaction', transaction);\n  }\n  return transaction;\n}\n\n/**\n * Adds tracing extensions to the global hub.\n */\nfunction addTracingExtensions() {\n  const carrier = getMainCarrier();\n  if (!carrier.__SENTRY__) {\n    return;\n  }\n  carrier.__SENTRY__.extensions = carrier.__SENTRY__.extensions || {};\n  if (!carrier.__SENTRY__.extensions.startTransaction) {\n    carrier.__SENTRY__.extensions.startTransaction = _startTransaction;\n  }\n  if (!carrier.__SENTRY__.extensions.traceHeaders) {\n    carrier.__SENTRY__.extensions.traceHeaders = traceHeaders;\n  }\n\n  registerErrorInstrumentation();\n}\n\nexport { addTracingExtensions, startIdleTransaction };\n//# sourceMappingURL=hubextensions.js.map\n",
  "import { logger } from '@sentry/utils';\nimport { DEBUG_BUILD } from '../debug-build.js';\nimport { getMainCarrier } from '../hub.js';\nimport { registerErrorInstrumentation } from './errors.js';\nimport { IdleTransaction } from './idletransaction.js';\nimport { sampleTransaction } from './sampling.js';\nimport { Transaction } from './transaction.js';\n\n/** Returns all trace headers that are currently on the top scope. */\nfunction traceHeaders() {\n  const scope = this.getScope();\n  const span = scope.getSpan();\n\n  return span\n    ? {\n        'sentry-trace': span.toTraceparent(),\n      }\n    : {};\n}\n\n/**\n * Creates a new transaction and adds a sampling decision if it doesn't yet have one.\n *\n * The Hub.startTransaction method delegates to this method to do its work, passing the Hub instance in as `this`, as if\n * it had been called on the hub directly. Exists as a separate function so that it can be injected into the class as an\n * \"extension method.\"\n *\n * @param this: The Hub starting the transaction\n * @param transactionContext: Data used to configure the transaction\n * @param CustomSamplingContext: Optional data to be provided to the `tracesSampler` function (if any)\n *\n * @returns The new transaction\n *\n * @see {@link Hub.startTransaction}\n */\nfunction _startTransaction(\n\n  transactionContext,\n  customSamplingContext,\n) {\n  const client = this.getClient();\n  const options = (client && client.getOptions()) || {};\n\n  const configInstrumenter = options.instrumenter || 'sentry';\n  const transactionInstrumenter = transactionContext.instrumenter || 'sentry';\n\n  if (configInstrumenter !== transactionInstrumenter) {\n    DEBUG_BUILD &&\n      logger.error(\n        `A transaction was started with instrumenter=\\`${transactionInstrumenter}\\`, but the SDK is configured with the \\`${configInstrumenter}\\` instrumenter.\nThe transaction will not be sampled. Please use the ${configInstrumenter} instrumentation to start transactions.`,\n      );\n\n    transactionContext.sampled = false;\n  }\n\n  let transaction = new Transaction(transactionContext, this);\n  transaction = sampleTransaction(transaction, options, {\n    parentSampled: transactionContext.parentSampled,\n    transactionContext,\n    ...customSamplingContext,\n  });\n  if (transaction.sampled) {\n    transaction.initSpanRecorder(options._experiments && (options._experiments.maxSpans ));\n  }\n  if (client && client.emit) {\n    client.emit('startTransaction', transaction);\n  }\n  return transaction;\n}\n\n/**\n * Create new idle transaction.\n */\nfunction startIdleTransaction(\n  hub,\n  transactionContext,\n  idleTimeout,\n  finalTimeout,\n  onScope,\n  customSamplingContext,\n  heartbeatInterval,\n) {\n  const client = hub.getClient();\n  const options = (client && client.getOptions()) || {};\n\n  let transaction = new IdleTransaction(transactionContext, hub, idleTimeout, finalTimeout, heartbeatInterval, onScope);\n  transaction = sampleTransaction(transaction, options, {\n    parentSampled: transactionContext.parentSampled,\n    transactionContext,\n    ...customSamplingContext,\n  });\n  if (transaction.sampled) {\n    transaction.initSpanRecorder(options._experiments && (options._experiments.maxSpans ));\n  }\n  if (client && client.emit) {\n    client.emit('startTransaction', transaction);\n  }\n  return transaction;\n}\n\n/**\n * Adds tracing extensions to the global hub.\n */\nfunction addTracingExtensions() {\n  const carrier = getMainCarrier();\n  if (!carrier.__SENTRY__) {\n    return;\n  }\n  carrier.__SENTRY__.extensions = carrier.__SENTRY__.extensions || {};\n  if (!carrier.__SENTRY__.extensions.startTransaction) {\n    carrier.__SENTRY__.extensions.startTransaction = _startTransaction;\n  }\n  if (!carrier.__SENTRY__.extensions.traceHeaders) {\n    carrier.__SENTRY__.extensions.traceHeaders = traceHeaders;\n  }\n\n  registerErrorInstrumentation();\n}\n\nexport { addTracingExtensions, startIdleTransaction };\n//# sourceMappingURL=hubextensions.js.map\n",
  "import { isThenable, tracingContextFromHeaders, logger, dropUndefinedKeys } from '@sentry/utils';\nimport { DEBUG_BUILD } from '../debug-build.js';\nimport { getCurrentHub } from '../hub.js';\nimport { hasTracingEnabled } from '../utils/hasTracingEnabled.js';\n\n/**\n * Wraps a function with a transaction/span and finishes the span after the function is done.\n *\n * Note that if you have not enabled tracing extensions via `addTracingExtensions`\n * or you didn't set `tracesSampleRate`, this function will not generate spans\n * and the `span` returned from the callback will be undefined.\n *\n * This function is meant to be used internally and may break at any time. Use at your own risk.\n *\n * @internal\n * @private\n */\nfunction trace(\n  context,\n  callback,\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onError = () => {},\n) {\n  const ctx = normalizeContext(context);\n\n  const hub = getCurrentHub();\n  const scope = hub.getScope();\n  const parentSpan = scope.getSpan();\n\n  const activeSpan = createChildSpanOrTransaction(hub, parentSpan, ctx);\n\n  scope.setSpan(activeSpan);\n\n  function finishAndSetSpan() {\n    activeSpan && activeSpan.finish();\n    hub.getScope().setSpan(parentSpan);\n  }\n\n  let maybePromiseResult;\n  try {\n    maybePromiseResult = callback(activeSpan);\n  } catch (e) {\n    activeSpan && activeSpan.setStatus('internal_error');\n    onError(e);\n    finishAndSetSpan();\n    throw e;\n  }\n\n  if (isThenable(maybePromiseResult)) {\n    Promise.resolve(maybePromiseResult).then(\n      () => {\n        finishAndSetSpan();\n      },\n      e => {\n        activeSpan && activeSpan.setStatus('internal_error');\n        onError(e);\n        finishAndSetSpan();\n      },\n    );\n  } else {\n    finishAndSetSpan();\n  }\n\n  return maybePromiseResult;\n}\n\n/**\n * Wraps a function with a transaction/span and finishes the span after the function is done.\n * The created span is the active span and will be used as parent by other spans created inside the function\n * and can be accessed via `Sentry.getSpan()`, as long as the function is executed while the scope is active.\n *\n * If you want to create a span that is not set as active, use {@link startInactiveSpan}.\n *\n * Note that if you have not enabled tracing extensions via `addTracingExtensions`\n * or you didn't set `tracesSampleRate`, this function will not generate spans\n * and the `span` returned from the callback will be undefined.\n */\nfunction startSpan(context, callback) {\n  const ctx = normalizeContext(context);\n\n  const hub = getCurrentHub();\n  const scope = hub.getScope();\n  const parentSpan = scope.getSpan();\n\n  const activeSpan = createChildSpanOrTransaction(hub, parentSpan, ctx);\n  scope.setSpan(activeSpan);\n\n  function finishAndSetSpan() {\n    activeSpan && activeSpan.finish();\n    hub.getScope().setSpan(parentSpan);\n  }\n\n  let maybePromiseResult;\n  try {\n    maybePromiseResult = callback(activeSpan);\n  } catch (e) {\n    activeSpan && activeSpan.setStatus('internal_error');\n    finishAndSetSpan();\n    throw e;\n  }\n\n  if (isThenable(maybePromiseResult)) {\n    Promise.resolve(maybePromiseResult).then(\n      () => {\n        finishAndSetSpan();\n      },\n      () => {\n        activeSpan && activeSpan.setStatus('internal_error');\n        finishAndSetSpan();\n      },\n    );\n  } else {\n    finishAndSetSpan();\n  }\n\n  return maybePromiseResult;\n}\n\n/**\n * @deprecated Use {@link startSpan} instead.\n */\nconst startActiveSpan = startSpan;\n\n/**\n * Similar to `Sentry.startSpan`. Wraps a function with a transaction/span, but does not finish the span\n * after the function is done automatically.\n *\n * The created span is the active span and will be used as parent by other spans created inside the function\n * and can be accessed via `Sentry.getActiveSpan()`, as long as the function is executed while the scope is active.\n *\n * Note that if you have not enabled tracing extensions via `addTracingExtensions`\n * or you didn't set `tracesSampleRate`, this function will not generate spans\n * and the `span` returned from the callback will be undefined.\n */\nfunction startSpanManual(\n  context,\n  callback,\n) {\n  const ctx = normalizeContext(context);\n\n  const hub = getCurrentHub();\n  const scope = hub.getScope();\n  const parentSpan = scope.getSpan();\n\n  const activeSpan = createChildSpanOrTransaction(hub, parentSpan, ctx);\n  scope.setSpan(activeSpan);\n\n  function finishAndSetSpan() {\n    activeSpan && activeSpan.finish();\n    hub.getScope().setSpan(parentSpan);\n  }\n\n  let maybePromiseResult;\n  try {\n    maybePromiseResult = callback(activeSpan, finishAndSetSpan);\n  } catch (e) {\n    activeSpan && activeSpan.setStatus('internal_error');\n    throw e;\n  }\n\n  if (isThenable(maybePromiseResult)) {\n    Promise.resolve(maybePromiseResult).then(undefined, () => {\n      activeSpan && activeSpan.setStatus('internal_error');\n    });\n  }\n\n  return maybePromiseResult;\n}\n\n/**\n * Creates a span. This span is not set as active, so will not get automatic instrumentation spans\n * as children or be able to be accessed via `Sentry.getSpan()`.\n *\n * If you want to create a span that is set as active, use {@link startSpan}.\n *\n * Note that if you have not enabled tracing extensions via `addTracingExtensions`\n * or you didn't set `tracesSampleRate` or `tracesSampler`, this function will not generate spans\n * and the `span` returned from the callback will be undefined.\n */\nfunction startInactiveSpan(context) {\n  if (!hasTracingEnabled()) {\n    return undefined;\n  }\n\n  const ctx = { ...context };\n  // If a name is set and a description is not, set the description to the name.\n  if (ctx.name !== undefined && ctx.description === undefined) {\n    ctx.description = ctx.name;\n  }\n\n  const hub = getCurrentHub();\n  const parentSpan = getActiveSpan();\n  return parentSpan ? parentSpan.startChild(ctx) : hub.startTransaction(ctx);\n}\n\n/**\n * Returns the currently active span.\n */\nfunction getActiveSpan() {\n  return getCurrentHub().getScope().getSpan();\n}\n\n/**\n * Continue a trace from `sentry-trace` and `baggage` values.\n * These values can be obtained from incoming request headers,\n * or in the browser from `<meta name=\"sentry-trace\">` and `<meta name=\"baggage\">` HTML tags.\n *\n * It also takes an optional `request` option, which if provided will also be added to the scope & transaction metadata.\n * The callback receives a transactionContext that may be used for `startTransaction` or `startSpan`.\n */\nfunction continueTrace(\n  {\n    sentryTrace,\n    baggage,\n  }\n\n,\n  callback,\n) {\n  const hub = getCurrentHub();\n  const currentScope = hub.getScope();\n\n  const { traceparentData, dynamicSamplingContext, propagationContext } = tracingContextFromHeaders(\n    sentryTrace,\n    baggage,\n  );\n\n  currentScope.setPropagationContext(propagationContext);\n\n  if (DEBUG_BUILD && traceparentData) {\n    logger.log(`[Tracing] Continuing trace ${traceparentData.traceId}.`);\n  }\n\n  const transactionContext = {\n    ...traceparentData,\n    metadata: dropUndefinedKeys({\n      dynamicSamplingContext: traceparentData && !dynamicSamplingContext ? {} : dynamicSamplingContext,\n    }),\n  };\n\n  if (!callback) {\n    return transactionContext;\n  }\n\n  return callback(transactionContext);\n}\n\nfunction createChildSpanOrTransaction(\n  hub,\n  parentSpan,\n  ctx,\n) {\n  if (!hasTracingEnabled()) {\n    return undefined;\n  }\n  return parentSpan ? parentSpan.startChild(ctx) : hub.startTransaction(ctx);\n}\n\nfunction normalizeContext(context) {\n  const ctx = { ...context };\n  // If a name is set and a description is not, set the description to the name.\n  if (ctx.name !== undefined && ctx.description === undefined) {\n    ctx.description = ctx.name;\n  }\n\n  return ctx;\n}\n\nexport { continueTrace, getActiveSpan, startActiveSpan, startInactiveSpan, startSpan, startSpanManual, trace };\n//# sourceMappingURL=trace.js.map\n",
  "import { isThenable, tracingContextFromHeaders, logger, dropUndefinedKeys } from '@sentry/utils';\nimport { DEBUG_BUILD } from '../debug-build.js';\nimport { getCurrentHub } from '../hub.js';\nimport { hasTracingEnabled } from '../utils/hasTracingEnabled.js';\n\n/**\n * Wraps a function with a transaction/span and finishes the span after the function is done.\n *\n * Note that if you have not enabled tracing extensions via `addTracingExtensions`\n * or you didn't set `tracesSampleRate`, this function will not generate spans\n * and the `span` returned from the callback will be undefined.\n *\n * This function is meant to be used internally and may break at any time. Use at your own risk.\n *\n * @internal\n * @private\n */\nfunction trace(\n  context,\n  callback,\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onError = () => {},\n) {\n  const ctx = normalizeContext(context);\n\n  const hub = getCurrentHub();\n  const scope = hub.getScope();\n  const parentSpan = scope.getSpan();\n\n  const activeSpan = createChildSpanOrTransaction(hub, parentSpan, ctx);\n\n  scope.setSpan(activeSpan);\n\n  function finishAndSetSpan() {\n    activeSpan && activeSpan.finish();\n    hub.getScope().setSpan(parentSpan);\n  }\n\n  let maybePromiseResult;\n  try {\n    maybePromiseResult = callback(activeSpan);\n  } catch (e) {\n    activeSpan && activeSpan.setStatus('internal_error');\n    onError(e);\n    finishAndSetSpan();\n    throw e;\n  }\n\n  if (isThenable(maybePromiseResult)) {\n    Promise.resolve(maybePromiseResult).then(\n      () => {\n        finishAndSetSpan();\n      },\n      e => {\n        activeSpan && activeSpan.setStatus('internal_error');\n        onError(e);\n        finishAndSetSpan();\n      },\n    );\n  } else {\n    finishAndSetSpan();\n  }\n\n  return maybePromiseResult;\n}\n\n/**\n * Wraps a function with a transaction/span and finishes the span after the function is done.\n * The created span is the active span and will be used as parent by other spans created inside the function\n * and can be accessed via `Sentry.getSpan()`, as long as the function is executed while the scope is active.\n *\n * If you want to create a span that is not set as active, use {@link startInactiveSpan}.\n *\n * Note that if you have not enabled tracing extensions via `addTracingExtensions`\n * or you didn't set `tracesSampleRate`, this function will not generate spans\n * and the `span` returned from the callback will be undefined.\n */\nfunction startSpan(context, callback) {\n  const ctx = normalizeContext(context);\n\n  const hub = getCurrentHub();\n  const scope = hub.getScope();\n  const parentSpan = scope.getSpan();\n\n  const activeSpan = createChildSpanOrTransaction(hub, parentSpan, ctx);\n  scope.setSpan(activeSpan);\n\n  function finishAndSetSpan() {\n    activeSpan && activeSpan.finish();\n    hub.getScope().setSpan(parentSpan);\n  }\n\n  let maybePromiseResult;\n  try {\n    maybePromiseResult = callback(activeSpan);\n  } catch (e) {\n    activeSpan && activeSpan.setStatus('internal_error');\n    finishAndSetSpan();\n    throw e;\n  }\n\n  if (isThenable(maybePromiseResult)) {\n    Promise.resolve(maybePromiseResult).then(\n      () => {\n        finishAndSetSpan();\n      },\n      () => {\n        activeSpan && activeSpan.setStatus('internal_error');\n        finishAndSetSpan();\n      },\n    );\n  } else {\n    finishAndSetSpan();\n  }\n\n  return maybePromiseResult;\n}\n\n/**\n * @deprecated Use {@link startSpan} instead.\n */\nconst startActiveSpan = startSpan;\n\n/**\n * Similar to `Sentry.startSpan`. Wraps a function with a transaction/span, but does not finish the span\n * after the function is done automatically.\n *\n * The created span is the active span and will be used as parent by other spans created inside the function\n * and can be accessed via `Sentry.getActiveSpan()`, as long as the function is executed while the scope is active.\n *\n * Note that if you have not enabled tracing extensions via `addTracingExtensions`\n * or you didn't set `tracesSampleRate`, this function will not generate spans\n * and the `span` returned from the callback will be undefined.\n */\nfunction startSpanManual(\n  context,\n  callback,\n) {\n  const ctx = normalizeContext(context);\n\n  const hub = getCurrentHub();\n  const scope = hub.getScope();\n  const parentSpan = scope.getSpan();\n\n  const activeSpan = createChildSpanOrTransaction(hub, parentSpan, ctx);\n  scope.setSpan(activeSpan);\n\n  function finishAndSetSpan() {\n    activeSpan && activeSpan.finish();\n    hub.getScope().setSpan(parentSpan);\n  }\n\n  let maybePromiseResult;\n  try {\n    maybePromiseResult = callback(activeSpan, finishAndSetSpan);\n  } catch (e) {\n    activeSpan && activeSpan.setStatus('internal_error');\n    throw e;\n  }\n\n  if (isThenable(maybePromiseResult)) {\n    Promise.resolve(maybePromiseResult).then(undefined, () => {\n      activeSpan && activeSpan.setStatus('internal_error');\n    });\n  }\n\n  return maybePromiseResult;\n}\n\n/**\n * Creates a span. This span is not set as active, so will not get automatic instrumentation spans\n * as children or be able to be accessed via `Sentry.getSpan()`.\n *\n * If you want to create a span that is set as active, use {@link startSpan}.\n *\n * Note that if you have not enabled tracing extensions via `addTracingExtensions`\n * or you didn't set `tracesSampleRate` or `tracesSampler`, this function will not generate spans\n * and the `span` returned from the callback will be undefined.\n */\nfunction startInactiveSpan(context) {\n  if (!hasTracingEnabled()) {\n    return undefined;\n  }\n\n  const ctx = { ...context };\n  // If a name is set and a description is not, set the description to the name.\n  if (ctx.name !== undefined && ctx.description === undefined) {\n    ctx.description = ctx.name;\n  }\n\n  const hub = getCurrentHub();\n  const parentSpan = getActiveSpan();\n  return parentSpan ? parentSpan.startChild(ctx) : hub.startTransaction(ctx);\n}\n\n/**\n * Returns the currently active span.\n */\nfunction getActiveSpan() {\n  return getCurrentHub().getScope().getSpan();\n}\n\n/**\n * Continue a trace from `sentry-trace` and `baggage` values.\n * These values can be obtained from incoming request headers,\n * or in the browser from `<meta name=\"sentry-trace\">` and `<meta name=\"baggage\">` HTML tags.\n *\n * It also takes an optional `request` option, which if provided will also be added to the scope & transaction metadata.\n * The callback receives a transactionContext that may be used for `startTransaction` or `startSpan`.\n */\nfunction continueTrace(\n  {\n    sentryTrace,\n    baggage,\n  }\n\n,\n  callback,\n) {\n  const hub = getCurrentHub();\n  const currentScope = hub.getScope();\n\n  const { traceparentData, dynamicSamplingContext, propagationContext } = tracingContextFromHeaders(\n    sentryTrace,\n    baggage,\n  );\n\n  currentScope.setPropagationContext(propagationContext);\n\n  if (DEBUG_BUILD && traceparentData) {\n    logger.log(`[Tracing] Continuing trace ${traceparentData.traceId}.`);\n  }\n\n  const transactionContext = {\n    ...traceparentData,\n    metadata: dropUndefinedKeys({\n      dynamicSamplingContext: traceparentData && !dynamicSamplingContext ? {} : dynamicSamplingContext,\n    }),\n  };\n\n  if (!callback) {\n    return transactionContext;\n  }\n\n  return callback(transactionContext);\n}\n\nfunction createChildSpanOrTransaction(\n  hub,\n  parentSpan,\n  ctx,\n) {\n  if (!hasTracingEnabled()) {\n    return undefined;\n  }\n  return parentSpan ? parentSpan.startChild(ctx) : hub.startTransaction(ctx);\n}\n\nfunction normalizeContext(context) {\n  const ctx = { ...context };\n  // If a name is set and a description is not, set the description to the name.\n  if (ctx.name !== undefined && ctx.description === undefined) {\n    ctx.description = ctx.name;\n  }\n\n  return ctx;\n}\n\nexport { continueTrace, getActiveSpan, startActiveSpan, startInactiveSpan, startSpan, startSpanManual, trace };\n//# sourceMappingURL=trace.js.map\n",
  "import { getSdkMetadataForEnvelopeHeader, createEventEnvelopeHeaders, createEnvelope, dsnToString } from '@sentry/utils';\n\n/**\n * Apply SdkInfo (name, version, packages, integrations) to the corresponding event key.\n * Merge with existing data if any.\n **/\nfunction enhanceEventWithSdkInfo(event, sdkInfo) {\n  if (!sdkInfo) {\n    return event;\n  }\n  event.sdk = event.sdk || {};\n  event.sdk.name = event.sdk.name || sdkInfo.name;\n  event.sdk.version = event.sdk.version || sdkInfo.version;\n  event.sdk.integrations = [...(event.sdk.integrations || []), ...(sdkInfo.integrations || [])];\n  event.sdk.packages = [...(event.sdk.packages || []), ...(sdkInfo.packages || [])];\n  return event;\n}\n\n/** Creates an envelope from a Session */\nfunction createSessionEnvelope(\n  session,\n  dsn,\n  metadata,\n  tunnel,\n) {\n  const sdkInfo = getSdkMetadataForEnvelopeHeader(metadata);\n  const envelopeHeaders = {\n    sent_at: new Date().toISOString(),\n    ...(sdkInfo && { sdk: sdkInfo }),\n    ...(!!tunnel && dsn && { dsn: dsnToString(dsn) }),\n  };\n\n  const envelopeItem =\n    'aggregates' in session ? [{ type: 'sessions' }, session] : [{ type: 'session' }, session.toJSON()];\n\n  return createEnvelope(envelopeHeaders, [envelopeItem]);\n}\n\n/**\n * Create an Envelope from an event.\n */\nfunction createEventEnvelope(\n  event,\n  dsn,\n  metadata,\n  tunnel,\n) {\n  const sdkInfo = getSdkMetadataForEnvelopeHeader(metadata);\n\n  /*\n    Note: Due to TS, event.type may be `replay_event`, theoretically.\n    In practice, we never call `createEventEnvelope` with `replay_event` type,\n    and we'd have to adjut a looot of types to make this work properly.\n    We want to avoid casting this around, as that could lead to bugs (e.g. when we add another type)\n    So the safe choice is to really guard against the replay_event type here.\n  */\n  const eventType = event.type && event.type !== 'replay_event' ? event.type : 'event';\n\n  enhanceEventWithSdkInfo(event, metadata && metadata.sdk);\n\n  const envelopeHeaders = createEventEnvelopeHeaders(event, sdkInfo, tunnel, dsn);\n\n  // Prevent this data (which, if it exists, was used in earlier steps in the processing pipeline) from being sent to\n  // sentry. (Note: Our use of this property comes and goes with whatever we might be debugging, whatever hacks we may\n  // have temporarily added, etc. Even if we don't happen to be using it at some point in the future, let's not get rid\n  // of this `delete`, lest we miss putting it back in the next time the property is in use.)\n  delete event.sdkProcessingMetadata;\n\n  const eventItem = [{ type: eventType }, event];\n  return createEnvelope(envelopeHeaders, [eventItem]);\n}\n\nexport { createEventEnvelope, createSessionEnvelope };\n//# sourceMappingURL=envelope.js.map\n",
  "import { dropUndefinedKeys } from '@sentry/utils';\nimport { getCurrentHub } from './hub.js';\n\n/**\n * @inheritdoc\n */\nclass SessionFlusher  {\n\n   constructor(client, attrs) {\n    this._client = client;\n    this.flushTimeout = 60;\n    this._pendingAggregates = {};\n    this._isEnabled = true;\n\n    // Call to setInterval, so that flush is called every 60 seconds\n    this._intervalId = setInterval(() => this.flush(), this.flushTimeout * 1000);\n    this._sessionAttrs = attrs;\n  }\n\n  /** Checks if `pendingAggregates` has entries, and if it does flushes them by calling `sendSession` */\n   flush() {\n    const sessionAggregates = this.getSessionAggregates();\n    if (sessionAggregates.aggregates.length === 0) {\n      return;\n    }\n    this._pendingAggregates = {};\n    this._client.sendSession(sessionAggregates);\n  }\n\n  /** Massages the entries in `pendingAggregates` and returns aggregated sessions */\n   getSessionAggregates() {\n    const aggregates = Object.keys(this._pendingAggregates).map((key) => {\n      return this._pendingAggregates[parseInt(key)];\n    });\n\n    const sessionAggregates = {\n      attrs: this._sessionAttrs,\n      aggregates,\n    };\n    return dropUndefinedKeys(sessionAggregates);\n  }\n\n  /** JSDoc */\n   close() {\n    clearInterval(this._intervalId);\n    this._isEnabled = false;\n    this.flush();\n  }\n\n  /**\n   * Wrapper function for _incrementSessionStatusCount that checks if the instance of SessionFlusher is enabled then\n   * fetches the session status of the request from `Scope.getRequestSession().status` on the scope and passes them to\n   * `_incrementSessionStatusCount` along with the start date\n   */\n   incrementSessionStatusCount() {\n    if (!this._isEnabled) {\n      return;\n    }\n    const scope = getCurrentHub().getScope();\n    const requestSession = scope.getRequestSession();\n\n    if (requestSession && requestSession.status) {\n      this._incrementSessionStatusCount(requestSession.status, new Date());\n      // This is not entirely necessarily but is added as a safe guard to indicate the bounds of a request and so in\n      // case captureRequestSession is called more than once to prevent double count\n      scope.setRequestSession(undefined);\n      /* eslint-enable @typescript-eslint/no-unsafe-member-access */\n    }\n  }\n\n  /**\n   * Increments status bucket in pendingAggregates buffer (internal state) corresponding to status of\n   * the session received\n   */\n   _incrementSessionStatusCount(status, date) {\n    // Truncate minutes and seconds on Session Started attribute to have one minute bucket keys\n    const sessionStartedTrunc = new Date(date).setSeconds(0, 0);\n    this._pendingAggregates[sessionStartedTrunc] = this._pendingAggregates[sessionStartedTrunc] || {};\n\n    // corresponds to aggregated sessions in one specific minute bucket\n    // for example, {\"started\":\"2021-03-16T08:00:00.000Z\",\"exited\":4, \"errored\": 1}\n    const aggregationCounts = this._pendingAggregates[sessionStartedTrunc];\n    if (!aggregationCounts.started) {\n      aggregationCounts.started = new Date(sessionStartedTrunc).toISOString();\n    }\n\n    switch (status) {\n      case 'errored':\n        aggregationCounts.errored = (aggregationCounts.errored || 0) + 1;\n        return aggregationCounts.errored;\n      case 'ok':\n        aggregationCounts.exited = (aggregationCounts.exited || 0) + 1;\n        return aggregationCounts.exited;\n      default:\n        aggregationCounts.crashed = (aggregationCounts.crashed || 0) + 1;\n        return aggregationCounts.crashed;\n    }\n  }\n}\n\nexport { SessionFlusher };\n//# sourceMappingURL=sessionflusher.js.map\n",
  "import { makeDsn, dsnToString, urlEncode } from '@sentry/utils';\n\nconst SENTRY_API_VERSION = '7';\n\n/** Returns the prefix to construct Sentry ingestion API endpoints. */\nfunction getBaseApiEndpoint(dsn) {\n  const protocol = dsn.protocol ? `${dsn.protocol}:` : '';\n  const port = dsn.port ? `:${dsn.port}` : '';\n  return `${protocol}//${dsn.host}${port}${dsn.path ? `/${dsn.path}` : ''}/api/`;\n}\n\n/** Returns the ingest API endpoint for target. */\nfunction _getIngestEndpoint(dsn) {\n  return `${getBaseApiEndpoint(dsn)}${dsn.projectId}/envelope/`;\n}\n\n/** Returns a URL-encoded string with auth config suitable for a query string. */\nfunction _encodedAuth(dsn, sdkInfo) {\n  return urlEncode({\n    // We send only the minimum set of required information. See\n    // https://github.com/getsentry/sentry-javascript/issues/2572.\n    sentry_key: dsn.publicKey,\n    sentry_version: SENTRY_API_VERSION,\n    ...(sdkInfo && { sentry_client: `${sdkInfo.name}/${sdkInfo.version}` }),\n  });\n}\n\n/**\n * Returns the envelope endpoint URL with auth in the query string.\n *\n * Sending auth as part of the query string and not as custom HTTP headers avoids CORS preflight requests.\n */\nfunction getEnvelopeEndpointWithUrlEncodedAuth(\n  dsn,\n  // TODO (v8): Remove `tunnelOrOptions` in favor of `options`, and use the substitute code below\n  // options: ClientOptions = {} as ClientOptions,\n  tunnelOrOptions = {} ,\n) {\n  // TODO (v8): Use this code instead\n  // const { tunnel, _metadata = {} } = options;\n  // return tunnel ? tunnel : `${_getIngestEndpoint(dsn)}?${_encodedAuth(dsn, _metadata.sdk)}`;\n\n  const tunnel = typeof tunnelOrOptions === 'string' ? tunnelOrOptions : tunnelOrOptions.tunnel;\n  const sdkInfo =\n    typeof tunnelOrOptions === 'string' || !tunnelOrOptions._metadata ? undefined : tunnelOrOptions._metadata.sdk;\n\n  return tunnel ? tunnel : `${_getIngestEndpoint(dsn)}?${_encodedAuth(dsn, sdkInfo)}`;\n}\n\n/** Returns the url to the report dialog endpoint. */\nfunction getReportDialogEndpoint(\n  dsnLike,\n  dialogOptions\n\n,\n) {\n  const dsn = makeDsn(dsnLike);\n  if (!dsn) {\n    return '';\n  }\n\n  const endpoint = `${getBaseApiEndpoint(dsn)}embed/error-page/`;\n\n  let encodedOptions = `dsn=${dsnToString(dsn)}`;\n  for (const key in dialogOptions) {\n    if (key === 'dsn') {\n      continue;\n    }\n\n    if (key === 'onClose') {\n      continue;\n    }\n\n    if (key === 'user') {\n      const user = dialogOptions.user;\n      if (!user) {\n        continue;\n      }\n      if (user.name) {\n        encodedOptions += `&name=${encodeURIComponent(user.name)}`;\n      }\n      if (user.email) {\n        encodedOptions += `&email=${encodeURIComponent(user.email)}`;\n      }\n    } else {\n      encodedOptions += `&${encodeURIComponent(key)}=${encodeURIComponent(dialogOptions[key] )}`;\n    }\n  }\n\n  return `${endpoint}?${encodedOptions}`;\n}\n\nexport { getEnvelopeEndpointWithUrlEncodedAuth, getReportDialogEndpoint };\n//# sourceMappingURL=api.js.map\n",
  "import { makeDsn, dsnToString, urlEncode } from '@sentry/utils';\n\nconst SENTRY_API_VERSION = '7';\n\n/** Returns the prefix to construct Sentry ingestion API endpoints. */\nfunction getBaseApiEndpoint(dsn) {\n  const protocol = dsn.protocol ? `${dsn.protocol}:` : '';\n  const port = dsn.port ? `:${dsn.port}` : '';\n  return `${protocol}//${dsn.host}${port}${dsn.path ? `/${dsn.path}` : ''}/api/`;\n}\n\n/** Returns the ingest API endpoint for target. */\nfunction _getIngestEndpoint(dsn) {\n  return `${getBaseApiEndpoint(dsn)}${dsn.projectId}/envelope/`;\n}\n\n/** Returns a URL-encoded string with auth config suitable for a query string. */\nfunction _encodedAuth(dsn, sdkInfo) {\n  return urlEncode({\n    // We send only the minimum set of required information. See\n    // https://github.com/getsentry/sentry-javascript/issues/2572.\n    sentry_key: dsn.publicKey,\n    sentry_version: SENTRY_API_VERSION,\n    ...(sdkInfo && { sentry_client: `${sdkInfo.name}/${sdkInfo.version}` }),\n  });\n}\n\n/**\n * Returns the envelope endpoint URL with auth in the query string.\n *\n * Sending auth as part of the query string and not as custom HTTP headers avoids CORS preflight requests.\n */\nfunction getEnvelopeEndpointWithUrlEncodedAuth(\n  dsn,\n  // TODO (v8): Remove `tunnelOrOptions` in favor of `options`, and use the substitute code below\n  // options: ClientOptions = {} as ClientOptions,\n  tunnelOrOptions = {} ,\n) {\n  // TODO (v8): Use this code instead\n  // const { tunnel, _metadata = {} } = options;\n  // return tunnel ? tunnel : `${_getIngestEndpoint(dsn)}?${_encodedAuth(dsn, _metadata.sdk)}`;\n\n  const tunnel = typeof tunnelOrOptions === 'string' ? tunnelOrOptions : tunnelOrOptions.tunnel;\n  const sdkInfo =\n    typeof tunnelOrOptions === 'string' || !tunnelOrOptions._metadata ? undefined : tunnelOrOptions._metadata.sdk;\n\n  return tunnel ? tunnel : `${_getIngestEndpoint(dsn)}?${_encodedAuth(dsn, sdkInfo)}`;\n}\n\n/** Returns the url to the report dialog endpoint. */\nfunction getReportDialogEndpoint(\n  dsnLike,\n  dialogOptions\n\n,\n) {\n  const dsn = makeDsn(dsnLike);\n  if (!dsn) {\n    return '';\n  }\n\n  const endpoint = `${getBaseApiEndpoint(dsn)}embed/error-page/`;\n\n  let encodedOptions = `dsn=${dsnToString(dsn)}`;\n  for (const key in dialogOptions) {\n    if (key === 'dsn') {\n      continue;\n    }\n\n    if (key === 'onClose') {\n      continue;\n    }\n\n    if (key === 'user') {\n      const user = dialogOptions.user;\n      if (!user) {\n        continue;\n      }\n      if (user.name) {\n        encodedOptions += `&name=${encodeURIComponent(user.name)}`;\n      }\n      if (user.email) {\n        encodedOptions += `&email=${encodeURIComponent(user.email)}`;\n      }\n    } else {\n      encodedOptions += `&${encodeURIComponent(key)}=${encodeURIComponent(dialogOptions[key] )}`;\n    }\n  }\n\n  return `${endpoint}?${encodedOptions}`;\n}\n\nexport { getEnvelopeEndpointWithUrlEncodedAuth, getReportDialogEndpoint };\n//# sourceMappingURL=api.js.map\n",
  "import { arrayify, logger } from '@sentry/utils';\nimport { DEBUG_BUILD } from './debug-build.js';\nimport { addGlobalEventProcessor } from './eventProcessors.js';\nimport { getClient } from './exports.js';\nimport { getCurrentHub } from './hub.js';\n\nconst installedIntegrations = [];\n\n/** Map of integrations assigned to a client */\n\n/**\n * Remove duplicates from the given array, preferring the last instance of any duplicate. Not guaranteed to\n * preseve the order of integrations in the array.\n *\n * @private\n */\nfunction filterDuplicates(integrations) {\n  const integrationsByName = {};\n\n  integrations.forEach(currentInstance => {\n    const { name } = currentInstance;\n\n    const existingInstance = integrationsByName[name];\n\n    // We want integrations later in the array to overwrite earlier ones of the same type, except that we never want a\n    // default instance to overwrite an existing user instance\n    if (existingInstance && !existingInstance.isDefaultInstance && currentInstance.isDefaultInstance) {\n      return;\n    }\n\n    integrationsByName[name] = currentInstance;\n  });\n\n  return Object.keys(integrationsByName).map(k => integrationsByName[k]);\n}\n\n/** Gets integrations to install */\nfunction getIntegrationsToSetup(options) {\n  const defaultIntegrations = options.defaultIntegrations || [];\n  const userIntegrations = options.integrations;\n\n  // We flag default instances, so that later we can tell them apart from any user-created instances of the same class\n  defaultIntegrations.forEach(integration => {\n    integration.isDefaultInstance = true;\n  });\n\n  let integrations;\n\n  if (Array.isArray(userIntegrations)) {\n    integrations = [...defaultIntegrations, ...userIntegrations];\n  } else if (typeof userIntegrations === 'function') {\n    integrations = arrayify(userIntegrations(defaultIntegrations));\n  } else {\n    integrations = defaultIntegrations;\n  }\n\n  const finalIntegrations = filterDuplicates(integrations);\n\n  // The `Debug` integration prints copies of the `event` and `hint` which will be passed to `beforeSend` or\n  // `beforeSendTransaction`. It therefore has to run after all other integrations, so that the changes of all event\n  // processors will be reflected in the printed values. For lack of a more elegant way to guarantee that, we therefore\n  // locate it and, assuming it exists, pop it out of its current spot and shove it onto the end of the array.\n  const debugIndex = findIndex(finalIntegrations, integration => integration.name === 'Debug');\n  if (debugIndex !== -1) {\n    const [debugInstance] = finalIntegrations.splice(debugIndex, 1);\n    finalIntegrations.push(debugInstance);\n  }\n\n  return finalIntegrations;\n}\n\n/**\n * Given a list of integration instances this installs them all. When `withDefaults` is set to `true` then all default\n * integrations are added unless they were already provided before.\n * @param integrations array of integration instances\n * @param withDefault should enable default integrations\n */\nfunction setupIntegrations(client, integrations) {\n  const integrationIndex = {};\n\n  integrations.forEach(integration => {\n    // guard against empty provided integrations\n    if (integration) {\n      setupIntegration(client, integration, integrationIndex);\n    }\n  });\n\n  return integrationIndex;\n}\n\n/** Setup a single integration.  */\nfunction setupIntegration(client, integration, integrationIndex) {\n  integrationIndex[integration.name] = integration;\n\n  // `setupOnce` is only called the first time\n  if (installedIntegrations.indexOf(integration.name) === -1) {\n    integration.setupOnce(addGlobalEventProcessor, getCurrentHub);\n    installedIntegrations.push(integration.name);\n  }\n\n  // `setup` is run for each client\n  if (integration.setup && typeof integration.setup === 'function') {\n    integration.setup(client);\n  }\n\n  if (client.on && typeof integration.preprocessEvent === 'function') {\n    const callback = integration.preprocessEvent.bind(integration) ;\n    client.on('preprocessEvent', (event, hint) => callback(event, hint, client));\n  }\n\n  if (client.addEventProcessor && typeof integration.processEvent === 'function') {\n    const callback = integration.processEvent.bind(integration) ;\n\n    const processor = Object.assign((event, hint) => callback(event, hint, client), {\n      id: integration.name,\n    });\n\n    client.addEventProcessor(processor);\n  }\n\n  DEBUG_BUILD && logger.log(`Integration installed: ${integration.name}`);\n}\n\n/** Add an integration to the current hub's client. */\nfunction addIntegration(integration) {\n  const client = getClient();\n\n  if (!client || !client.addIntegration) {\n    DEBUG_BUILD && logger.warn(`Cannot add integration \"${integration.name}\" because no SDK Client is available.`);\n    return;\n  }\n\n  client.addIntegration(integration);\n}\n\n// Polyfill for Array.findIndex(), which is not supported in ES5\nfunction findIndex(arr, callback) {\n  for (let i = 0; i < arr.length; i++) {\n    if (callback(arr[i]) === true) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\nexport { addIntegration, getIntegrationsToSetup, installedIntegrations, setupIntegration, setupIntegrations };\n//# sourceMappingURL=integration.js.map\n",
  "import { arrayify, logger } from '@sentry/utils';\nimport { DEBUG_BUILD } from './debug-build.js';\nimport { addGlobalEventProcessor } from './eventProcessors.js';\nimport { getClient } from './exports.js';\nimport { getCurrentHub } from './hub.js';\n\nconst installedIntegrations = [];\n\n/** Map of integrations assigned to a client */\n\n/**\n * Remove duplicates from the given array, preferring the last instance of any duplicate. Not guaranteed to\n * preseve the order of integrations in the array.\n *\n * @private\n */\nfunction filterDuplicates(integrations) {\n  const integrationsByName = {};\n\n  integrations.forEach(currentInstance => {\n    const { name } = currentInstance;\n\n    const existingInstance = integrationsByName[name];\n\n    // We want integrations later in the array to overwrite earlier ones of the same type, except that we never want a\n    // default instance to overwrite an existing user instance\n    if (existingInstance && !existingInstance.isDefaultInstance && currentInstance.isDefaultInstance) {\n      return;\n    }\n\n    integrationsByName[name] = currentInstance;\n  });\n\n  return Object.keys(integrationsByName).map(k => integrationsByName[k]);\n}\n\n/** Gets integrations to install */\nfunction getIntegrationsToSetup(options) {\n  const defaultIntegrations = options.defaultIntegrations || [];\n  const userIntegrations = options.integrations;\n\n  // We flag default instances, so that later we can tell them apart from any user-created instances of the same class\n  defaultIntegrations.forEach(integration => {\n    integration.isDefaultInstance = true;\n  });\n\n  let integrations;\n\n  if (Array.isArray(userIntegrations)) {\n    integrations = [...defaultIntegrations, ...userIntegrations];\n  } else if (typeof userIntegrations === 'function') {\n    integrations = arrayify(userIntegrations(defaultIntegrations));\n  } else {\n    integrations = defaultIntegrations;\n  }\n\n  const finalIntegrations = filterDuplicates(integrations);\n\n  // The `Debug` integration prints copies of the `event` and `hint` which will be passed to `beforeSend` or\n  // `beforeSendTransaction`. It therefore has to run after all other integrations, so that the changes of all event\n  // processors will be reflected in the printed values. For lack of a more elegant way to guarantee that, we therefore\n  // locate it and, assuming it exists, pop it out of its current spot and shove it onto the end of the array.\n  const debugIndex = findIndex(finalIntegrations, integration => integration.name === 'Debug');\n  if (debugIndex !== -1) {\n    const [debugInstance] = finalIntegrations.splice(debugIndex, 1);\n    finalIntegrations.push(debugInstance);\n  }\n\n  return finalIntegrations;\n}\n\n/**\n * Given a list of integration instances this installs them all. When `withDefaults` is set to `true` then all default\n * integrations are added unless they were already provided before.\n * @param integrations array of integration instances\n * @param withDefault should enable default integrations\n */\nfunction setupIntegrations(client, integrations) {\n  const integrationIndex = {};\n\n  integrations.forEach(integration => {\n    // guard against empty provided integrations\n    if (integration) {\n      setupIntegration(client, integration, integrationIndex);\n    }\n  });\n\n  return integrationIndex;\n}\n\n/** Setup a single integration.  */\nfunction setupIntegration(client, integration, integrationIndex) {\n  integrationIndex[integration.name] = integration;\n\n  // `setupOnce` is only called the first time\n  if (installedIntegrations.indexOf(integration.name) === -1) {\n    integration.setupOnce(addGlobalEventProcessor, getCurrentHub);\n    installedIntegrations.push(integration.name);\n  }\n\n  // `setup` is run for each client\n  if (integration.setup && typeof integration.setup === 'function') {\n    integration.setup(client);\n  }\n\n  if (client.on && typeof integration.preprocessEvent === 'function') {\n    const callback = integration.preprocessEvent.bind(integration) ;\n    client.on('preprocessEvent', (event, hint) => callback(event, hint, client));\n  }\n\n  if (client.addEventProcessor && typeof integration.processEvent === 'function') {\n    const callback = integration.processEvent.bind(integration) ;\n\n    const processor = Object.assign((event, hint) => callback(event, hint, client), {\n      id: integration.name,\n    });\n\n    client.addEventProcessor(processor);\n  }\n\n  DEBUG_BUILD && logger.log(`Integration installed: ${integration.name}`);\n}\n\n/** Add an integration to the current hub's client. */\nfunction addIntegration(integration) {\n  const client = getClient();\n\n  if (!client || !client.addIntegration) {\n    DEBUG_BUILD && logger.warn(`Cannot add integration \"${integration.name}\" because no SDK Client is available.`);\n    return;\n  }\n\n  client.addIntegration(integration);\n}\n\n// Polyfill for Array.findIndex(), which is not supported in ES5\nfunction findIndex(arr, callback) {\n  for (let i = 0; i < arr.length; i++) {\n    if (callback(arr[i]) === true) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\nexport { addIntegration, getIntegrationsToSetup, installedIntegrations, setupIntegration, setupIntegrations };\n//# sourceMappingURL=integration.js.map\n",
  "import { makeDsn, logger, checkOrSetAlreadyCaught, isPrimitive, resolvedSyncPromise, addItemToEnvelope, createAttachmentEnvelopeItem, SyncPromise, rejectedSyncPromise, SentryError, isThenable, isPlainObject } from '@sentry/utils';\nimport { getEnvelopeEndpointWithUrlEncodedAuth } from './api.js';\nimport { DEBUG_BUILD } from './debug-build.js';\nimport { createEventEnvelope, createSessionEnvelope } from './envelope.js';\nimport { setupIntegrations, setupIntegration } from './integration.js';\nimport { updateSession } from './session.js';\nimport { getDynamicSamplingContextFromClient } from './tracing/dynamicSamplingContext.js';\nimport { prepareEvent } from './utils/prepareEvent.js';\n\nconst ALREADY_SEEN_ERROR = \"Not capturing exception because it's already been captured.\";\n\n/**\n * Base implementation for all JavaScript SDK clients.\n *\n * Call the constructor with the corresponding options\n * specific to the client subclass. To access these options later, use\n * {@link Client.getOptions}.\n *\n * If a Dsn is specified in the options, it will be parsed and stored. Use\n * {@link Client.getDsn} to retrieve the Dsn at any moment. In case the Dsn is\n * invalid, the constructor will throw a {@link SentryException}. Note that\n * without a valid Dsn, the SDK will not send any events to Sentry.\n *\n * Before sending an event, it is passed through\n * {@link BaseClient._prepareEvent} to add SDK information and scope data\n * (breadcrumbs and context). To add more custom information, override this\n * method and extend the resulting prepared event.\n *\n * To issue automatically created events (e.g. via instrumentation), use\n * {@link Client.captureEvent}. It will prepare the event and pass it through\n * the callback lifecycle. To issue auto-breadcrumbs, use\n * {@link Client.addBreadcrumb}.\n *\n * @example\n * class NodeClient extends BaseClient<NodeOptions> {\n *   public constructor(options: NodeOptions) {\n *     super(options);\n *   }\n *\n *   // ...\n * }\n */\nclass BaseClient {\n  /** Options passed to the SDK. */\n\n  /** The client Dsn, if specified in options. Without this Dsn, the SDK will be disabled. */\n\n  /** Array of set up integrations. */\n\n  /** Indicates whether this client's integrations have been set up. */\n\n  /** Number of calls being processed */\n\n  /** Holds flushable  */\n\n  // eslint-disable-next-line @typescript-eslint/ban-types\n\n  /**\n   * Initializes this client instance.\n   *\n   * @param options Options for the client.\n   */\n   constructor(options) {\n    this._options = options;\n    this._integrations = {};\n    this._integrationsInitialized = false;\n    this._numProcessing = 0;\n    this._outcomes = {};\n    this._hooks = {};\n    this._eventProcessors = [];\n\n    if (options.dsn) {\n      this._dsn = makeDsn(options.dsn);\n    } else {\n      DEBUG_BUILD && logger.warn('No DSN provided, client will not send events.');\n    }\n\n    if (this._dsn) {\n      const url = getEnvelopeEndpointWithUrlEncodedAuth(this._dsn, options);\n      this._transport = options.transport({\n        recordDroppedEvent: this.recordDroppedEvent.bind(this),\n        ...options.transportOptions,\n        url,\n      });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n   captureException(exception, hint, scope) {\n    // ensure we haven't captured this very object before\n    if (checkOrSetAlreadyCaught(exception)) {\n      DEBUG_BUILD && logger.log(ALREADY_SEEN_ERROR);\n      return;\n    }\n\n    let eventId = hint && hint.event_id;\n\n    this._process(\n      this.eventFromException(exception, hint)\n        .then(event => this._captureEvent(event, hint, scope))\n        .then(result => {\n          eventId = result;\n        }),\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureMessage(\n    message,\n    // eslint-disable-next-line deprecation/deprecation\n    level,\n    hint,\n    scope,\n  ) {\n    let eventId = hint && hint.event_id;\n\n    const promisedEvent = isPrimitive(message)\n      ? this.eventFromMessage(String(message), level, hint)\n      : this.eventFromException(message, hint);\n\n    this._process(\n      promisedEvent\n        .then(event => this._captureEvent(event, hint, scope))\n        .then(result => {\n          eventId = result;\n        }),\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureEvent(event, hint, scope) {\n    // ensure we haven't captured this very object before\n    if (hint && hint.originalException && checkOrSetAlreadyCaught(hint.originalException)) {\n      DEBUG_BUILD && logger.log(ALREADY_SEEN_ERROR);\n      return;\n    }\n\n    let eventId = hint && hint.event_id;\n\n    this._process(\n      this._captureEvent(event, hint, scope).then(result => {\n        eventId = result;\n      }),\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureSession(session) {\n    if (!(typeof session.release === 'string')) {\n      DEBUG_BUILD && logger.warn('Discarded session because of missing or non-string release');\n    } else {\n      this.sendSession(session);\n      // After sending, we set init false to indicate it's not the first occurrence\n      updateSession(session, { init: false });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getDsn() {\n    return this._dsn;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getOptions() {\n    return this._options;\n  }\n\n  /**\n   * @see SdkMetadata in @sentry/types\n   *\n   * @return The metadata of the SDK\n   */\n   getSdkMetadata() {\n    return this._options._metadata;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getTransport() {\n    return this._transport;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   flush(timeout) {\n    const transport = this._transport;\n    if (transport) {\n      return this._isClientDoneProcessing(timeout).then(clientFinished => {\n        return transport.flush(timeout).then(transportFlushed => clientFinished && transportFlushed);\n      });\n    } else {\n      return resolvedSyncPromise(true);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   close(timeout) {\n    return this.flush(timeout).then(result => {\n      this.getOptions().enabled = false;\n      return result;\n    });\n  }\n\n  /** Get all installed event processors. */\n   getEventProcessors() {\n    return this._eventProcessors;\n  }\n\n  /** @inheritDoc */\n   addEventProcessor(eventProcessor) {\n    this._eventProcessors.push(eventProcessor);\n  }\n\n  /**\n   * Sets up the integrations\n   */\n   setupIntegrations(forceInitialize) {\n    if ((forceInitialize && !this._integrationsInitialized) || (this._isEnabled() && !this._integrationsInitialized)) {\n      this._integrations = setupIntegrations(this, this._options.integrations);\n      this._integrationsInitialized = true;\n    }\n  }\n\n  /**\n   * Gets an installed integration by its `id`.\n   *\n   * @returns The installed integration or `undefined` if no integration with that `id` was installed.\n   */\n   getIntegrationById(integrationId) {\n    return this._integrations[integrationId];\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getIntegration(integration) {\n    try {\n      return (this._integrations[integration.id] ) || null;\n    } catch (_oO) {\n      DEBUG_BUILD && logger.warn(`Cannot retrieve integration ${integration.id} from the current Client`);\n      return null;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addIntegration(integration) {\n    setupIntegration(this, integration, this._integrations);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   sendEvent(event, hint = {}) {\n    this.emit('beforeSendEvent', event, hint);\n\n    let env = createEventEnvelope(event, this._dsn, this._options._metadata, this._options.tunnel);\n\n    for (const attachment of hint.attachments || []) {\n      env = addItemToEnvelope(\n        env,\n        createAttachmentEnvelopeItem(\n          attachment,\n          this._options.transportOptions && this._options.transportOptions.textEncoder,\n        ),\n      );\n    }\n\n    const promise = this._sendEnvelope(env);\n    if (promise) {\n      promise.then(sendResponse => this.emit('afterSendEvent', event, sendResponse), null);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   sendSession(session) {\n    const env = createSessionEnvelope(session, this._dsn, this._options._metadata, this._options.tunnel);\n    void this._sendEnvelope(env);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   recordDroppedEvent(reason, category, _event) {\n    // Note: we use `event` in replay, where we overwrite this hook.\n\n    if (this._options.sendClientReports) {\n      // We want to track each category (error, transaction, session, replay_event) separately\n      // but still keep the distinction between different type of outcomes.\n      // We could use nested maps, but it's much easier to read and type this way.\n      // A correct type for map-based implementation if we want to go that route\n      // would be `Partial<Record<SentryRequestType, Partial<Record<Outcome, number>>>>`\n      // With typescript 4.1 we could even use template literal types\n      const key = `${reason}:${category}`;\n      DEBUG_BUILD && logger.log(`Adding outcome: \"${key}\"`);\n\n      // The following works because undefined + 1 === NaN and NaN is falsy\n      this._outcomes[key] = this._outcomes[key] + 1 || 1;\n    }\n  }\n\n  // Keep on() & emit() signatures in sync with types' client.ts interface\n  /* eslint-disable @typescript-eslint/unified-signatures */\n\n  /** @inheritdoc */\n\n  /** @inheritdoc */\n   on(hook, callback) {\n    if (!this._hooks[hook]) {\n      this._hooks[hook] = [];\n    }\n\n    // @ts-expect-error We assue the types are correct\n    this._hooks[hook].push(callback);\n  }\n\n  /** @inheritdoc */\n\n  /** @inheritdoc */\n   emit(hook, ...rest) {\n    if (this._hooks[hook]) {\n      this._hooks[hook].forEach(callback => callback(...rest));\n    }\n  }\n\n  /* eslint-enable @typescript-eslint/unified-signatures */\n\n  /** Updates existing session based on the provided event */\n   _updateSessionFromEvent(session, event) {\n    let crashed = false;\n    let errored = false;\n    const exceptions = event.exception && event.exception.values;\n\n    if (exceptions) {\n      errored = true;\n\n      for (const ex of exceptions) {\n        const mechanism = ex.mechanism;\n        if (mechanism && mechanism.handled === false) {\n          crashed = true;\n          break;\n        }\n      }\n    }\n\n    // A session is updated and that session update is sent in only one of the two following scenarios:\n    // 1. Session with non terminal status and 0 errors + an error occurred -> Will set error count to 1 and send update\n    // 2. Session with non terminal status and 1 error + a crash occurred -> Will set status crashed and send update\n    const sessionNonTerminal = session.status === 'ok';\n    const shouldUpdateAndSend = (sessionNonTerminal && session.errors === 0) || (sessionNonTerminal && crashed);\n\n    if (shouldUpdateAndSend) {\n      updateSession(session, {\n        ...(crashed && { status: 'crashed' }),\n        errors: session.errors || Number(errored || crashed),\n      });\n      this.captureSession(session);\n    }\n  }\n\n  /**\n   * Determine if the client is finished processing. Returns a promise because it will wait `timeout` ms before saying\n   * \"no\" (resolving to `false`) in order to give the client a chance to potentially finish first.\n   *\n   * @param timeout The time, in ms, after which to resolve to `false` if the client is still busy. Passing `0` (or not\n   * passing anything) will make the promise wait as long as it takes for processing to finish before resolving to\n   * `true`.\n   * @returns A promise which will resolve to `true` if processing is already done or finishes before the timeout, and\n   * `false` otherwise\n   */\n   _isClientDoneProcessing(timeout) {\n    return new SyncPromise(resolve => {\n      let ticked = 0;\n      const tick = 1;\n\n      const interval = setInterval(() => {\n        if (this._numProcessing == 0) {\n          clearInterval(interval);\n          resolve(true);\n        } else {\n          ticked += tick;\n          if (timeout && ticked >= timeout) {\n            clearInterval(interval);\n            resolve(false);\n          }\n        }\n      }, tick);\n    });\n  }\n\n  /** Determines whether this SDK is enabled and a transport is present. */\n   _isEnabled() {\n    return this.getOptions().enabled !== false && this._transport !== undefined;\n  }\n\n  /**\n   * Adds common information to events.\n   *\n   * The information includes release and environment from `options`,\n   * breadcrumbs and context (extra, tags and user) from the scope.\n   *\n   * Information that is already present in the event is never overwritten. For\n   * nested objects, such as the context, keys are merged.\n   *\n   * @param event The original event.\n   * @param hint May contain additional information about the original exception.\n   * @param scope A scope containing event metadata.\n   * @returns A new event with more information.\n   */\n   _prepareEvent(event, hint, scope) {\n    const options = this.getOptions();\n    const integrations = Object.keys(this._integrations);\n    if (!hint.integrations && integrations.length > 0) {\n      hint.integrations = integrations;\n    }\n\n    this.emit('preprocessEvent', event, hint);\n\n    return prepareEvent(options, event, hint, scope, this).then(evt => {\n      if (evt === null) {\n        return evt;\n      }\n\n      // If a trace context is not set on the event, we use the propagationContext set on the event to\n      // generate a trace context. If the propagationContext does not have a dynamic sampling context, we\n      // also generate one for it.\n      const { propagationContext } = evt.sdkProcessingMetadata || {};\n      const trace = evt.contexts && evt.contexts.trace;\n      if (!trace && propagationContext) {\n        const { traceId: trace_id, spanId, parentSpanId, dsc } = propagationContext ;\n        evt.contexts = {\n          trace: {\n            trace_id,\n            span_id: spanId,\n            parent_span_id: parentSpanId,\n          },\n          ...evt.contexts,\n        };\n\n        const dynamicSamplingContext = dsc ? dsc : getDynamicSamplingContextFromClient(trace_id, this, scope);\n\n        evt.sdkProcessingMetadata = {\n          dynamicSamplingContext,\n          ...evt.sdkProcessingMetadata,\n        };\n      }\n      return evt;\n    });\n  }\n\n  /**\n   * Processes the event and logs an error in case of rejection\n   * @param event\n   * @param hint\n   * @param scope\n   */\n   _captureEvent(event, hint = {}, scope) {\n    return this._processEvent(event, hint, scope).then(\n      finalEvent => {\n        return finalEvent.event_id;\n      },\n      reason => {\n        if (DEBUG_BUILD) {\n          // If something's gone wrong, log the error as a warning. If it's just us having used a `SentryError` for\n          // control flow, log just the message (no stack) as a log-level log.\n          const sentryError = reason ;\n          if (sentryError.logLevel === 'log') {\n            logger.log(sentryError.message);\n          } else {\n            logger.warn(sentryError);\n          }\n        }\n        return undefined;\n      },\n    );\n  }\n\n  /**\n   * Processes an event (either error or message) and sends it to Sentry.\n   *\n   * This also adds breadcrumbs and context information to the event. However,\n   * platform specific meta data (such as the User's IP address) must be added\n   * by the SDK implementor.\n   *\n   *\n   * @param event The event to send to Sentry.\n   * @param hint May contain additional information about the original exception.\n   * @param scope A scope containing event metadata.\n   * @returns A SyncPromise that resolves with the event or rejects in case event was/will not be send.\n   */\n   _processEvent(event, hint, scope) {\n    const options = this.getOptions();\n    const { sampleRate } = options;\n\n    const isTransaction = isTransactionEvent(event);\n    const isError = isErrorEvent(event);\n    const eventType = event.type || 'error';\n    const beforeSendLabel = `before send for type \\`${eventType}\\``;\n\n    // 1.0 === 100% events are sent\n    // 0.0 === 0% events are sent\n    // Sampling for transaction happens somewhere else\n    if (isError && typeof sampleRate === 'number' && Math.random() > sampleRate) {\n      this.recordDroppedEvent('sample_rate', 'error', event);\n      return rejectedSyncPromise(\n        new SentryError(\n          `Discarding event because it's not included in the random sample (sampling rate = ${sampleRate})`,\n          'log',\n        ),\n      );\n    }\n\n    const dataCategory = eventType === 'replay_event' ? 'replay' : eventType;\n\n    return this._prepareEvent(event, hint, scope)\n      .then(prepared => {\n        if (prepared === null) {\n          this.recordDroppedEvent('event_processor', dataCategory, event);\n          throw new SentryError('An event processor returned `null`, will not send event.', 'log');\n        }\n\n        const isInternalException = hint.data && (hint.data ).__sentry__ === true;\n        if (isInternalException) {\n          return prepared;\n        }\n\n        const result = processBeforeSend(options, prepared, hint);\n        return _validateBeforeSendResult(result, beforeSendLabel);\n      })\n      .then(processedEvent => {\n        if (processedEvent === null) {\n          this.recordDroppedEvent('before_send', dataCategory, event);\n          throw new SentryError(`${beforeSendLabel} returned \\`null\\`, will not send event.`, 'log');\n        }\n\n        const session = scope && scope.getSession();\n        if (!isTransaction && session) {\n          this._updateSessionFromEvent(session, processedEvent);\n        }\n\n        // None of the Sentry built event processor will update transaction name,\n        // so if the transaction name has been changed by an event processor, we know\n        // it has to come from custom event processor added by a user\n        const transactionInfo = processedEvent.transaction_info;\n        if (isTransaction && transactionInfo && processedEvent.transaction !== event.transaction) {\n          const source = 'custom';\n          processedEvent.transaction_info = {\n            ...transactionInfo,\n            source,\n          };\n        }\n\n        this.sendEvent(processedEvent, hint);\n        return processedEvent;\n      })\n      .then(null, reason => {\n        if (reason instanceof SentryError) {\n          throw reason;\n        }\n\n        this.captureException(reason, {\n          data: {\n            __sentry__: true,\n          },\n          originalException: reason,\n        });\n        throw new SentryError(\n          `Event processing pipeline threw an error, original event will not be sent. Details have been sent as a new event.\\nReason: ${reason}`,\n        );\n      });\n  }\n\n  /**\n   * Occupies the client with processing and event\n   */\n   _process(promise) {\n    this._numProcessing++;\n    void promise.then(\n      value => {\n        this._numProcessing--;\n        return value;\n      },\n      reason => {\n        this._numProcessing--;\n        return reason;\n      },\n    );\n  }\n\n  /**\n   * @inheritdoc\n   */\n   _sendEnvelope(envelope) {\n    this.emit('beforeEnvelope', envelope);\n\n    if (this._isEnabled() && this._transport) {\n      return this._transport.send(envelope).then(null, reason => {\n        DEBUG_BUILD && logger.error('Error while sending event:', reason);\n      });\n    } else {\n      DEBUG_BUILD && logger.error('Transport disabled');\n    }\n  }\n\n  /**\n   * Clears outcomes on this client and returns them.\n   */\n   _clearOutcomes() {\n    const outcomes = this._outcomes;\n    this._outcomes = {};\n    return Object.keys(outcomes).map(key => {\n      const [reason, category] = key.split(':') ;\n      return {\n        reason,\n        category,\n        quantity: outcomes[key],\n      };\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n\n}\n\n/**\n * Verifies that return value of configured `beforeSend` or `beforeSendTransaction` is of expected type, and returns the value if so.\n */\nfunction _validateBeforeSendResult(\n  beforeSendResult,\n  beforeSendLabel,\n) {\n  const invalidValueError = `${beforeSendLabel} must return \\`null\\` or a valid event.`;\n  if (isThenable(beforeSendResult)) {\n    return beforeSendResult.then(\n      event => {\n        if (!isPlainObject(event) && event !== null) {\n          throw new SentryError(invalidValueError);\n        }\n        return event;\n      },\n      e => {\n        throw new SentryError(`${beforeSendLabel} rejected with ${e}`);\n      },\n    );\n  } else if (!isPlainObject(beforeSendResult) && beforeSendResult !== null) {\n    throw new SentryError(invalidValueError);\n  }\n  return beforeSendResult;\n}\n\n/**\n * Process the matching `beforeSendXXX` callback.\n */\nfunction processBeforeSend(\n  options,\n  event,\n  hint,\n) {\n  const { beforeSend, beforeSendTransaction } = options;\n\n  if (isErrorEvent(event) && beforeSend) {\n    return beforeSend(event, hint);\n  }\n\n  if (isTransactionEvent(event) && beforeSendTransaction) {\n    return beforeSendTransaction(event, hint);\n  }\n\n  return event;\n}\n\nfunction isErrorEvent(event) {\n  return event.type === undefined;\n}\n\nfunction isTransactionEvent(event) {\n  return event.type === 'transaction';\n}\n\nexport { BaseClient };\n//# sourceMappingURL=baseclient.js.map\n",
  "import { dsnToString, dropUndefinedKeys, createEnvelope } from '@sentry/utils';\n\n/**\n * Create envelope from check in item.\n */\nfunction createCheckInEnvelope(\n  checkIn,\n  dynamicSamplingContext,\n  metadata,\n  tunnel,\n  dsn,\n) {\n  const headers = {\n    sent_at: new Date().toISOString(),\n  };\n\n  if (metadata && metadata.sdk) {\n    headers.sdk = {\n      name: metadata.sdk.name,\n      version: metadata.sdk.version,\n    };\n  }\n\n  if (!!tunnel && !!dsn) {\n    headers.dsn = dsnToString(dsn);\n  }\n\n  if (dynamicSamplingContext) {\n    headers.trace = dropUndefinedKeys(dynamicSamplingContext) ;\n  }\n\n  const item = createCheckInEnvelopeItem(checkIn);\n  return createEnvelope(headers, [item]);\n}\n\nfunction createCheckInEnvelopeItem(checkIn) {\n  const checkInHeaders = {\n    type: 'check_in',\n  };\n  return [checkInHeaders, checkIn];\n}\n\nexport { createCheckInEnvelope };\n//# sourceMappingURL=checkin.js.map\n",
  "import { resolvedSyncPromise, eventFromUnknownInput, eventFromMessage, logger, uuid4 } from '@sentry/utils';\nimport { BaseClient } from './baseclient.js';\nimport { createCheckInEnvelope } from './checkin.js';\nimport { DEBUG_BUILD } from './debug-build.js';\nimport { getCurrentHub } from './hub.js';\nimport { SessionFlusher } from './sessionflusher.js';\nimport { addTracingExtensions } from './tracing/hubextensions.js';\nimport { getDynamicSamplingContextFromClient } from './tracing/dynamicSamplingContext.js';\nimport './tracing/spanstatus.js';\n\n/**\n * The Sentry Server Runtime Client SDK.\n */\nclass ServerRuntimeClient\n\n extends BaseClient {\n\n  /**\n   * Creates a new Edge SDK instance.\n   * @param options Configuration options for this SDK.\n   */\n   constructor(options) {\n    // Server clients always support tracing\n    addTracingExtensions();\n\n    super(options);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   eventFromException(exception, hint) {\n    return resolvedSyncPromise(eventFromUnknownInput(getCurrentHub, this._options.stackParser, exception, hint));\n  }\n\n  /**\n   * @inheritDoc\n   */\n   eventFromMessage(\n    message,\n    // eslint-disable-next-line deprecation/deprecation\n    level = 'info',\n    hint,\n  ) {\n    return resolvedSyncPromise(\n      eventFromMessage(this._options.stackParser, message, level, hint, this._options.attachStacktrace),\n    );\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n   captureException(exception, hint, scope) {\n    // Check if the flag `autoSessionTracking` is enabled, and if `_sessionFlusher` exists because it is initialised only\n    // when the `requestHandler` middleware is used, and hence the expectation is to have SessionAggregates payload\n    // sent to the Server only when the `requestHandler` middleware is used\n    if (this._options.autoSessionTracking && this._sessionFlusher && scope) {\n      const requestSession = scope.getRequestSession();\n\n      // Necessary checks to ensure this is code block is executed only within a request\n      // Should override the status only if `requestSession.status` is `Ok`, which is its initial stage\n      if (requestSession && requestSession.status === 'ok') {\n        requestSession.status = 'errored';\n      }\n    }\n\n    return super.captureException(exception, hint, scope);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureEvent(event, hint, scope) {\n    // Check if the flag `autoSessionTracking` is enabled, and if `_sessionFlusher` exists because it is initialised only\n    // when the `requestHandler` middleware is used, and hence the expectation is to have SessionAggregates payload\n    // sent to the Server only when the `requestHandler` middleware is used\n    if (this._options.autoSessionTracking && this._sessionFlusher && scope) {\n      const eventType = event.type || 'exception';\n      const isException =\n        eventType === 'exception' && event.exception && event.exception.values && event.exception.values.length > 0;\n\n      // If the event is of type Exception, then a request session should be captured\n      if (isException) {\n        const requestSession = scope.getRequestSession();\n\n        // Ensure that this is happening within the bounds of a request, and make sure not to override\n        // Session Status if Errored / Crashed\n        if (requestSession && requestSession.status === 'ok') {\n          requestSession.status = 'errored';\n        }\n      }\n    }\n\n    return super.captureEvent(event, hint, scope);\n  }\n\n  /**\n   *\n   * @inheritdoc\n   */\n   close(timeout) {\n    if (this._sessionFlusher) {\n      this._sessionFlusher.close();\n    }\n    return super.close(timeout);\n  }\n\n  /** Method that initialises an instance of SessionFlusher on Client */\n   initSessionFlusher() {\n    const { release, environment } = this._options;\n    if (!release) {\n      DEBUG_BUILD && logger.warn('Cannot initialise an instance of SessionFlusher if no release is provided!');\n    } else {\n      this._sessionFlusher = new SessionFlusher(this, {\n        release,\n        environment,\n      });\n    }\n  }\n\n  /**\n   * Create a cron monitor check in and send it to Sentry.\n   *\n   * @param checkIn An object that describes a check in.\n   * @param upsertMonitorConfig An optional object that describes a monitor config. Use this if you want\n   * to create a monitor automatically when sending a check in.\n   */\n   captureCheckIn(checkIn, monitorConfig, scope) {\n    const id = checkIn.status !== 'in_progress' && checkIn.checkInId ? checkIn.checkInId : uuid4();\n    if (!this._isEnabled()) {\n      DEBUG_BUILD && logger.warn('SDK not enabled, will not capture checkin.');\n      return id;\n    }\n\n    const options = this.getOptions();\n    const { release, environment, tunnel } = options;\n\n    const serializedCheckIn = {\n      check_in_id: id,\n      monitor_slug: checkIn.monitorSlug,\n      status: checkIn.status,\n      release,\n      environment,\n    };\n\n    if (checkIn.status !== 'in_progress') {\n      serializedCheckIn.duration = checkIn.duration;\n    }\n\n    if (monitorConfig) {\n      serializedCheckIn.monitor_config = {\n        schedule: monitorConfig.schedule,\n        checkin_margin: monitorConfig.checkinMargin,\n        max_runtime: monitorConfig.maxRuntime,\n        timezone: monitorConfig.timezone,\n      };\n    }\n\n    const [dynamicSamplingContext, traceContext] = this._getTraceInfoFromScope(scope);\n    if (traceContext) {\n      serializedCheckIn.contexts = {\n        trace: traceContext,\n      };\n    }\n\n    const envelope = createCheckInEnvelope(\n      serializedCheckIn,\n      dynamicSamplingContext,\n      this.getSdkMetadata(),\n      tunnel,\n      this.getDsn(),\n    );\n\n    DEBUG_BUILD && logger.info('Sending checkin:', checkIn.monitorSlug, checkIn.status);\n    void this._sendEnvelope(envelope);\n    return id;\n  }\n\n  /**\n   * Method responsible for capturing/ending a request session by calling `incrementSessionStatusCount` to increment\n   * appropriate session aggregates bucket\n   */\n   _captureRequestSession() {\n    if (!this._sessionFlusher) {\n      DEBUG_BUILD && logger.warn('Discarded request mode session because autoSessionTracking option was disabled');\n    } else {\n      this._sessionFlusher.incrementSessionStatusCount();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   _prepareEvent(event, hint, scope) {\n    if (this._options.platform) {\n      event.platform = event.platform || this._options.platform;\n    }\n\n    if (this._options.runtime) {\n      event.contexts = {\n        ...event.contexts,\n        runtime: (event.contexts || {}).runtime || this._options.runtime,\n      };\n    }\n\n    if (this._options.serverName) {\n      event.server_name = event.server_name || this._options.serverName;\n    }\n\n    return super._prepareEvent(event, hint, scope);\n  }\n\n  /** Extract trace information from scope */\n   _getTraceInfoFromScope(\n    scope,\n  ) {\n    if (!scope) {\n      return [undefined, undefined];\n    }\n\n    const span = scope.getSpan();\n    if (span) {\n      const samplingContext = span.transaction ? span.transaction.getDynamicSamplingContext() : undefined;\n      return [samplingContext, span.getTraceContext()];\n    }\n\n    const { traceId, spanId, parentSpanId, dsc } = scope.getPropagationContext();\n    const traceContext = {\n      trace_id: traceId,\n      span_id: spanId,\n      parent_span_id: parentSpanId,\n    };\n    if (dsc) {\n      return [dsc, traceContext];\n    }\n\n    return [getDynamicSamplingContextFromClient(traceId, this, scope), traceContext];\n  }\n}\n\nexport { ServerRuntimeClient };\n//# sourceMappingURL=server-runtime-client.js.map\n",
  "import { logger, consoleSandbox } from '@sentry/utils';\nimport { DEBUG_BUILD } from './debug-build.js';\nimport { getCurrentHub } from './hub.js';\n\n/** A class object that can instantiate Client objects. */\n\n/**\n * Internal function to create a new SDK client instance. The client is\n * installed and then bound to the current scope.\n *\n * @param clientClass The client class to instantiate.\n * @param options Options to pass to the client.\n */\nfunction initAndBind(\n  clientClass,\n  options,\n) {\n  if (options.debug === true) {\n    if (DEBUG_BUILD) {\n      logger.enable();\n    } else {\n      // use `console.warn` rather than `logger.warn` since by non-debug bundles have all `logger.x` statements stripped\n      consoleSandbox(() => {\n        // eslint-disable-next-line no-console\n        console.warn('[Sentry] Cannot initialize SDK with `debug` option using a non-debug bundle.');\n      });\n    }\n  }\n  const hub = getCurrentHub();\n  const scope = hub.getScope();\n  scope.update(options.initialScope);\n\n  const client = new clientClass(options);\n  hub.bindClient(client);\n}\n\nexport { initAndBind };\n//# sourceMappingURL=sdk.js.map\n",
  "import { makePromiseBuffer, forEachEnvelopeItem, envelopeItemTypeToDataCategory, isRateLimited, resolvedSyncPromise, createEnvelope, SentryError, logger, serializeEnvelope, updateRateLimits } from '@sentry/utils';\nimport { DEBUG_BUILD } from '../debug-build.js';\n\nconst DEFAULT_TRANSPORT_BUFFER_SIZE = 30;\n\n/**\n * Creates an instance of a Sentry `Transport`\n *\n * @param options\n * @param makeRequest\n */\nfunction createTransport(\n  options,\n  makeRequest,\n  buffer = makePromiseBuffer(\n    options.bufferSize || DEFAULT_TRANSPORT_BUFFER_SIZE,\n  ),\n) {\n  let rateLimits = {};\n  const flush = (timeout) => buffer.drain(timeout);\n\n  function send(envelope) {\n    const filteredEnvelopeItems = [];\n\n    // Drop rate limited items from envelope\n    forEachEnvelopeItem(envelope, (item, type) => {\n      const envelopeItemDataCategory = envelopeItemTypeToDataCategory(type);\n      if (isRateLimited(rateLimits, envelopeItemDataCategory)) {\n        const event = getEventForEnvelopeItem(item, type);\n        options.recordDroppedEvent('ratelimit_backoff', envelopeItemDataCategory, event);\n      } else {\n        filteredEnvelopeItems.push(item);\n      }\n    });\n\n    // Skip sending if envelope is empty after filtering out rate limited events\n    if (filteredEnvelopeItems.length === 0) {\n      return resolvedSyncPromise();\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const filteredEnvelope = createEnvelope(envelope[0], filteredEnvelopeItems );\n\n    // Creates client report for each item in an envelope\n    const recordEnvelopeLoss = (reason) => {\n      forEachEnvelopeItem(filteredEnvelope, (item, type) => {\n        const event = getEventForEnvelopeItem(item, type);\n        options.recordDroppedEvent(reason, envelopeItemTypeToDataCategory(type), event);\n      });\n    };\n\n    const requestTask = () =>\n      makeRequest({ body: serializeEnvelope(filteredEnvelope, options.textEncoder) }).then(\n        response => {\n          // We don't want to throw on NOK responses, but we want to at least log them\n          if (response.statusCode !== undefined && (response.statusCode < 200 || response.statusCode >= 300)) {\n            DEBUG_BUILD && logger.warn(`Sentry responded with status code ${response.statusCode} to sent event.`);\n          }\n\n          rateLimits = updateRateLimits(rateLimits, response);\n          return response;\n        },\n        error => {\n          recordEnvelopeLoss('network_error');\n          throw error;\n        },\n      );\n\n    return buffer.add(requestTask).then(\n      result => result,\n      error => {\n        if (error instanceof SentryError) {\n          DEBUG_BUILD && logger.error('Skipped sending event because buffer is full.');\n          recordEnvelopeLoss('queue_overflow');\n          return resolvedSyncPromise();\n        } else {\n          throw error;\n        }\n      },\n    );\n  }\n\n  // We use this to identifify if the transport is the base transport\n  // TODO (v8): Remove this again as we'll no longer need it\n  send.__sentry__baseTransport__ = true;\n\n  return {\n    send,\n    flush,\n  };\n}\n\nfunction getEventForEnvelopeItem(item, type) {\n  if (type !== 'event' && type !== 'transaction') {\n    return undefined;\n  }\n\n  return Array.isArray(item) ? (item )[1] : undefined;\n}\n\nexport { DEFAULT_TRANSPORT_BUFFER_SIZE, createTransport };\n//# sourceMappingURL=base.js.map\n",
  "const SDK_VERSION = '7.84.0';\n\nexport { SDK_VERSION };\n//# sourceMappingURL=version.js.map\n",
  "import { getOriginalFunction } from '@sentry/utils';\n\nlet originalFunctionToString;\n\n/** Patch toString calls to return proper name for wrapped functions */\nclass FunctionToString  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'FunctionToString';}\n\n  /**\n   * @inheritDoc\n   */\n\n   constructor() {\n    this.name = FunctionToString.id;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce() {\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    originalFunctionToString = Function.prototype.toString;\n\n    // intrinsics (like Function.prototype) might be immutable in some environments\n    // e.g. Node with --frozen-intrinsics, XS (an embedded JavaScript engine) or SES (a JavaScript proposal)\n    try {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      Function.prototype.toString = function ( ...args) {\n        const context = getOriginalFunction(this) || this;\n        return originalFunctionToString.apply(context, args);\n      };\n    } catch (e) {\n      // ignore errors here, just don't patch this\n    }\n  }\n} FunctionToString.__initStatic();\n\nexport { FunctionToString };\n//# sourceMappingURL=functiontostring.js.map\n",
  "import { logger, getEventDescription, stringMatchesSomePattern } from '@sentry/utils';\nimport { DEBUG_BUILD } from '../debug-build.js';\n\n// \"Script error.\" is hard coded into browsers for errors that it can't read.\n// this is the result of a script being pulled in from an external domain and CORS.\nconst DEFAULT_IGNORE_ERRORS = [/^Script error\\.?$/, /^Javascript error: Script error\\.? on line 0$/];\n\nconst DEFAULT_IGNORE_TRANSACTIONS = [\n  /^.*\\/healthcheck$/,\n  /^.*\\/healthy$/,\n  /^.*\\/live$/,\n  /^.*\\/ready$/,\n  /^.*\\/heartbeat$/,\n  /^.*\\/health$/,\n  /^.*\\/healthz$/,\n];\n\n/** Options for the InboundFilters integration */\n\n/** Inbound filters configurable by the user */\nclass InboundFilters  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'InboundFilters';}\n\n  /**\n   * @inheritDoc\n   */\n\n   constructor(options = {}) {\n    this.name = InboundFilters.id;\n    this._options = options;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce(_addGlobaleventProcessor, _getCurrentHub) {\n    // noop\n  }\n\n  /** @inheritDoc */\n   processEvent(event, _eventHint, client) {\n    const clientOptions = client.getOptions();\n    const options = _mergeOptions(this._options, clientOptions);\n    return _shouldDropEvent(event, options) ? null : event;\n  }\n} InboundFilters.__initStatic();\n\n/** JSDoc */\nfunction _mergeOptions(\n  internalOptions = {},\n  clientOptions = {},\n) {\n  return {\n    allowUrls: [...(internalOptions.allowUrls || []), ...(clientOptions.allowUrls || [])],\n    denyUrls: [...(internalOptions.denyUrls || []), ...(clientOptions.denyUrls || [])],\n    ignoreErrors: [\n      ...(internalOptions.ignoreErrors || []),\n      ...(clientOptions.ignoreErrors || []),\n      ...(internalOptions.disableErrorDefaults ? [] : DEFAULT_IGNORE_ERRORS),\n    ],\n    ignoreTransactions: [\n      ...(internalOptions.ignoreTransactions || []),\n      ...(clientOptions.ignoreTransactions || []),\n      ...(internalOptions.disableTransactionDefaults ? [] : DEFAULT_IGNORE_TRANSACTIONS),\n    ],\n    ignoreInternal: internalOptions.ignoreInternal !== undefined ? internalOptions.ignoreInternal : true,\n  };\n}\n\n/** JSDoc */\nfunction _shouldDropEvent(event, options) {\n  if (options.ignoreInternal && _isSentryError(event)) {\n    DEBUG_BUILD &&\n      logger.warn(`Event dropped due to being internal Sentry Error.\\nEvent: ${getEventDescription(event)}`);\n    return true;\n  }\n  if (_isIgnoredError(event, options.ignoreErrors)) {\n    DEBUG_BUILD &&\n      logger.warn(\n        `Event dropped due to being matched by \\`ignoreErrors\\` option.\\nEvent: ${getEventDescription(event)}`,\n      );\n    return true;\n  }\n  if (_isIgnoredTransaction(event, options.ignoreTransactions)) {\n    DEBUG_BUILD &&\n      logger.warn(\n        `Event dropped due to being matched by \\`ignoreTransactions\\` option.\\nEvent: ${getEventDescription(event)}`,\n      );\n    return true;\n  }\n  if (_isDeniedUrl(event, options.denyUrls)) {\n    DEBUG_BUILD &&\n      logger.warn(\n        `Event dropped due to being matched by \\`denyUrls\\` option.\\nEvent: ${getEventDescription(\n          event,\n        )}.\\nUrl: ${_getEventFilterUrl(event)}`,\n      );\n    return true;\n  }\n  if (!_isAllowedUrl(event, options.allowUrls)) {\n    DEBUG_BUILD &&\n      logger.warn(\n        `Event dropped due to not being matched by \\`allowUrls\\` option.\\nEvent: ${getEventDescription(\n          event,\n        )}.\\nUrl: ${_getEventFilterUrl(event)}`,\n      );\n    return true;\n  }\n  return false;\n}\n\nfunction _isIgnoredError(event, ignoreErrors) {\n  // If event.type, this is not an error\n  if (event.type || !ignoreErrors || !ignoreErrors.length) {\n    return false;\n  }\n\n  return _getPossibleEventMessages(event).some(message => stringMatchesSomePattern(message, ignoreErrors));\n}\n\nfunction _isIgnoredTransaction(event, ignoreTransactions) {\n  if (event.type !== 'transaction' || !ignoreTransactions || !ignoreTransactions.length) {\n    return false;\n  }\n\n  const name = event.transaction;\n  return name ? stringMatchesSomePattern(name, ignoreTransactions) : false;\n}\n\nfunction _isDeniedUrl(event, denyUrls) {\n  // TODO: Use Glob instead?\n  if (!denyUrls || !denyUrls.length) {\n    return false;\n  }\n  const url = _getEventFilterUrl(event);\n  return !url ? false : stringMatchesSomePattern(url, denyUrls);\n}\n\nfunction _isAllowedUrl(event, allowUrls) {\n  // TODO: Use Glob instead?\n  if (!allowUrls || !allowUrls.length) {\n    return true;\n  }\n  const url = _getEventFilterUrl(event);\n  return !url ? true : stringMatchesSomePattern(url, allowUrls);\n}\n\nfunction _getPossibleEventMessages(event) {\n  const possibleMessages = [];\n\n  if (event.message) {\n    possibleMessages.push(event.message);\n  }\n\n  let lastException;\n  try {\n    // @ts-expect-error Try catching to save bundle size\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    lastException = event.exception.values[event.exception.values.length - 1];\n  } catch (e) {\n    // try catching to save bundle size checking existence of variables\n  }\n\n  if (lastException) {\n    if (lastException.value) {\n      possibleMessages.push(lastException.value);\n      if (lastException.type) {\n        possibleMessages.push(`${lastException.type}: ${lastException.value}`);\n      }\n    }\n  }\n\n  if (DEBUG_BUILD && possibleMessages.length === 0) {\n    logger.error(`Could not extract message for event ${getEventDescription(event)}`);\n  }\n\n  return possibleMessages;\n}\n\nfunction _isSentryError(event) {\n  try {\n    // @ts-expect-error can't be a sentry error if undefined\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    return event.exception.values[0].type === 'SentryError';\n  } catch (e) {\n    // ignore\n  }\n  return false;\n}\n\nfunction _getLastValidUrl(frames = []) {\n  for (let i = frames.length - 1; i >= 0; i--) {\n    const frame = frames[i];\n\n    if (frame && frame.filename !== '<anonymous>' && frame.filename !== '[native code]') {\n      return frame.filename || null;\n    }\n  }\n\n  return null;\n}\n\nfunction _getEventFilterUrl(event) {\n  try {\n    let frames;\n    try {\n      // @ts-expect-error we only care about frames if the whole thing here is defined\n      frames = event.exception.values[0].stacktrace.frames;\n    } catch (e) {\n      // ignore\n    }\n    return frames ? _getLastValidUrl(frames) : null;\n  } catch (oO) {\n    DEBUG_BUILD && logger.error(`Cannot extract url for event ${getEventDescription(event)}`);\n    return null;\n  }\n}\n\nexport { InboundFilters, _mergeOptions, _shouldDropEvent };\n//# sourceMappingURL=inboundfilters.js.map\n",
  "import { applyAggregateErrorsToEvent, exceptionFromError } from '@sentry/utils';\n\nconst DEFAULT_KEY = 'cause';\nconst DEFAULT_LIMIT = 5;\n\n/** Adds SDK info to an event. */\nclass LinkedErrors  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'LinkedErrors';}\n\n  /**\n   * @inheritDoc\n   */\n\n  /**\n   * @inheritDoc\n   */\n\n  /**\n   * @inheritDoc\n   */\n\n  /**\n   * @inheritDoc\n   */\n   constructor(options = {}) {\n    this._key = options.key || DEFAULT_KEY;\n    this._limit = options.limit || DEFAULT_LIMIT;\n    this.name = LinkedErrors.id;\n  }\n\n  /** @inheritdoc */\n   setupOnce() {\n    // noop\n  }\n\n  /**\n   * @inheritDoc\n   */\n   preprocessEvent(event, hint, client) {\n    const options = client.getOptions();\n\n    applyAggregateErrorsToEvent(\n      exceptionFromError,\n      options.stackParser,\n      options.maxValueLength,\n      this._key,\n      this._limit,\n      event,\n      hint,\n    );\n  }\n} LinkedErrors.__initStatic();\n\nexport { LinkedErrors };\n//# sourceMappingURL=linkederrors.js.map\n",
  "/**\n * Checks whether given url points to Sentry server\n * @param url url to verify\n */\nfunction isSentryRequestUrl(url, hub) {\n  const client = hub.getClient();\n  const dsn = client && client.getDsn();\n  const tunnel = client && client.getOptions().tunnel;\n\n  return checkDsn(url, dsn) || checkTunnel(url, tunnel);\n}\n\nfunction checkTunnel(url, tunnel) {\n  if (!tunnel) {\n    return false;\n  }\n\n  return removeTrailingSlash(url) === removeTrailingSlash(tunnel);\n}\n\nfunction checkDsn(url, dsn) {\n  return dsn ? url.includes(dsn.host) : false;\n}\n\nfunction removeTrailingSlash(str) {\n  return str[str.length - 1] === '/' ? str.slice(0, -1) : str;\n}\n\nexport { isSentryRequestUrl };\n//# sourceMappingURL=isSentryRequestUrl.js.map\n",
  "import { addRequestDataToEvent, extractPathForTransaction } from '@sentry/utils';\n\nconst DEFAULT_OPTIONS = {\n  include: {\n    cookies: true,\n    data: true,\n    headers: true,\n    ip: false,\n    query_string: true,\n    url: true,\n    user: {\n      id: true,\n      username: true,\n      email: true,\n    },\n  },\n  transactionNamingScheme: 'methodPath',\n};\n\n/** Add data about a request to an event. Primarily for use in Node-based SDKs, but included in `@sentry/integrations`\n * so it can be used in cross-platform SDKs like `@sentry/nextjs`. */\nclass RequestData  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'RequestData';}\n\n  /**\n   * @inheritDoc\n   */\n\n  /**\n   * Function for adding request data to event. Defaults to `addRequestDataToEvent` from `@sentry/node` for now, but\n   * left as a property so this integration can be moved to `@sentry/core` as a base class in case we decide to use\n   * something similar in browser-based SDKs in the future.\n   */\n\n  /**\n   * @inheritDoc\n   */\n   constructor(options = {}) {\n    this.name = RequestData.id;\n    this._addRequestData = addRequestDataToEvent;\n    this._options = {\n      ...DEFAULT_OPTIONS,\n      ...options,\n      include: {\n        // @ts-expect-error It's mad because `method` isn't a known `include` key. (It's only here and not set by default in\n        // `addRequestDataToEvent` for legacy reasons. TODO (v8): Change that.)\n        method: true,\n        ...DEFAULT_OPTIONS.include,\n        ...options.include,\n        user:\n          options.include && typeof options.include.user === 'boolean'\n            ? options.include.user\n            : {\n                ...DEFAULT_OPTIONS.include.user,\n                // Unclear why TS still thinks `options.include.user` could be a boolean at this point\n                ...((options.include || {}).user ),\n              },\n      },\n    };\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce(addGlobalEventProcessor, getCurrentHub) {\n    // Note: In the long run, most of the logic here should probably move into the request data utility functions. For\n    // the moment it lives here, though, until https://github.com/getsentry/sentry-javascript/issues/5718 is addressed.\n    // (TL;DR: Those functions touch many parts of the repo in many different ways, and need to be clened up. Once\n    // that's happened, it will be easier to add this logic in without worrying about unexpected side effects.)\n    const { transactionNamingScheme } = this._options;\n\n    addGlobalEventProcessor(event => {\n      const hub = getCurrentHub();\n      const self = hub.getIntegration(RequestData);\n\n      const { sdkProcessingMetadata = {} } = event;\n      const req = sdkProcessingMetadata.request;\n\n      // If the globally installed instance of this integration isn't associated with the current hub, `self` will be\n      // undefined\n      if (!self || !req) {\n        return event;\n      }\n\n      // The Express request handler takes a similar `include` option to that which can be passed to this integration.\n      // If passed there, we store it in `sdkProcessingMetadata`. TODO(v8): Force express and GCP people to use this\n      // integration, so that all of this passing and conversion isn't necessary\n      const addRequestDataOptions =\n        sdkProcessingMetadata.requestDataOptionsFromExpressHandler ||\n        sdkProcessingMetadata.requestDataOptionsFromGCPWrapper ||\n        convertReqDataIntegrationOptsToAddReqDataOpts(this._options);\n\n      const processedEvent = this._addRequestData(event, req, addRequestDataOptions);\n\n      // Transaction events already have the right `transaction` value\n      if (event.type === 'transaction' || transactionNamingScheme === 'handler') {\n        return processedEvent;\n      }\n\n      // In all other cases, use the request's associated transaction (if any) to overwrite the event's `transaction`\n      // value with a high-quality one\n      const reqWithTransaction = req ;\n      const transaction = reqWithTransaction._sentryTransaction;\n      if (transaction) {\n        // TODO (v8): Remove the nextjs check and just base it on `transactionNamingScheme` for all SDKs. (We have to\n        // keep it the way it is for the moment, because changing the names of transactions in Sentry has the potential\n        // to break things like alert rules.)\n        const shouldIncludeMethodInTransactionName =\n          getSDKName(hub) === 'sentry.javascript.nextjs'\n            ? transaction.name.startsWith('/api')\n            : transactionNamingScheme !== 'path';\n\n        const [transactionValue] = extractPathForTransaction(req, {\n          path: true,\n          method: shouldIncludeMethodInTransactionName,\n          customRoute: transaction.name,\n        });\n\n        processedEvent.transaction = transactionValue;\n      }\n\n      return processedEvent;\n    });\n  }\n} RequestData.__initStatic();\n\n/** Convert this integration's options to match what `addRequestDataToEvent` expects */\n/** TODO: Can possibly be deleted once https://github.com/getsentry/sentry-javascript/issues/5718 is fixed */\nfunction convertReqDataIntegrationOptsToAddReqDataOpts(\n  integrationOptions,\n) {\n  const {\n    transactionNamingScheme,\n    include: { ip, user, ...requestOptions },\n  } = integrationOptions;\n\n  const requestIncludeKeys = [];\n  for (const [key, value] of Object.entries(requestOptions)) {\n    if (value) {\n      requestIncludeKeys.push(key);\n    }\n  }\n\n  let addReqDataUserOpt;\n  if (user === undefined) {\n    addReqDataUserOpt = true;\n  } else if (typeof user === 'boolean') {\n    addReqDataUserOpt = user;\n  } else {\n    const userIncludeKeys = [];\n    for (const [key, value] of Object.entries(user)) {\n      if (value) {\n        userIncludeKeys.push(key);\n      }\n    }\n    addReqDataUserOpt = userIncludeKeys;\n  }\n\n  return {\n    include: {\n      ip,\n      user: addReqDataUserOpt,\n      request: requestIncludeKeys.length !== 0 ? requestIncludeKeys : undefined,\n      transaction: transactionNamingScheme,\n    },\n  };\n}\n\nfunction getSDKName(hub) {\n  try {\n    // For a long chain like this, it's fewer bytes to combine a try-catch with assuming everything is there than to\n    // write out a long chain of `a && a.b && a.b.c && ...`\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    return hub.getClient().getOptions()._metadata.sdk.name;\n  } catch (err) {\n    // In theory we should never get here\n    return undefined;\n  }\n}\n\nexport { RequestData };\n//# sourceMappingURL=requestdata.js.map\n",
  "/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nconst DEBUG_BUILD = (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__);\n\nexport { DEBUG_BUILD };\n//# sourceMappingURL=debug-build.js.map\n",
  "import { _optionalChain } from '@sentry/utils';\n\n/**\n * Check if Sentry auto-instrumentation should be disabled.\n *\n * @param getCurrentHub A method to fetch the current hub\n * @returns boolean\n */\nfunction shouldDisableAutoInstrumentation(getCurrentHub) {\n  const clientOptions = _optionalChain([getCurrentHub, 'call', _ => _(), 'access', _2 => _2.getClient, 'call', _3 => _3(), 'optionalAccess', _4 => _4.getOptions, 'call', _5 => _5()]);\n  const instrumenter = _optionalChain([clientOptions, 'optionalAccess', _6 => _6.instrumenter]) || 'sentry';\n\n  return instrumenter !== 'sentry';\n}\n\nexport { shouldDisableAutoInstrumentation };\n//# sourceMappingURL=node-utils.js.map\n",
  "import { _optionalChain } from '@sentry/utils';\nimport { logger, getNumberOfUrlSegments, stripUrlQueryAndFragment, extractPathForTransaction, isRegExp, GLOBAL_OBJ } from '@sentry/utils';\nimport { DEBUG_BUILD } from '../../common/debug-build.js';\nimport { shouldDisableAutoInstrumentation } from './utils/node-utils.js';\n\n/**\n * Express integration\n *\n * Provides an request and error handler for Express framework as well as tracing capabilities\n */\nclass Express  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'Express';}\n\n  /**\n   * @inheritDoc\n   */\n\n  /**\n   * Express App instance\n   */\n\n  /**\n   * @inheritDoc\n   */\n   constructor(options = {}) {\n    this.name = Express.id;\n    this._router = options.router || options.app;\n    this._methods = (Array.isArray(options.methods) ? options.methods : []).concat('use');\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce(_, getCurrentHub) {\n    if (!this._router) {\n      DEBUG_BUILD && logger.error('ExpressIntegration is missing an Express instance');\n      return;\n    }\n\n    if (shouldDisableAutoInstrumentation(getCurrentHub)) {\n      DEBUG_BUILD && logger.log('Express Integration is skipped because of instrumenter configuration.');\n      return;\n    }\n\n    instrumentMiddlewares(this._router, this._methods);\n    instrumentRouter(this._router );\n  }\n}Express.__initStatic();\n\n/**\n * Wraps original middleware function in a tracing call, which stores the info about the call as a span,\n * and finishes it once the middleware is done invoking.\n *\n * Express middlewares have 3 various forms, thus we have to take care of all of them:\n * // sync\n * app.use(function (req, res) { ... })\n * // async\n * app.use(function (req, res, next) { ... })\n * // error handler\n * app.use(function (err, req, res, next) { ... })\n *\n * They all internally delegate to the `router[method]` of the given application instance.\n */\n// eslint-disable-next-line @typescript-eslint/ban-types, @typescript-eslint/no-explicit-any\nfunction wrap(fn, method) {\n  const arity = fn.length;\n\n  switch (arity) {\n    case 2: {\n      return function ( req, res) {\n        const transaction = res.__sentry_transaction;\n        if (transaction) {\n          const span = transaction.startChild({\n            description: fn.name,\n            op: `middleware.express.${method}`,\n            origin: 'auto.middleware.express',\n          });\n          res.once('finish', () => {\n            span.finish();\n          });\n        }\n        return fn.call(this, req, res);\n      };\n    }\n    case 3: {\n      return function (\n\n        req,\n        res,\n        next,\n      ) {\n        const transaction = res.__sentry_transaction;\n        const span = _optionalChain([transaction, 'optionalAccess', _2 => _2.startChild, 'call', _3 => _3({\n          description: fn.name,\n          op: `middleware.express.${method}`,\n          origin: 'auto.middleware.express',\n        })]);\n        fn.call(this, req, res, function ( ...args) {\n          _optionalChain([span, 'optionalAccess', _4 => _4.finish, 'call', _5 => _5()]);\n          next.call(this, ...args);\n        });\n      };\n    }\n    case 4: {\n      return function (\n\n        err,\n        req,\n        res,\n        next,\n      ) {\n        const transaction = res.__sentry_transaction;\n        const span = _optionalChain([transaction, 'optionalAccess', _6 => _6.startChild, 'call', _7 => _7({\n          description: fn.name,\n          op: `middleware.express.${method}`,\n          origin: 'auto.middleware.express',\n        })]);\n        fn.call(this, err, req, res, function ( ...args) {\n          _optionalChain([span, 'optionalAccess', _8 => _8.finish, 'call', _9 => _9()]);\n          next.call(this, ...args);\n        });\n      };\n    }\n    default: {\n      throw new Error(`Express middleware takes 2-4 arguments. Got: ${arity}`);\n    }\n  }\n}\n\n/**\n * Takes all the function arguments passed to the original `app` or `router` method, eg. `app.use` or `router.use`\n * and wraps every function, as well as array of functions with a call to our `wrap` method.\n * We have to take care of the arrays as well as iterate over all of the arguments,\n * as `app.use` can accept middlewares in few various forms.\n *\n * app.use([<path>], <fn>)\n * app.use([<path>], <fn>, ...<fn>)\n * app.use([<path>], ...<fn>[])\n */\nfunction wrapMiddlewareArgs(args, method) {\n  return args.map((arg) => {\n    if (typeof arg === 'function') {\n      return wrap(arg, method);\n    }\n\n    if (Array.isArray(arg)) {\n      return arg.map((a) => {\n        if (typeof a === 'function') {\n          return wrap(a, method);\n        }\n        return a;\n      });\n    }\n\n    return arg;\n  });\n}\n\n/**\n * Patches original router to utilize our tracing functionality\n */\nfunction patchMiddleware(router, method) {\n  const originalCallback = router[method];\n\n  router[method] = function (...args) {\n    return originalCallback.call(this, ...wrapMiddlewareArgs(args, method));\n  };\n\n  return router;\n}\n\n/**\n * Patches original router methods\n */\nfunction instrumentMiddlewares(router, methods = []) {\n  methods.forEach((method) => patchMiddleware(router, method));\n}\n\n/**\n * Patches the prototype of Express.Router to accumulate the resolved route\n * if a layer instance's `match` function was called and it returned a successful match.\n *\n * @see https://github.com/expressjs/express/blob/master/lib/router/index.js\n *\n * @param appOrRouter the router instance which can either be an app (i.e. top-level) or a (nested) router.\n */\nfunction instrumentRouter(appOrRouter) {\n  // This is how we can distinguish between app and routers\n  const isApp = 'settings' in appOrRouter;\n\n  // In case the app's top-level router hasn't been initialized yet, we have to do it now\n  if (isApp && appOrRouter._router === undefined && appOrRouter.lazyrouter) {\n    appOrRouter.lazyrouter();\n  }\n\n  const router = isApp ? appOrRouter._router : appOrRouter;\n\n  if (!router) {\n    /*\n    If we end up here, this means likely that this integration is used with Express 3 or Express 5.\n    For now, we don't support these versions (3 is very old and 5 is still in beta). To support Express 5,\n    we'd need to make more changes to the routing instrumentation because the router is no longer part of\n    the Express core package but maintained in its own package. The new router has different function\n    signatures and works slightly differently, demanding more changes than just taking the router from\n    `app.router` instead of `app._router`.\n    @see https://github.com/pillarjs/router\n\n    TODO: Proper Express 5 support\n    */\n    DEBUG_BUILD && logger.debug('Cannot instrument router for URL Parameterization (did not find a valid router).');\n    DEBUG_BUILD && logger.debug('Routing instrumentation is currently only supported in Express 4.');\n    return;\n  }\n\n  const routerProto = Object.getPrototypeOf(router) ;\n\n  const originalProcessParams = routerProto.process_params;\n  routerProto.process_params = function process_params(\n    layer,\n    called,\n    req,\n    res,\n    done,\n  ) {\n    // Base case: We're in the first part of the URL (thus we start with the root '/')\n    if (!req._reconstructedRoute) {\n      req._reconstructedRoute = '';\n    }\n\n    // If the layer's partial route has params, is a regex or an array, the route is stored in layer.route.\n    const { layerRoutePath, isRegex, isArray, numExtraSegments } = getLayerRoutePathInfo(layer);\n\n    if (layerRoutePath || isRegex || isArray) {\n      req._hasParameters = true;\n    }\n\n    // Otherwise, the hardcoded path (i.e. a partial route without params) is stored in layer.path\n    let partialRoute;\n\n    if (layerRoutePath) {\n      partialRoute = layerRoutePath;\n    } else {\n      /**\n       * prevent duplicate segment in _reconstructedRoute param if router match multiple routes before final path\n       * example:\n       * original url: /api/v1/1234\n       * prevent: /api/api/v1/:userId\n       * router structure\n       * /api -> middleware\n       * /api/v1 -> middleware\n       * /1234 -> endpoint with param :userId\n       * final _reconstructedRoute is /api/v1/:userId\n       */\n      partialRoute = preventDuplicateSegments(req.originalUrl, req._reconstructedRoute, layer.path) || '';\n    }\n\n    // Normalize the partial route so that it doesn't contain leading or trailing slashes\n    // and exclude empty or '*' wildcard routes.\n    // The exclusion of '*' routes is our best effort to not \"pollute\" the transaction name\n    // with interim handlers (e.g. ones that check authentication or do other middleware stuff).\n    // We want to end up with the parameterized URL of the incoming request without any extraneous path segments.\n    const finalPartialRoute = partialRoute\n      .split('/')\n      .filter(segment => segment.length > 0 && (isRegex || isArray || !segment.includes('*')))\n      .join('/');\n\n    // If we found a valid partial URL, we append it to the reconstructed route\n    if (finalPartialRoute && finalPartialRoute.length > 0) {\n      // If the partial route is from a regex route, we append a '/' to close the regex\n      req._reconstructedRoute += `/${finalPartialRoute}${isRegex ? '/' : ''}`;\n    }\n\n    // Now we check if we are in the \"last\" part of the route. We determine this by comparing the\n    // number of URL segments from the original URL to that of our reconstructed parameterized URL.\n    // If we've reached our final destination, we update the transaction name.\n    const urlLength = getNumberOfUrlSegments(stripUrlQueryAndFragment(req.originalUrl || '')) + numExtraSegments;\n    const routeLength = getNumberOfUrlSegments(req._reconstructedRoute);\n\n    if (urlLength === routeLength) {\n      if (!req._hasParameters) {\n        if (req._reconstructedRoute !== req.originalUrl) {\n          req._reconstructedRoute = req.originalUrl ? stripUrlQueryAndFragment(req.originalUrl) : req.originalUrl;\n        }\n      }\n\n      const transaction = res.__sentry_transaction;\n      if (transaction && transaction.metadata.source !== 'custom') {\n        // If the request URL is '/' or empty, the reconstructed route will be empty.\n        // Therefore, we fall back to setting the final route to '/' in this case.\n        const finalRoute = req._reconstructedRoute || '/';\n\n        transaction.setName(...extractPathForTransaction(req, { path: true, method: true, customRoute: finalRoute }));\n      }\n    }\n\n    return originalProcessParams.call(this, layer, called, req, res, done);\n  };\n}\n\n/**\n * Recreate layer.route.path from layer.regexp and layer.keys.\n * Works until express.js used package path-to-regexp@0.1.7\n * or until layer.keys contain offset attribute\n *\n * @param layer the layer to extract the stringified route from\n *\n * @returns string in layer.route.path structure 'router/:pathParam' or undefined\n */\nconst extractOriginalRoute = (\n  path,\n  regexp,\n  keys,\n) => {\n  if (!path || !regexp || !keys || Object.keys(keys).length === 0 || !_optionalChain([keys, 'access', _10 => _10[0], 'optionalAccess', _11 => _11.offset])) {\n    return undefined;\n  }\n\n  const orderedKeys = keys.sort((a, b) => a.offset - b.offset);\n\n  // add d flag for getting indices from regexp result\n  const pathRegex = new RegExp(regexp, `${regexp.flags}d`);\n  /**\n   * use custom type cause of TS error with missing indices in RegExpExecArray\n   */\n  const execResult = pathRegex.exec(path) ;\n\n  if (!execResult || !execResult.indices) {\n    return undefined;\n  }\n  /**\n   * remove first match from regex cause contain whole layer.path\n   */\n  const [, ...paramIndices] = execResult.indices;\n\n  if (paramIndices.length !== orderedKeys.length) {\n    return undefined;\n  }\n  let resultPath = path;\n  let indexShift = 0;\n\n  /**\n   * iterate param matches from regexp.exec\n   */\n  paramIndices.forEach((item, index) => {\n    /** check if offsets is define because in some cases regex d flag returns undefined */\n    if (item) {\n      const [startOffset, endOffset] = item;\n      /**\n       * isolate part before param\n       */\n      const substr1 = resultPath.substring(0, startOffset - indexShift);\n      /**\n       * define paramName as replacement in format :pathParam\n       */\n      const replacement = `:${orderedKeys[index].name}`;\n\n      /**\n       * isolate part after param\n       */\n      const substr2 = resultPath.substring(endOffset - indexShift);\n\n      /**\n       * recreate original path but with param replacement\n       */\n      resultPath = substr1 + replacement + substr2;\n\n      /**\n       * calculate new index shift after resultPath was modified\n       */\n      indexShift = indexShift + (endOffset - startOffset - replacement.length);\n    }\n  });\n\n  return resultPath;\n};\n\n/**\n * Extracts and stringifies the layer's route which can either be a string with parameters (`users/:id`),\n * a RegEx (`/test/`) or an array of strings and regexes (`['/path1', /\\/path[2-5]/, /path/:id]`). Additionally\n * returns extra information about the route, such as if the route is defined as regex or as an array.\n *\n * @param layer the layer to extract the stringified route from\n *\n * @returns an object containing the stringified route, a flag determining if the route was a regex\n *          and the number of extra segments to the matched path that are additionally in the route,\n *          if the route was an array (defaults to 0).\n */\nfunction getLayerRoutePathInfo(layer) {\n  let lrp = _optionalChain([layer, 'access', _12 => _12.route, 'optionalAccess', _13 => _13.path]);\n\n  const isRegex = isRegExp(lrp);\n  const isArray = Array.isArray(lrp);\n\n  if (!lrp) {\n    // parse node.js major version\n    // Next.js will complain if we directly use `proces.versions` here because of edge runtime.\n    const [major] = (GLOBAL_OBJ ).process.versions.node.split('.').map(Number);\n\n    // allow call extractOriginalRoute only if node version support Regex d flag, node 16+\n    if (major >= 16) {\n      /**\n       * If lrp does not exist try to recreate original layer path from route regexp\n       */\n      lrp = extractOriginalRoute(layer.path, layer.regexp, layer.keys);\n    }\n  }\n\n  if (!lrp) {\n    return { isRegex, isArray, numExtraSegments: 0 };\n  }\n\n  const numExtraSegments = isArray\n    ? Math.max(getNumberOfArrayUrlSegments(lrp ) - getNumberOfUrlSegments(layer.path || ''), 0)\n    : 0;\n\n  const layerRoutePath = getLayerRoutePathString(isArray, lrp);\n\n  return { layerRoutePath, isRegex, isArray, numExtraSegments };\n}\n\n/**\n * Returns the number of URL segments in an array of routes\n *\n * Example: ['/api/test', /\\/api\\/post[0-9]/, '/users/:id/details`] -> 7\n */\nfunction getNumberOfArrayUrlSegments(routesArray) {\n  return routesArray.reduce((accNumSegments, currentRoute) => {\n    // array members can be a RegEx -> convert them toString\n    return accNumSegments + getNumberOfUrlSegments(currentRoute.toString());\n  }, 0);\n}\n\n/**\n * Extracts and returns the stringified version of the layers route path\n * Handles route arrays (by joining the paths together) as well as RegExp and normal\n * string values (in the latter case the toString conversion is technically unnecessary but\n * it doesn't hurt us either).\n */\nfunction getLayerRoutePathString(isArray, lrp) {\n  if (isArray) {\n    return (lrp ).map(r => r.toString()).join(',');\n  }\n  return lrp && lrp.toString();\n}\n\n/**\n * remove duplicate segment contain in layerPath against reconstructedRoute,\n * and return only unique segment that can be added into reconstructedRoute\n */\nfunction preventDuplicateSegments(\n  originalUrl,\n  reconstructedRoute,\n  layerPath,\n) {\n  // filter query params\n  const normalizeURL = stripUrlQueryAndFragment(originalUrl || '');\n  const originalUrlSplit = _optionalChain([normalizeURL, 'optionalAccess', _14 => _14.split, 'call', _15 => _15('/'), 'access', _16 => _16.filter, 'call', _17 => _17(v => !!v)]);\n  let tempCounter = 0;\n  const currentOffset = _optionalChain([reconstructedRoute, 'optionalAccess', _18 => _18.split, 'call', _19 => _19('/'), 'access', _20 => _20.filter, 'call', _21 => _21(v => !!v), 'access', _22 => _22.length]) || 0;\n  const result = _optionalChain([layerPath\n, 'optionalAccess', _23 => _23.split, 'call', _24 => _24('/')\n, 'access', _25 => _25.filter, 'call', _26 => _26(segment => {\n      if (_optionalChain([originalUrlSplit, 'optionalAccess', _27 => _27[currentOffset + tempCounter]]) === segment) {\n        tempCounter += 1;\n        return true;\n      }\n      return false;\n    })\n, 'access', _28 => _28.join, 'call', _29 => _29('/')]);\n  return result;\n}\n\nexport { Express, extractOriginalRoute, preventDuplicateSegments };\n//# sourceMappingURL=express.js.map\n",
  "import { _optionalChain } from '@sentry/utils';\nimport { loadModule, logger, fill, isThenable } from '@sentry/utils';\nimport { DEBUG_BUILD } from '../../common/debug-build.js';\nimport { shouldDisableAutoInstrumentation } from './utils/node-utils.js';\n\n/** Tracing integration for node-postgres package */\nclass Postgres  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'Postgres';}\n\n  /**\n   * @inheritDoc\n   */\n\n   constructor(options = {}) {\n    this.name = Postgres.id;\n    this._usePgNative = !!options.usePgNative;\n    this._module = options.module;\n  }\n\n  /** @inheritdoc */\n   loadDependency() {\n    return (this._module = this._module || loadModule('pg'));\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce(_, getCurrentHub) {\n    if (shouldDisableAutoInstrumentation(getCurrentHub)) {\n      DEBUG_BUILD && logger.log('Postgres Integration is skipped because of instrumenter configuration.');\n      return;\n    }\n\n    const pkg = this.loadDependency();\n\n    if (!pkg) {\n      DEBUG_BUILD && logger.error('Postgres Integration was unable to require `pg` package.');\n      return;\n    }\n\n    const Client = this._usePgNative ? _optionalChain([pkg, 'access', _2 => _2.native, 'optionalAccess', _3 => _3.Client]) : pkg.Client;\n\n    if (!Client) {\n      DEBUG_BUILD && logger.error(\"Postgres Integration was unable to access 'pg-native' bindings.\");\n      return;\n    }\n\n    /**\n     * function (query, callback) => void\n     * function (query, params, callback) => void\n     * function (query) => Promise\n     * function (query, params) => Promise\n     * function (pg.Cursor) => pg.Cursor\n     */\n    fill(Client.prototype, 'query', function (orig) {\n      return function ( config, values, callback) {\n        const scope = getCurrentHub().getScope();\n        const parentSpan = scope.getSpan();\n\n        const data = {\n          'db.system': 'postgresql',\n        };\n\n        try {\n          if (this.database) {\n            data['db.name'] = this.database;\n          }\n          if (this.host) {\n            data['server.address'] = this.host;\n          }\n          if (this.port) {\n            data['server.port'] = this.port;\n          }\n          if (this.user) {\n            data['db.user'] = this.user;\n          }\n        } catch (e) {\n          // ignore\n        }\n\n        const span = _optionalChain([parentSpan, 'optionalAccess', _4 => _4.startChild, 'call', _5 => _5({\n          description: typeof config === 'string' ? config : (config ).text,\n          op: 'db',\n          origin: 'auto.db.postgres',\n          data,\n        })]);\n\n        if (typeof callback === 'function') {\n          return orig.call(this, config, values, function (err, result) {\n            _optionalChain([span, 'optionalAccess', _6 => _6.finish, 'call', _7 => _7()]);\n            callback(err, result);\n          });\n        }\n\n        if (typeof values === 'function') {\n          return orig.call(this, config, function (err, result) {\n            _optionalChain([span, 'optionalAccess', _8 => _8.finish, 'call', _9 => _9()]);\n            values(err, result);\n          });\n        }\n\n        const rv = typeof values !== 'undefined' ? orig.call(this, config, values) : orig.call(this, config);\n\n        if (isThenable(rv)) {\n          return rv.then((res) => {\n            _optionalChain([span, 'optionalAccess', _10 => _10.finish, 'call', _11 => _11()]);\n            return res;\n          });\n        }\n\n        _optionalChain([span, 'optionalAccess', _12 => _12.finish, 'call', _13 => _13()]);\n        return rv;\n      };\n    });\n  }\n}Postgres.__initStatic();\n\nexport { Postgres };\n//# sourceMappingURL=postgres.js.map\n",
  "import { _optionalChain } from '@sentry/utils';\nimport { loadModule, logger, fill } from '@sentry/utils';\nimport { DEBUG_BUILD } from '../../common/debug-build.js';\nimport { shouldDisableAutoInstrumentation } from './utils/node-utils.js';\n\n/** Tracing integration for node-mysql package */\nclass Mysql  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'Mysql';}\n\n  /**\n   * @inheritDoc\n   */\n\n   constructor() {\n    this.name = Mysql.id;\n  }\n\n  /** @inheritdoc */\n   loadDependency() {\n    return (this._module = this._module || loadModule('mysql/lib/Connection.js'));\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce(_, getCurrentHub) {\n    if (shouldDisableAutoInstrumentation(getCurrentHub)) {\n      DEBUG_BUILD && logger.log('Mysql Integration is skipped because of instrumenter configuration.');\n      return;\n    }\n\n    const pkg = this.loadDependency();\n\n    if (!pkg) {\n      DEBUG_BUILD && logger.error('Mysql Integration was unable to require `mysql` package.');\n      return;\n    }\n\n    let mySqlConfig = undefined;\n\n    try {\n      pkg.prototype.connect = new Proxy(pkg.prototype.connect, {\n        apply(wrappingTarget, thisArg, args) {\n          if (!mySqlConfig) {\n            mySqlConfig = thisArg.config;\n          }\n          return wrappingTarget.apply(thisArg, args);\n        },\n      });\n    } catch (e) {\n      DEBUG_BUILD && logger.error('Mysql Integration was unable to instrument `mysql` config.');\n    }\n\n    function spanDataFromConfig() {\n      if (!mySqlConfig) {\n        return {};\n      }\n      return {\n        'server.address': mySqlConfig.host,\n        'server.port': mySqlConfig.port,\n        'db.user': mySqlConfig.user,\n      };\n    }\n\n    function finishSpan(span) {\n      if (!span || span.endTimestamp) {\n        return;\n      }\n\n      const data = spanDataFromConfig();\n      Object.keys(data).forEach(key => {\n        span.setData(key, data[key]);\n      });\n\n      span.finish();\n    }\n\n    // The original function will have one of these signatures:\n    //    function (callback) => void\n    //    function (options, callback) => void\n    //    function (options, values, callback) => void\n    fill(pkg, 'createQuery', function (orig) {\n      return function ( options, values, callback) {\n        const scope = getCurrentHub().getScope();\n        const parentSpan = scope.getSpan();\n\n        const span = _optionalChain([parentSpan, 'optionalAccess', _2 => _2.startChild, 'call', _3 => _3({\n          description: typeof options === 'string' ? options : (options ).sql,\n          op: 'db',\n          origin: 'auto.db.mysql',\n          data: {\n            'db.system': 'mysql',\n          },\n        })]);\n\n        if (typeof callback === 'function') {\n          return orig.call(this, options, values, function (err, result, fields) {\n            finishSpan(span);\n            callback(err, result, fields);\n          });\n        }\n\n        if (typeof values === 'function') {\n          return orig.call(this, options, function (err, result, fields) {\n            finishSpan(span);\n            values(err, result, fields);\n          });\n        }\n\n        // streaming, no callback!\n        const query = orig.call(this, options, values) ;\n\n        query.on('end', () => {\n          finishSpan(span);\n        });\n\n        return query;\n      };\n    });\n  }\n}Mysql.__initStatic();\n\nexport { Mysql };\n//# sourceMappingURL=mysql.js.map\n",
  "import { _optionalChain } from '@sentry/utils';\nimport { loadModule, logger, fill, isThenable } from '@sentry/utils';\nimport { DEBUG_BUILD } from '../../common/debug-build.js';\nimport { shouldDisableAutoInstrumentation } from './utils/node-utils.js';\n\n// This allows us to use the same array for both defaults options and the type itself.\n// (note `as const` at the end to make it a union of string literal types (i.e. \"a\" | \"b\" | ... )\n// and not just a string[])\n\nconst OPERATIONS = [\n  'aggregate', // aggregate(pipeline, options, callback)\n  'bulkWrite', // bulkWrite(operations, options, callback)\n  'countDocuments', // countDocuments(query, options, callback)\n  'createIndex', // createIndex(fieldOrSpec, options, callback)\n  'createIndexes', // createIndexes(indexSpecs, options, callback)\n  'deleteMany', // deleteMany(filter, options, callback)\n  'deleteOne', // deleteOne(filter, options, callback)\n  'distinct', // distinct(key, query, options, callback)\n  'drop', // drop(options, callback)\n  'dropIndex', // dropIndex(indexName, options, callback)\n  'dropIndexes', // dropIndexes(options, callback)\n  'estimatedDocumentCount', // estimatedDocumentCount(options, callback)\n  'find', // find(query, options, callback)\n  'findOne', // findOne(query, options, callback)\n  'findOneAndDelete', // findOneAndDelete(filter, options, callback)\n  'findOneAndReplace', // findOneAndReplace(filter, replacement, options, callback)\n  'findOneAndUpdate', // findOneAndUpdate(filter, update, options, callback)\n  'indexes', // indexes(options, callback)\n  'indexExists', // indexExists(indexes, options, callback)\n  'indexInformation', // indexInformation(options, callback)\n  'initializeOrderedBulkOp', // initializeOrderedBulkOp(options, callback)\n  'insertMany', // insertMany(docs, options, callback)\n  'insertOne', // insertOne(doc, options, callback)\n  'isCapped', // isCapped(options, callback)\n  'mapReduce', // mapReduce(map, reduce, options, callback)\n  'options', // options(options, callback)\n  'parallelCollectionScan', // parallelCollectionScan(options, callback)\n  'rename', // rename(newName, options, callback)\n  'replaceOne', // replaceOne(filter, doc, options, callback)\n  'stats', // stats(options, callback)\n  'updateMany', // updateMany(filter, update, options, callback)\n  'updateOne', // updateOne(filter, update, options, callback)\n] ;\n\n// All of the operations above take `options` and `callback` as their final parameters, but some of them\n// take additional parameters as well. For those operations, this is a map of\n// { <operation name>:  [<names of additional parameters>] }, as a way to know what to call the operation's\n// positional arguments when we add them to the span's `data` object later\nconst OPERATION_SIGNATURES\n\n = {\n  // aggregate intentionally not included because `pipeline` arguments are too complex to serialize well\n  // see https://github.com/getsentry/sentry-javascript/pull/3102\n  bulkWrite: ['operations'],\n  countDocuments: ['query'],\n  createIndex: ['fieldOrSpec'],\n  createIndexes: ['indexSpecs'],\n  deleteMany: ['filter'],\n  deleteOne: ['filter'],\n  distinct: ['key', 'query'],\n  dropIndex: ['indexName'],\n  find: ['query'],\n  findOne: ['query'],\n  findOneAndDelete: ['filter'],\n  findOneAndReplace: ['filter', 'replacement'],\n  findOneAndUpdate: ['filter', 'update'],\n  indexExists: ['indexes'],\n  insertMany: ['docs'],\n  insertOne: ['doc'],\n  mapReduce: ['map', 'reduce'],\n  rename: ['newName'],\n  replaceOne: ['filter', 'doc'],\n  updateMany: ['filter', 'update'],\n  updateOne: ['filter', 'update'],\n};\n\nfunction isCursor(maybeCursor) {\n  return maybeCursor && typeof maybeCursor === 'object' && maybeCursor.once && typeof maybeCursor.once === 'function';\n}\n\n/** Tracing integration for mongo package */\nclass Mongo  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'Mongo';}\n\n  /**\n   * @inheritDoc\n   */\n\n  /**\n   * @inheritDoc\n   */\n   constructor(options = {}) {\n    this.name = Mongo.id;\n    this._operations = Array.isArray(options.operations) ? options.operations : (OPERATIONS );\n    this._describeOperations = 'describeOperations' in options ? options.describeOperations : true;\n    this._useMongoose = !!options.useMongoose;\n  }\n\n  /** @inheritdoc */\n   loadDependency() {\n    const moduleName = this._useMongoose ? 'mongoose' : 'mongodb';\n    return (this._module = this._module || loadModule(moduleName));\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce(_, getCurrentHub) {\n    if (shouldDisableAutoInstrumentation(getCurrentHub)) {\n      DEBUG_BUILD && logger.log('Mongo Integration is skipped because of instrumenter configuration.');\n      return;\n    }\n\n    const pkg = this.loadDependency();\n\n    if (!pkg) {\n      const moduleName = this._useMongoose ? 'mongoose' : 'mongodb';\n      DEBUG_BUILD && logger.error(`Mongo Integration was unable to require \\`${moduleName}\\` package.`);\n      return;\n    }\n\n    this._instrumentOperations(pkg.Collection, this._operations, getCurrentHub);\n  }\n\n  /**\n   * Patches original collection methods\n   */\n   _instrumentOperations(collection, operations, getCurrentHub) {\n    operations.forEach((operation) => this._patchOperation(collection, operation, getCurrentHub));\n  }\n\n  /**\n   * Patches original collection to utilize our tracing functionality\n   */\n   _patchOperation(collection, operation, getCurrentHub) {\n    if (!(operation in collection.prototype)) return;\n\n    const getSpanContext = this._getSpanContextFromOperationArguments.bind(this);\n\n    fill(collection.prototype, operation, function (orig) {\n      return function ( ...args) {\n        const lastArg = args[args.length - 1];\n        const scope = getCurrentHub().getScope();\n        const parentSpan = scope.getSpan();\n\n        // Check if the operation was passed a callback. (mapReduce requires a different check, as\n        // its (non-callback) arguments can also be functions.)\n        if (typeof lastArg !== 'function' || (operation === 'mapReduce' && args.length === 2)) {\n          const span = _optionalChain([parentSpan, 'optionalAccess', _2 => _2.startChild, 'call', _3 => _3(getSpanContext(this, operation, args))]);\n          const maybePromiseOrCursor = orig.call(this, ...args);\n\n          if (isThenable(maybePromiseOrCursor)) {\n            return maybePromiseOrCursor.then((res) => {\n              _optionalChain([span, 'optionalAccess', _4 => _4.finish, 'call', _5 => _5()]);\n              return res;\n            });\n          }\n          // If the operation returns a Cursor\n          // we need to attach a listener to it to finish the span when the cursor is closed.\n          else if (isCursor(maybePromiseOrCursor)) {\n            const cursor = maybePromiseOrCursor ;\n\n            try {\n              cursor.once('close', () => {\n                _optionalChain([span, 'optionalAccess', _6 => _6.finish, 'call', _7 => _7()]);\n              });\n            } catch (e) {\n              // If the cursor is already closed, `once` will throw an error. In that case, we can\n              // finish the span immediately.\n              _optionalChain([span, 'optionalAccess', _8 => _8.finish, 'call', _9 => _9()]);\n            }\n\n            return cursor;\n          } else {\n            _optionalChain([span, 'optionalAccess', _10 => _10.finish, 'call', _11 => _11()]);\n            return maybePromiseOrCursor;\n          }\n        }\n\n        const span = _optionalChain([parentSpan, 'optionalAccess', _12 => _12.startChild, 'call', _13 => _13(getSpanContext(this, operation, args.slice(0, -1)))]);\n\n        return orig.call(this, ...args.slice(0, -1), function (err, result) {\n          _optionalChain([span, 'optionalAccess', _14 => _14.finish, 'call', _15 => _15()]);\n          lastArg(err, result);\n        });\n      };\n    });\n  }\n\n  /**\n   * Form a SpanContext based on the user input to a given operation.\n   */\n   _getSpanContextFromOperationArguments(\n    collection,\n    operation,\n    args,\n  ) {\n    const data = {\n      'db.system': 'mongodb',\n      'db.name': collection.dbName,\n      'db.operation': operation,\n      'db.mongodb.collection': collection.collectionName,\n    };\n    const spanContext = {\n      op: 'db',\n      // TODO v8: Use `${collection.collectionName}.${operation}`\n      origin: 'auto.db.mongo',\n      description: operation,\n      data,\n    };\n\n    // If the operation takes no arguments besides `options` and `callback`, or if argument\n    // collection is disabled for this operation, just return early.\n    const signature = OPERATION_SIGNATURES[operation];\n    const shouldDescribe = Array.isArray(this._describeOperations)\n      ? this._describeOperations.includes(operation)\n      : this._describeOperations;\n\n    if (!signature || !shouldDescribe) {\n      return spanContext;\n    }\n\n    try {\n      // Special case for `mapReduce`, as the only one accepting functions as arguments.\n      if (operation === 'mapReduce') {\n        const [map, reduce] = args ;\n        data[signature[0]] = typeof map === 'string' ? map : map.name || '<anonymous>';\n        data[signature[1]] = typeof reduce === 'string' ? reduce : reduce.name || '<anonymous>';\n      } else {\n        for (let i = 0; i < signature.length; i++) {\n          data[`db.mongodb.${signature[i]}`] = JSON.stringify(args[i]);\n        }\n      }\n    } catch (_oO) {\n      // no-empty\n    }\n\n    return spanContext;\n  }\n}Mongo.__initStatic();\n\nexport { Mongo };\n//# sourceMappingURL=mongo.js.map\n",
  "import { trace, getCurrentHub } from '@sentry/core';\nimport { addNonEnumerableProperty, logger } from '@sentry/utils';\nimport { DEBUG_BUILD } from '../../common/debug-build.js';\nimport { shouldDisableAutoInstrumentation } from './utils/node-utils.js';\n\nfunction isValidPrismaClient(possibleClient) {\n  return !!possibleClient && !!(possibleClient )['$use'];\n}\n\n/** Tracing integration for @prisma/client package */\nclass Prisma  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'Prisma';}\n\n  /**\n   * @inheritDoc\n   */\n\n  /**\n   * @inheritDoc\n   */\n   constructor(options = {}) {\n    this.name = Prisma.id;\n\n    // We instrument the PrismaClient inside the constructor and not inside `setupOnce` because in some cases of server-side\n    // bundling (Next.js) multiple Prisma clients can be instantiated, even though users don't intend to. When instrumenting\n    // in setupOnce we can only ever instrument one client.\n    // https://github.com/getsentry/sentry-javascript/issues/7216#issuecomment-1602375012\n    // In the future we might explore providing a dedicated PrismaClient middleware instead of this hack.\n    if (isValidPrismaClient(options.client) && !options.client._sentryInstrumented) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      addNonEnumerableProperty(options.client , '_sentryInstrumented', true);\n\n      const clientData = {};\n      try {\n        const engineConfig = (options.client )._engineConfig;\n        if (engineConfig) {\n          const { activeProvider, clientVersion } = engineConfig;\n          if (activeProvider) {\n            clientData['db.system'] = activeProvider;\n          }\n          if (clientVersion) {\n            clientData['db.prisma.version'] = clientVersion;\n          }\n        }\n      } catch (e) {\n        // ignore\n      }\n\n      options.client.$use((params, next) => {\n        if (shouldDisableAutoInstrumentation(getCurrentHub)) {\n          return next(params);\n        }\n\n        const action = params.action;\n        const model = params.model;\n\n        return trace(\n          {\n            name: model ? `${model} ${action}` : action,\n            op: 'db.prisma',\n            origin: 'auto.db.prisma',\n            data: { ...clientData, 'db.operation': action },\n          },\n          () => next(params),\n        );\n      });\n    } else {\n      DEBUG_BUILD &&\n        logger.warn('Unsupported Prisma client provided to PrismaIntegration. Provided client:', options.client);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce() {\n    // Noop - here for backwards compatibility\n  }\n} Prisma.__initStatic();\n\nexport { Prisma };\n//# sourceMappingURL=prisma.js.map\n",
  "import { _optionalChain } from '@sentry/utils';\nimport { loadModule, logger, fill, isThenable } from '@sentry/utils';\nimport { DEBUG_BUILD } from '../../common/debug-build.js';\nimport { shouldDisableAutoInstrumentation } from './utils/node-utils.js';\n\n/** Tracing integration for graphql package */\nclass GraphQL  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'GraphQL';}\n\n  /**\n   * @inheritDoc\n   */\n\n   constructor() {\n    this.name = GraphQL.id;\n  }\n\n  /** @inheritdoc */\n   loadDependency() {\n    return (this._module = this._module || loadModule('graphql/execution/execute.js'));\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce(_, getCurrentHub) {\n    if (shouldDisableAutoInstrumentation(getCurrentHub)) {\n      DEBUG_BUILD && logger.log('GraphQL Integration is skipped because of instrumenter configuration.');\n      return;\n    }\n\n    const pkg = this.loadDependency();\n\n    if (!pkg) {\n      DEBUG_BUILD && logger.error('GraphQL Integration was unable to require graphql/execution package.');\n      return;\n    }\n\n    fill(pkg, 'execute', function (orig) {\n      return function ( ...args) {\n        const scope = getCurrentHub().getScope();\n        const parentSpan = scope.getSpan();\n\n        const span = _optionalChain([parentSpan, 'optionalAccess', _2 => _2.startChild, 'call', _3 => _3({\n          description: 'execute',\n          op: 'graphql.execute',\n          origin: 'auto.graphql.graphql',\n        })]);\n\n        _optionalChain([scope, 'optionalAccess', _4 => _4.setSpan, 'call', _5 => _5(span)]);\n\n        const rv = orig.call(this, ...args);\n\n        if (isThenable(rv)) {\n          return rv.then((res) => {\n            _optionalChain([span, 'optionalAccess', _6 => _6.finish, 'call', _7 => _7()]);\n            _optionalChain([scope, 'optionalAccess', _8 => _8.setSpan, 'call', _9 => _9(parentSpan)]);\n\n            return res;\n          });\n        }\n\n        _optionalChain([span, 'optionalAccess', _10 => _10.finish, 'call', _11 => _11()]);\n        _optionalChain([scope, 'optionalAccess', _12 => _12.setSpan, 'call', _13 => _13(parentSpan)]);\n        return rv;\n      };\n    });\n  }\n}GraphQL.__initStatic();\n\nexport { GraphQL };\n//# sourceMappingURL=graphql.js.map\n",
  "import { _optionalChain } from '@sentry/utils';\nimport { loadModule, logger, fill, arrayify, isThenable } from '@sentry/utils';\nimport { DEBUG_BUILD } from '../../common/debug-build.js';\nimport { shouldDisableAutoInstrumentation } from './utils/node-utils.js';\n\n/** Tracing integration for Apollo */\nclass Apollo  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'Apollo';}\n\n  /**\n   * @inheritDoc\n   */\n\n  /**\n   * @inheritDoc\n   */\n   constructor(\n    options = {\n      useNestjs: false,\n    },\n  ) {\n    this.name = Apollo.id;\n    this._useNest = !!options.useNestjs;\n  }\n\n  /** @inheritdoc */\n   loadDependency() {\n    if (this._useNest) {\n      this._module = this._module || loadModule('@nestjs/graphql');\n    } else {\n      this._module = this._module || loadModule('apollo-server-core');\n    }\n\n    return this._module;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce(_, getCurrentHub) {\n    if (shouldDisableAutoInstrumentation(getCurrentHub)) {\n      DEBUG_BUILD && logger.log('Apollo Integration is skipped because of instrumenter configuration.');\n      return;\n    }\n\n    if (this._useNest) {\n      const pkg = this.loadDependency();\n\n      if (!pkg) {\n        DEBUG_BUILD && logger.error('Apollo-NestJS Integration was unable to require @nestjs/graphql package.');\n        return;\n      }\n\n      /**\n       * Iterate over resolvers of NestJS ResolversExplorerService before schemas are constructed.\n       */\n      fill(\n        pkg.GraphQLFactory.prototype,\n        'mergeWithSchema',\n        function (orig) {\n          return function (\n\n            ...args\n          ) {\n            fill(this.resolversExplorerService, 'explore', function (orig) {\n              return function () {\n                const resolvers = arrayify(orig.call(this));\n\n                const instrumentedResolvers = instrumentResolvers(resolvers, getCurrentHub);\n\n                return instrumentedResolvers;\n              };\n            });\n\n            return orig.call(this, ...args);\n          };\n        },\n      );\n    } else {\n      const pkg = this.loadDependency();\n\n      if (!pkg) {\n        DEBUG_BUILD && logger.error('Apollo Integration was unable to require apollo-server-core package.');\n        return;\n      }\n\n      /**\n       * Iterate over resolvers of the ApolloServer instance before schemas are constructed.\n       */\n      fill(pkg.ApolloServerBase.prototype, 'constructSchema', function (orig) {\n        return function (\n\n) {\n          if (!this.config.resolvers) {\n            if (DEBUG_BUILD) {\n              if (this.config.schema) {\n                logger.warn(\n                  'Apollo integration is not able to trace `ApolloServer` instances constructed via `schema` property.' +\n                    'If you are using NestJS with Apollo, please use `Sentry.Integrations.Apollo({ useNestjs: true })` instead.',\n                );\n                logger.warn();\n              } else if (this.config.modules) {\n                logger.warn(\n                  'Apollo integration is not able to trace `ApolloServer` instances constructed via `modules` property.',\n                );\n              }\n\n              logger.error('Skipping tracing as no resolvers found on the `ApolloServer` instance.');\n            }\n\n            return orig.call(this);\n          }\n\n          const resolvers = arrayify(this.config.resolvers);\n\n          this.config.resolvers = instrumentResolvers(resolvers, getCurrentHub);\n\n          return orig.call(this);\n        };\n      });\n    }\n  }\n}Apollo.__initStatic();\n\nfunction instrumentResolvers(resolvers, getCurrentHub) {\n  return resolvers.map(model => {\n    Object.keys(model).forEach(resolverGroupName => {\n      Object.keys(model[resolverGroupName]).forEach(resolverName => {\n        if (typeof model[resolverGroupName][resolverName] !== 'function') {\n          return;\n        }\n\n        wrapResolver(model, resolverGroupName, resolverName, getCurrentHub);\n      });\n    });\n\n    return model;\n  });\n}\n\n/**\n * Wrap a single resolver which can be a parent of other resolvers and/or db operations.\n */\nfunction wrapResolver(\n  model,\n  resolverGroupName,\n  resolverName,\n  getCurrentHub,\n) {\n  fill(model[resolverGroupName], resolverName, function (orig) {\n    return function ( ...args) {\n      const scope = getCurrentHub().getScope();\n      const parentSpan = scope.getSpan();\n      const span = _optionalChain([parentSpan, 'optionalAccess', _2 => _2.startChild, 'call', _3 => _3({\n        description: `${resolverGroupName}.${resolverName}`,\n        op: 'graphql.resolve',\n        origin: 'auto.graphql.apollo',\n      })]);\n\n      const rv = orig.call(this, ...args);\n\n      if (isThenable(rv)) {\n        return rv.then((res) => {\n          _optionalChain([span, 'optionalAccess', _4 => _4.finish, 'call', _5 => _5()]);\n          return res;\n        });\n      }\n\n      _optionalChain([span, 'optionalAccess', _6 => _6.finish, 'call', _7 => _7()]);\n\n      return rv;\n    };\n  });\n}\n\nexport { Apollo };\n//# sourceMappingURL=apollo.js.map\n",
  "import * as os from 'os';\nimport { TextEncoder } from 'util';\nimport { ServerRuntimeClient, SDK_VERSION } from '@sentry/core';\n\n/**\n * The Sentry Node SDK Client.\n *\n * @see NodeClientOptions for documentation on configuration options.\n * @see SentryClient for usage documentation.\n */\nclass NodeClient extends ServerRuntimeClient {\n  /**\n   * Creates a new Node SDK instance.\n   * @param options Configuration options for this SDK.\n   */\n   constructor(options) {\n    options._metadata = options._metadata || {};\n    options._metadata.sdk = options._metadata.sdk || {\n      name: 'sentry.javascript.node',\n      packages: [\n        {\n          name: 'npm:@sentry/node',\n          version: SDK_VERSION,\n        },\n      ],\n      version: SDK_VERSION,\n    };\n\n    // Until node supports global TextEncoder in all versions we support, we are forced to pass it from util\n    options.transportOptions = {\n      textEncoder: new TextEncoder(),\n      ...options.transportOptions,\n    };\n\n    const clientOptions = {\n      ...options,\n      platform: 'node',\n      runtime: { name: 'node', version: global.process.version },\n      serverName: options.serverName || global.process.env.SENTRY_NAME || os.hostname(),\n    };\n\n    super(clientOptions);\n  }\n}\n\nexport { NodeClient };\n//# sourceMappingURL=client.js.map\n",
  "import * as os from 'os';\nimport { TextEncoder } from 'util';\nimport { ServerRuntimeClient, SDK_VERSION } from '@sentry/core';\n\n/**\n * The Sentry Node SDK Client.\n *\n * @see NodeClientOptions for documentation on configuration options.\n * @see SentryClient for usage documentation.\n */\nclass NodeClient extends ServerRuntimeClient {\n  /**\n   * Creates a new Node SDK instance.\n   * @param options Configuration options for this SDK.\n   */\n   constructor(options) {\n    options._metadata = options._metadata || {};\n    options._metadata.sdk = options._metadata.sdk || {\n      name: 'sentry.javascript.node',\n      packages: [\n        {\n          name: 'npm:@sentry/node',\n          version: SDK_VERSION,\n        },\n      ],\n      version: SDK_VERSION,\n    };\n\n    // Until node supports global TextEncoder in all versions we support, we are forced to pass it from util\n    options.transportOptions = {\n      textEncoder: new TextEncoder(),\n      ...options.transportOptions,\n    };\n\n    const clientOptions = {\n      ...options,\n      platform: 'node',\n      runtime: { name: 'node', version: global.process.version },\n      serverName: options.serverName || global.process.env.SENTRY_NAME || os.hostname(),\n    };\n\n    super(clientOptions);\n  }\n}\n\nexport { NodeClient };\n//# sourceMappingURL=client.js.map\n",
  "import { _nullishCoalesce } from '@sentry/utils';\nimport * as http from 'http';\nimport * as https from 'https';\nimport { Readable } from 'stream';\nimport { URL } from 'url';\nimport { createGzip } from 'zlib';\nimport { createTransport } from '@sentry/core';\nimport { consoleSandbox } from '@sentry/utils';\nimport { HttpsProxyAgent } from 'https-proxy-agent';\n\n// Estimated maximum size for reasonable standalone event\nconst GZIP_THRESHOLD = 1024 * 32;\n\n/**\n * Gets a stream from a Uint8Array or string\n * Readable.from is ideal but was added in node.js v12.3.0 and v10.17.0\n */\nfunction streamFromBody(body) {\n  return new Readable({\n    read() {\n      this.push(body);\n      this.push(null);\n    },\n  });\n}\n\n/**\n * Creates a Transport that uses native the native 'http' and 'https' modules to send events to Sentry.\n */\nfunction makeNodeTransport(options) {\n  let urlSegments;\n\n  try {\n    urlSegments = new URL(options.url);\n  } catch (e) {\n    consoleSandbox(() => {\n      // eslint-disable-next-line no-console\n      console.warn(\n        '[@sentry/node]: Invalid dsn or tunnel option, will not send any events. The tunnel option must be a full URL when used.',\n      );\n    });\n    return createTransport(options, () => Promise.resolve({}));\n  }\n\n  const isHttps = urlSegments.protocol === 'https:';\n\n  // Proxy prioritization: http => `options.proxy` | `process.env.http_proxy`\n  // Proxy prioritization: https => `options.proxy` | `process.env.https_proxy` | `process.env.http_proxy`\n  const proxy = applyNoProxyOption(\n    urlSegments,\n    options.proxy || (isHttps ? process.env.https_proxy : undefined) || process.env.http_proxy,\n  );\n\n  const nativeHttpModule = isHttps ? https : http;\n  const keepAlive = options.keepAlive === undefined ? false : options.keepAlive;\n\n  // TODO(v7): Evaluate if we can set keepAlive to true. This would involve testing for memory leaks in older node\n  // versions(>= 8) as they had memory leaks when using it: #2555\n  const agent = proxy\n    ? (new HttpsProxyAgent(proxy) )\n    : new nativeHttpModule.Agent({ keepAlive, maxSockets: 30, timeout: 2000 });\n\n  const requestExecutor = createRequestExecutor(options, _nullishCoalesce(options.httpModule, () => ( nativeHttpModule)), agent);\n  return createTransport(options, requestExecutor);\n}\n\n/**\n * Honors the `no_proxy` env variable with the highest priority to allow for hosts exclusion.\n *\n * @param transportUrl The URL the transport intends to send events to.\n * @param proxy The client configured proxy.\n * @returns A proxy the transport should use.\n */\nfunction applyNoProxyOption(transportUrlSegments, proxy) {\n  const { no_proxy } = process.env;\n\n  const urlIsExemptFromProxy =\n    no_proxy &&\n    no_proxy\n      .split(',')\n      .some(\n        exemption => transportUrlSegments.host.endsWith(exemption) || transportUrlSegments.hostname.endsWith(exemption),\n      );\n\n  if (urlIsExemptFromProxy) {\n    return undefined;\n  } else {\n    return proxy;\n  }\n}\n\n/**\n * Creates a RequestExecutor to be used with `createTransport`.\n */\nfunction createRequestExecutor(\n  options,\n  httpModule,\n  agent,\n) {\n  const { hostname, pathname, port, protocol, search } = new URL(options.url);\n  return function makeRequest(request) {\n    return new Promise((resolve, reject) => {\n      let body = streamFromBody(request.body);\n\n      const headers = { ...options.headers };\n\n      if (request.body.length > GZIP_THRESHOLD) {\n        headers['content-encoding'] = 'gzip';\n        body = body.pipe(createGzip());\n      }\n\n      const req = httpModule.request(\n        {\n          method: 'POST',\n          agent,\n          headers,\n          hostname,\n          path: `${pathname}${search}`,\n          port,\n          protocol,\n          ca: options.caCerts,\n        },\n        res => {\n          res.on('data', () => {\n            // Drain socket\n          });\n\n          res.on('end', () => {\n            // Drain socket\n          });\n\n          res.setEncoding('utf8');\n\n          // \"Key-value pairs of header names and values. Header names are lower-cased.\"\n          // https://nodejs.org/api/http.html#http_message_headers\n          const retryAfterHeader = _nullishCoalesce(res.headers['retry-after'], () => ( null));\n          const rateLimitsHeader = _nullishCoalesce(res.headers['x-sentry-rate-limits'], () => ( null));\n\n          resolve({\n            statusCode: res.statusCode,\n            headers: {\n              'retry-after': retryAfterHeader,\n              'x-sentry-rate-limits': Array.isArray(rateLimitsHeader) ? rateLimitsHeader[0] : rateLimitsHeader,\n            },\n          });\n        },\n      );\n\n      req.on('error', reject);\n      body.pipe(req);\n    });\n  };\n}\n\nexport { makeNodeTransport };\n//# sourceMappingURL=http.js.map\n",
  "import { _nullishCoalesce } from '@sentry/utils';\nimport * as http from 'http';\nimport * as https from 'https';\nimport { Readable } from 'stream';\nimport { URL } from 'url';\nimport { createGzip } from 'zlib';\nimport { createTransport } from '@sentry/core';\nimport { consoleSandbox } from '@sentry/utils';\nimport { HttpsProxyAgent } from 'https-proxy-agent';\n\n// Estimated maximum size for reasonable standalone event\nconst GZIP_THRESHOLD = 1024 * 32;\n\n/**\n * Gets a stream from a Uint8Array or string\n * Readable.from is ideal but was added in node.js v12.3.0 and v10.17.0\n */\nfunction streamFromBody(body) {\n  return new Readable({\n    read() {\n      this.push(body);\n      this.push(null);\n    },\n  });\n}\n\n/**\n * Creates a Transport that uses native the native 'http' and 'https' modules to send events to Sentry.\n */\nfunction makeNodeTransport(options) {\n  let urlSegments;\n\n  try {\n    urlSegments = new URL(options.url);\n  } catch (e) {\n    consoleSandbox(() => {\n      // eslint-disable-next-line no-console\n      console.warn(\n        '[@sentry/node]: Invalid dsn or tunnel option, will not send any events. The tunnel option must be a full URL when used.',\n      );\n    });\n    return createTransport(options, () => Promise.resolve({}));\n  }\n\n  const isHttps = urlSegments.protocol === 'https:';\n\n  // Proxy prioritization: http => `options.proxy` | `process.env.http_proxy`\n  // Proxy prioritization: https => `options.proxy` | `process.env.https_proxy` | `process.env.http_proxy`\n  const proxy = applyNoProxyOption(\n    urlSegments,\n    options.proxy || (isHttps ? process.env.https_proxy : undefined) || process.env.http_proxy,\n  );\n\n  const nativeHttpModule = isHttps ? https : http;\n  const keepAlive = options.keepAlive === undefined ? false : options.keepAlive;\n\n  // TODO(v7): Evaluate if we can set keepAlive to true. This would involve testing for memory leaks in older node\n  // versions(>= 8) as they had memory leaks when using it: #2555\n  const agent = proxy\n    ? (new HttpsProxyAgent(proxy) )\n    : new nativeHttpModule.Agent({ keepAlive, maxSockets: 30, timeout: 2000 });\n\n  const requestExecutor = createRequestExecutor(options, _nullishCoalesce(options.httpModule, () => ( nativeHttpModule)), agent);\n  return createTransport(options, requestExecutor);\n}\n\n/**\n * Honors the `no_proxy` env variable with the highest priority to allow for hosts exclusion.\n *\n * @param transportUrl The URL the transport intends to send events to.\n * @param proxy The client configured proxy.\n * @returns A proxy the transport should use.\n */\nfunction applyNoProxyOption(transportUrlSegments, proxy) {\n  const { no_proxy } = process.env;\n\n  const urlIsExemptFromProxy =\n    no_proxy &&\n    no_proxy\n      .split(',')\n      .some(\n        exemption => transportUrlSegments.host.endsWith(exemption) || transportUrlSegments.hostname.endsWith(exemption),\n      );\n\n  if (urlIsExemptFromProxy) {\n    return undefined;\n  } else {\n    return proxy;\n  }\n}\n\n/**\n * Creates a RequestExecutor to be used with `createTransport`.\n */\nfunction createRequestExecutor(\n  options,\n  httpModule,\n  agent,\n) {\n  const { hostname, pathname, port, protocol, search } = new URL(options.url);\n  return function makeRequest(request) {\n    return new Promise((resolve, reject) => {\n      let body = streamFromBody(request.body);\n\n      const headers = { ...options.headers };\n\n      if (request.body.length > GZIP_THRESHOLD) {\n        headers['content-encoding'] = 'gzip';\n        body = body.pipe(createGzip());\n      }\n\n      const req = httpModule.request(\n        {\n          method: 'POST',\n          agent,\n          headers,\n          hostname,\n          path: `${pathname}${search}`,\n          port,\n          protocol,\n          ca: options.caCerts,\n        },\n        res => {\n          res.on('data', () => {\n            // Drain socket\n          });\n\n          res.on('end', () => {\n            // Drain socket\n          });\n\n          res.setEncoding('utf8');\n\n          // \"Key-value pairs of header names and values. Header names are lower-cased.\"\n          // https://nodejs.org/api/http.html#http_message_headers\n          const retryAfterHeader = _nullishCoalesce(res.headers['retry-after'], () => ( null));\n          const rateLimitsHeader = _nullishCoalesce(res.headers['x-sentry-rate-limits'], () => ( null));\n\n          resolve({\n            statusCode: res.statusCode,\n            headers: {\n              'retry-after': retryAfterHeader,\n              'x-sentry-rate-limits': Array.isArray(rateLimitsHeader) ? rateLimitsHeader[0] : rateLimitsHeader,\n            },\n          });\n        },\n      );\n\n      req.on('error', reject);\n      body.pipe(req);\n    });\n  };\n}\n\nexport { makeNodeTransport };\n//# sourceMappingURL=http.js.map\n",
  "import { _optionalChain } from '@sentry/utils';\nimport { spawn } from 'child_process';\nimport { getCurrentHub, addGlobalEventProcessor, makeSession, updateSession, getClient, captureEvent, flush } from '@sentry/core';\nimport { logger, watchdogTimer } from '@sentry/utils';\nimport { captureStackTrace } from './debugger.js';\n\nconst DEFAULT_INTERVAL = 50;\nconst DEFAULT_HANG_THRESHOLD = 5000;\n\nfunction createAnrEvent(blockedMs, frames) {\n  return {\n    level: 'error',\n    exception: {\n      values: [\n        {\n          type: 'ApplicationNotResponding',\n          value: `Application Not Responding for at least ${blockedMs} ms`,\n          stacktrace: { frames },\n          mechanism: {\n            // This ensures the UI doesn't say 'Crashed in' for the stack trace\n            type: 'ANR',\n          },\n        },\n      ],\n    },\n  };\n}\n\n/**\n * Starts the node debugger and returns the inspector url.\n *\n * When inspector.url() returns undefined, it means the port is already in use so we try the next port.\n */\nfunction startInspector(startPort = 9229) {\n  // eslint-disable-next-line @typescript-eslint/no-var-requires\n  const inspector = require('inspector');\n  let inspectorUrl = undefined;\n  let port = startPort;\n\n  while (inspectorUrl === undefined && port < startPort + 100) {\n    inspector.open(port);\n    inspectorUrl = inspector.url();\n    port++;\n  }\n\n  return inspectorUrl;\n}\n\nfunction startChildProcess(options) {\n  function log(message, ...args) {\n    logger.log(`[ANR] ${message}`, ...args);\n  }\n\n  const hub = getCurrentHub();\n\n  try {\n    const env = { ...process.env };\n    env.SENTRY_ANR_CHILD_PROCESS = 'true';\n\n    if (options.captureStackTrace) {\n      env.SENTRY_INSPECT_URL = startInspector();\n    }\n\n    log(`Spawning child process with execPath:'${process.execPath}' and entryScript:'${options.entryScript}'`);\n\n    const child = spawn(process.execPath, [options.entryScript], {\n      env,\n      stdio: logger.isEnabled() ? ['inherit', 'inherit', 'inherit', 'ipc'] : ['ignore', 'ignore', 'ignore', 'ipc'],\n    });\n    // The child process should not keep the main process alive\n    child.unref();\n\n    const timer = setInterval(() => {\n      try {\n        const currentSession = _optionalChain([hub, 'access', _2 => _2.getScope, 'call', _3 => _3(), 'optionalAccess', _4 => _4.getSession, 'call', _5 => _5()]);\n        // We need to copy the session object and remove the toJSON method so it can be sent to the child process\n        // serialized without making it a SerializedSession\n        const session = currentSession ? { ...currentSession, toJSON: undefined } : undefined;\n        // message the child process to tell it the main event loop is still running\n        child.send({ session });\n      } catch (_) {\n        //\n      }\n    }, options.pollInterval);\n\n    child.on('message', (msg) => {\n      if (msg === 'session-ended') {\n        log('ANR event sent from child process. Clearing session in this process.');\n        _optionalChain([hub, 'access', _6 => _6.getScope, 'call', _7 => _7(), 'optionalAccess', _8 => _8.setSession, 'call', _9 => _9(undefined)]);\n      }\n    });\n\n    const end = (type) => {\n      return (...args) => {\n        clearInterval(timer);\n        log(`Child process ${type}`, ...args);\n      };\n    };\n\n    child.on('error', end('error'));\n    child.on('disconnect', end('disconnect'));\n    child.on('exit', end('exit'));\n  } catch (e) {\n    log('Failed to start child process', e);\n  }\n}\n\nfunction createHrTimer() {\n  let lastPoll = process.hrtime();\n\n  return {\n    getTimeMs: () => {\n      const [seconds, nanoSeconds] = process.hrtime(lastPoll);\n      return Math.floor(seconds * 1e3 + nanoSeconds / 1e6);\n    },\n    reset: () => {\n      lastPoll = process.hrtime();\n    },\n  };\n}\n\nfunction handleChildProcess(options) {\n  process.title = 'sentry-anr';\n\n  function log(message) {\n    logger.log(`[ANR child process] ${message}`);\n  }\n\n  log('Started');\n  let session;\n\n  function sendAnrEvent(frames) {\n    if (session) {\n      log('Sending abnormal session');\n      updateSession(session, { status: 'abnormal', abnormal_mechanism: 'anr_foreground' });\n      _optionalChain([getClient, 'call', _10 => _10(), 'optionalAccess', _11 => _11.sendSession, 'call', _12 => _12(session)]);\n\n      try {\n        // Notify the main process that the session has ended so the session can be cleared from the scope\n        _optionalChain([process, 'access', _13 => _13.send, 'optionalCall', _14 => _14('session-ended')]);\n      } catch (_) {\n        // ignore\n      }\n    }\n\n    captureEvent(createAnrEvent(options.anrThreshold, frames));\n\n    void flush(3000).then(() => {\n      // We only capture one event to avoid spamming users with errors\n      process.exit();\n    });\n  }\n\n  addGlobalEventProcessor(event => {\n    // Strip sdkProcessingMetadata from all child process events to remove trace info\n    delete event.sdkProcessingMetadata;\n    event.tags = {\n      ...event.tags,\n      'process.name': 'ANR',\n    };\n    return event;\n  });\n\n  let debuggerPause;\n\n  // if attachStackTrace is enabled, we'll have a debugger url to connect to\n  if (process.env.SENTRY_INSPECT_URL) {\n    log('Connecting to debugger');\n\n    debuggerPause = captureStackTrace(process.env.SENTRY_INSPECT_URL, frames => {\n      log('Capturing event with stack frames');\n      sendAnrEvent(frames);\n    });\n  }\n\n  async function watchdogTimeout() {\n    log('Watchdog timeout');\n\n    try {\n      const pauseAndCapture = await debuggerPause;\n\n      if (pauseAndCapture) {\n        log('Pausing debugger to capture stack trace');\n        pauseAndCapture();\n        return;\n      }\n    } catch (_) {\n      // ignore\n    }\n\n    log('Capturing event');\n    sendAnrEvent();\n  }\n\n  const { poll } = watchdogTimer(createHrTimer, options.pollInterval, options.anrThreshold, watchdogTimeout);\n\n  process.on('message', (msg) => {\n    if (msg.session) {\n      session = makeSession(msg.session);\n    }\n    poll();\n  });\n  process.on('disconnect', () => {\n    // Parent process has exited.\n    process.exit();\n  });\n}\n\n/**\n * Returns true if the current process is an ANR child process.\n */\nfunction isAnrChildProcess() {\n  return !!process.send && !!process.env.SENTRY_ANR_CHILD_PROCESS;\n}\n\n/**\n * **Note** This feature is still in beta so there may be breaking changes in future releases.\n *\n * Starts a child process that detects Application Not Responding (ANR) errors.\n *\n * It's important to await on the returned promise before your app code to ensure this code does not run in the ANR\n * child process.\n *\n * ```js\n * import { init, enableAnrDetection } from '@sentry/node';\n *\n * init({ dsn: \"__DSN__\" });\n *\n * // with ESM + Node 14+\n * await enableAnrDetection({ captureStackTrace: true });\n * runApp();\n *\n * // with CJS or Node 10+\n * enableAnrDetection({ captureStackTrace: true }).then(() => {\n *   runApp();\n * });\n * ```\n */\nfunction enableAnrDetection(options) {\n  // When pm2 runs the script in cluster mode, process.argv[1] is the pm2 script and process.env.pm_exec_path is the\n  // path to the entry script\n  const entryScript = options.entryScript || process.env.pm_exec_path || process.argv[1];\n\n  const anrOptions = {\n    entryScript,\n    pollInterval: options.pollInterval || DEFAULT_INTERVAL,\n    anrThreshold: options.anrThreshold || DEFAULT_HANG_THRESHOLD,\n    captureStackTrace: !!options.captureStackTrace,\n    // eslint-disable-next-line deprecation/deprecation\n    debug: !!options.debug,\n  };\n\n  if (isAnrChildProcess()) {\n    handleChildProcess(anrOptions);\n    // In the child process, the promise never resolves which stops the app code from running\n    return new Promise(() => {\n      // Never resolve\n    });\n  } else {\n    startChildProcess(anrOptions);\n    // In the main process, the promise resolves immediately\n    return Promise.resolve();\n  }\n}\n\nexport { enableAnrDetection, isAnrChildProcess };\n//# sourceMappingURL=index.js.map\n",
  "import { posix, sep } from 'path';\n\nconst isWindowsPlatform = sep === '\\\\';\n\n/** normalizes Windows paths */\nfunction normalizeWindowsPath(path) {\n  return path\n    .replace(/^[A-Z]:/, '') // remove Windows-style prefix\n    .replace(/\\\\/g, '/'); // replace all `\\` instances with `/`\n}\n\n/** Gets the module from a filename */\nfunction getModuleFromFilename(\n  filename,\n  normalizeWindowsPathSeparator = isWindowsPlatform,\n) {\n  if (!filename) {\n    return;\n  }\n\n  const normalizedFilename = normalizeWindowsPathSeparator ? normalizeWindowsPath(filename) : filename;\n\n  // eslint-disable-next-line prefer-const\n  let { root, dir, base: basename, ext } = posix.parse(normalizedFilename);\n\n  const base = (require && require.main && require.main.filename && dir) || global.process.cwd();\n\n  const normalizedBase = `${base}/`;\n\n  // It's specifically a module\n  let file = basename;\n\n  if (ext === '.js' || ext === '.mjs' || ext === '.cjs') {\n    file = file.slice(0, ext.length * -1);\n  }\n\n  if (!root && !dir) {\n    // No dirname whatsoever\n    dir = '.';\n  }\n\n  let n = dir.lastIndexOf('/node_modules/');\n  if (n > -1) {\n    // /node_modules/ is 14 chars\n    return `${dir.slice(n + 14).replace(/\\//g, '.')}:${file}`;\n  }\n  // Let's see if it's a part of the main module\n  // To be a part of main module, it has to share the same base\n  n = `${dir}/`.lastIndexOf(normalizedBase, 0);\n\n  if (n === 0) {\n    let moduleName = dir.slice(normalizedBase.length).replace(/\\//g, '.');\n    if (moduleName) {\n      moduleName += ':';\n    }\n    moduleName += file;\n    return moduleName;\n  }\n  return file;\n}\n\nexport { getModuleFromFilename };\n//# sourceMappingURL=module.js.map\n",
  "import { _optionalChain } from '@sentry/utils';\nimport { spawn } from 'child_process';\nimport { getCurrentHub, addGlobalEventProcessor, makeSession, updateSession, getClient, captureEvent, flush } from '@sentry/core';\nimport { logger, watchdogTimer } from '@sentry/utils';\nimport { captureStackTrace } from './debugger.js';\n\nconst DEFAULT_INTERVAL = 50;\nconst DEFAULT_HANG_THRESHOLD = 5000;\n\nfunction createAnrEvent(blockedMs, frames) {\n  return {\n    level: 'error',\n    exception: {\n      values: [\n        {\n          type: 'ApplicationNotResponding',\n          value: `Application Not Responding for at least ${blockedMs} ms`,\n          stacktrace: { frames },\n          mechanism: {\n            // This ensures the UI doesn't say 'Crashed in' for the stack trace\n            type: 'ANR',\n          },\n        },\n      ],\n    },\n  };\n}\n\n/**\n * Starts the node debugger and returns the inspector url.\n *\n * When inspector.url() returns undefined, it means the port is already in use so we try the next port.\n */\nfunction startInspector(startPort = 9229) {\n  // eslint-disable-next-line @typescript-eslint/no-var-requires\n  const inspector = require('inspector');\n  let inspectorUrl = undefined;\n  let port = startPort;\n\n  while (inspectorUrl === undefined && port < startPort + 100) {\n    inspector.open(port);\n    inspectorUrl = inspector.url();\n    port++;\n  }\n\n  return inspectorUrl;\n}\n\nfunction startChildProcess(options) {\n  function log(message, ...args) {\n    logger.log(`[ANR] ${message}`, ...args);\n  }\n\n  const hub = getCurrentHub();\n\n  try {\n    const env = { ...process.env };\n    env.SENTRY_ANR_CHILD_PROCESS = 'true';\n\n    if (options.captureStackTrace) {\n      env.SENTRY_INSPECT_URL = startInspector();\n    }\n\n    log(`Spawning child process with execPath:'${process.execPath}' and entryScript:'${options.entryScript}'`);\n\n    const child = spawn(process.execPath, [options.entryScript], {\n      env,\n      stdio: logger.isEnabled() ? ['inherit', 'inherit', 'inherit', 'ipc'] : ['ignore', 'ignore', 'ignore', 'ipc'],\n    });\n    // The child process should not keep the main process alive\n    child.unref();\n\n    const timer = setInterval(() => {\n      try {\n        const currentSession = _optionalChain([hub, 'access', _2 => _2.getScope, 'call', _3 => _3(), 'optionalAccess', _4 => _4.getSession, 'call', _5 => _5()]);\n        // We need to copy the session object and remove the toJSON method so it can be sent to the child process\n        // serialized without making it a SerializedSession\n        const session = currentSession ? { ...currentSession, toJSON: undefined } : undefined;\n        // message the child process to tell it the main event loop is still running\n        child.send({ session });\n      } catch (_) {\n        //\n      }\n    }, options.pollInterval);\n\n    child.on('message', (msg) => {\n      if (msg === 'session-ended') {\n        log('ANR event sent from child process. Clearing session in this process.');\n        _optionalChain([hub, 'access', _6 => _6.getScope, 'call', _7 => _7(), 'optionalAccess', _8 => _8.setSession, 'call', _9 => _9(undefined)]);\n      }\n    });\n\n    const end = (type) => {\n      return (...args) => {\n        clearInterval(timer);\n        log(`Child process ${type}`, ...args);\n      };\n    };\n\n    child.on('error', end('error'));\n    child.on('disconnect', end('disconnect'));\n    child.on('exit', end('exit'));\n  } catch (e) {\n    log('Failed to start child process', e);\n  }\n}\n\nfunction createHrTimer() {\n  let lastPoll = process.hrtime();\n\n  return {\n    getTimeMs: () => {\n      const [seconds, nanoSeconds] = process.hrtime(lastPoll);\n      return Math.floor(seconds * 1e3 + nanoSeconds / 1e6);\n    },\n    reset: () => {\n      lastPoll = process.hrtime();\n    },\n  };\n}\n\nfunction handleChildProcess(options) {\n  process.title = 'sentry-anr';\n\n  function log(message) {\n    logger.log(`[ANR child process] ${message}`);\n  }\n\n  log('Started');\n  let session;\n\n  function sendAnrEvent(frames) {\n    if (session) {\n      log('Sending abnormal session');\n      updateSession(session, { status: 'abnormal', abnormal_mechanism: 'anr_foreground' });\n      _optionalChain([getClient, 'call', _10 => _10(), 'optionalAccess', _11 => _11.sendSession, 'call', _12 => _12(session)]);\n\n      try {\n        // Notify the main process that the session has ended so the session can be cleared from the scope\n        _optionalChain([process, 'access', _13 => _13.send, 'optionalCall', _14 => _14('session-ended')]);\n      } catch (_) {\n        // ignore\n      }\n    }\n\n    captureEvent(createAnrEvent(options.anrThreshold, frames));\n\n    void flush(3000).then(() => {\n      // We only capture one event to avoid spamming users with errors\n      process.exit();\n    });\n  }\n\n  addGlobalEventProcessor(event => {\n    // Strip sdkProcessingMetadata from all child process events to remove trace info\n    delete event.sdkProcessingMetadata;\n    event.tags = {\n      ...event.tags,\n      'process.name': 'ANR',\n    };\n    return event;\n  });\n\n  let debuggerPause;\n\n  // if attachStackTrace is enabled, we'll have a debugger url to connect to\n  if (process.env.SENTRY_INSPECT_URL) {\n    log('Connecting to debugger');\n\n    debuggerPause = captureStackTrace(process.env.SENTRY_INSPECT_URL, frames => {\n      log('Capturing event with stack frames');\n      sendAnrEvent(frames);\n    });\n  }\n\n  async function watchdogTimeout() {\n    log('Watchdog timeout');\n\n    try {\n      const pauseAndCapture = await debuggerPause;\n\n      if (pauseAndCapture) {\n        log('Pausing debugger to capture stack trace');\n        pauseAndCapture();\n        return;\n      }\n    } catch (_) {\n      // ignore\n    }\n\n    log('Capturing event');\n    sendAnrEvent();\n  }\n\n  const { poll } = watchdogTimer(createHrTimer, options.pollInterval, options.anrThreshold, watchdogTimeout);\n\n  process.on('message', (msg) => {\n    if (msg.session) {\n      session = makeSession(msg.session);\n    }\n    poll();\n  });\n  process.on('disconnect', () => {\n    // Parent process has exited.\n    process.exit();\n  });\n}\n\n/**\n * Returns true if the current process is an ANR child process.\n */\nfunction isAnrChildProcess() {\n  return !!process.send && !!process.env.SENTRY_ANR_CHILD_PROCESS;\n}\n\n/**\n * **Note** This feature is still in beta so there may be breaking changes in future releases.\n *\n * Starts a child process that detects Application Not Responding (ANR) errors.\n *\n * It's important to await on the returned promise before your app code to ensure this code does not run in the ANR\n * child process.\n *\n * ```js\n * import { init, enableAnrDetection } from '@sentry/node';\n *\n * init({ dsn: \"__DSN__\" });\n *\n * // with ESM + Node 14+\n * await enableAnrDetection({ captureStackTrace: true });\n * runApp();\n *\n * // with CJS or Node 10+\n * enableAnrDetection({ captureStackTrace: true }).then(() => {\n *   runApp();\n * });\n * ```\n */\nfunction enableAnrDetection(options) {\n  // When pm2 runs the script in cluster mode, process.argv[1] is the pm2 script and process.env.pm_exec_path is the\n  // path to the entry script\n  const entryScript = options.entryScript || process.env.pm_exec_path || process.argv[1];\n\n  const anrOptions = {\n    entryScript,\n    pollInterval: options.pollInterval || DEFAULT_INTERVAL,\n    anrThreshold: options.anrThreshold || DEFAULT_HANG_THRESHOLD,\n    captureStackTrace: !!options.captureStackTrace,\n    // eslint-disable-next-line deprecation/deprecation\n    debug: !!options.debug,\n  };\n\n  if (isAnrChildProcess()) {\n    handleChildProcess(anrOptions);\n    // In the child process, the promise never resolves which stops the app code from running\n    return new Promise(() => {\n      // Never resolve\n    });\n  } else {\n    startChildProcess(anrOptions);\n    // In the main process, the promise resolves immediately\n    return Promise.resolve();\n  }\n}\n\nexport { enableAnrDetection, isAnrChildProcess };\n//# sourceMappingURL=index.js.map\n",
  "import { parseSemver } from '@sentry/utils';\n\nconst NODE_VERSION = parseSemver(process.versions.node);\n\nexport { NODE_VERSION };\n//# sourceMappingURL=nodeVersion.js.map\n",
  "import { _optionalChain } from '@sentry/utils';\nimport * as domain from 'domain';\nimport { setAsyncContextStrategy, ensureHubOnCarrier, getHubFromCarrier, setHubOnCarrier } from '@sentry/core';\n\nfunction getActiveDomain() {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-explicit-any\n  return (domain ).active ;\n}\n\nfunction getCurrentHub() {\n  const activeDomain = getActiveDomain();\n\n  // If there's no active domain, just return undefined and the global hub will be used\n  if (!activeDomain) {\n    return undefined;\n  }\n\n  ensureHubOnCarrier(activeDomain);\n\n  return getHubFromCarrier(activeDomain);\n}\n\nfunction createNewHub(parent) {\n  const carrier = {};\n  ensureHubOnCarrier(carrier, parent);\n  return getHubFromCarrier(carrier);\n}\n\nfunction runWithAsyncContext(callback, options) {\n  const activeDomain = getActiveDomain();\n\n  if (activeDomain && _optionalChain([options, 'optionalAccess', _ => _.reuseExisting])) {\n    // We're already in a domain, so we don't need to create a new one, just call the callback with the current hub\n    return callback();\n  }\n\n  const local = domain.create() ;\n\n  const parentHub = activeDomain ? getHubFromCarrier(activeDomain) : undefined;\n  const newHub = createNewHub(parentHub);\n  setHubOnCarrier(local, newHub);\n\n  return local.bind(() => {\n    return callback();\n  })();\n}\n\n/**\n * Sets the async context strategy to use Node.js domains.\n */\nfunction setDomainAsyncContextStrategy() {\n  setAsyncContextStrategy({ getCurrentHub, runWithAsyncContext });\n}\n\nexport { setDomainAsyncContextStrategy };\n//# sourceMappingURL=domain.js.map\n",
  "import { _optionalChain } from '@sentry/utils';\nimport * as domain from 'domain';\nimport { setAsyncContextStrategy, ensureHubOnCarrier, getHubFromCarrier, setHubOnCarrier } from '@sentry/core';\n\nfunction getActiveDomain() {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-explicit-any\n  return (domain ).active ;\n}\n\nfunction getCurrentHub() {\n  const activeDomain = getActiveDomain();\n\n  // If there's no active domain, just return undefined and the global hub will be used\n  if (!activeDomain) {\n    return undefined;\n  }\n\n  ensureHubOnCarrier(activeDomain);\n\n  return getHubFromCarrier(activeDomain);\n}\n\nfunction createNewHub(parent) {\n  const carrier = {};\n  ensureHubOnCarrier(carrier, parent);\n  return getHubFromCarrier(carrier);\n}\n\nfunction runWithAsyncContext(callback, options) {\n  const activeDomain = getActiveDomain();\n\n  if (activeDomain && _optionalChain([options, 'optionalAccess', _ => _.reuseExisting])) {\n    // We're already in a domain, so we don't need to create a new one, just call the callback with the current hub\n    return callback();\n  }\n\n  const local = domain.create() ;\n\n  const parentHub = activeDomain ? getHubFromCarrier(activeDomain) : undefined;\n  const newHub = createNewHub(parentHub);\n  setHubOnCarrier(local, newHub);\n\n  return local.bind(() => {\n    return callback();\n  })();\n}\n\n/**\n * Sets the async context strategy to use Node.js domains.\n */\nfunction setDomainAsyncContextStrategy() {\n  setAsyncContextStrategy({ getCurrentHub, runWithAsyncContext });\n}\n\nexport { setDomainAsyncContextStrategy };\n//# sourceMappingURL=domain.js.map\n",
  "import { _optionalChain } from '@sentry/utils';\nimport { setAsyncContextStrategy, ensureHubOnCarrier, getHubFromCarrier } from '@sentry/core';\nimport * as async_hooks from 'async_hooks';\n\nlet asyncStorage;\n\n/**\n * Sets the async context strategy to use AsyncLocalStorage which requires Node v12.17.0 or v13.10.0.\n */\nfunction setHooksAsyncContextStrategy() {\n  if (!asyncStorage) {\n    asyncStorage = new (async_hooks ).AsyncLocalStorage();\n  }\n\n  function getCurrentHub() {\n    return asyncStorage.getStore();\n  }\n\n  function createNewHub(parent) {\n    const carrier = {};\n    ensureHubOnCarrier(carrier, parent);\n    return getHubFromCarrier(carrier);\n  }\n\n  function runWithAsyncContext(callback, options) {\n    const existingHub = getCurrentHub();\n\n    if (existingHub && _optionalChain([options, 'optionalAccess', _ => _.reuseExisting])) {\n      // We're already in an async context, so we don't need to create a new one\n      // just call the callback with the current hub\n      return callback();\n    }\n\n    const newHub = createNewHub(existingHub);\n\n    return asyncStorage.run(newHub, () => {\n      return callback();\n    });\n  }\n\n  setAsyncContextStrategy({ getCurrentHub, runWithAsyncContext });\n}\n\nexport { setHooksAsyncContextStrategy };\n//# sourceMappingURL=hooks.js.map\n",
  "import { NODE_VERSION } from '../nodeVersion.js';\nimport { setDomainAsyncContextStrategy } from './domain.js';\nimport { setHooksAsyncContextStrategy } from './hooks.js';\n\n/**\n * Sets the correct async context strategy for Node.js\n *\n * Node.js >= 14 uses AsyncLocalStorage\n * Node.js < 14 uses domains\n */\nfunction setNodeAsyncContextStrategy() {\n  if (NODE_VERSION.major && NODE_VERSION.major >= 14) {\n    setHooksAsyncContextStrategy();\n  } else {\n    setDomainAsyncContextStrategy();\n  }\n}\n\nexport { setNodeAsyncContextStrategy };\n//# sourceMappingURL=index.js.map\n",
  "import * as util from 'util';\nimport { getCurrentHub } from '@sentry/core';\nimport { addConsoleInstrumentationHandler, severityLevelFromString } from '@sentry/utils';\n\n/** Console module integration */\nclass Console  {constructor() { Console.prototype.__init.call(this); }\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'Console';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = Console.id;}\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce() {\n    addConsoleInstrumentationHandler(({ args, level }) => {\n      const hub = getCurrentHub();\n\n      if (!hub.getIntegration(Console)) {\n        return;\n      }\n\n      hub.addBreadcrumb(\n        {\n          category: 'console',\n          level: severityLevelFromString(level),\n          message: util.format.apply(undefined, args),\n        },\n        {\n          input: [...args],\n          level,\n        },\n      );\n    });\n  }\n} Console.__initStatic();\n\nexport { Console };\n//# sourceMappingURL=console.js.map\n",
  "import * as util from 'util';\nimport { getCurrentHub } from '@sentry/core';\nimport { addConsoleInstrumentationHandler, severityLevelFromString } from '@sentry/utils';\n\n/** Console module integration */\nclass Console  {constructor() { Console.prototype.__init.call(this); }\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'Console';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = Console.id;}\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce() {\n    addConsoleInstrumentationHandler(({ args, level }) => {\n      const hub = getCurrentHub();\n\n      if (!hub.getIntegration(Console)) {\n        return;\n      }\n\n      hub.addBreadcrumb(\n        {\n          category: 'console',\n          level: severityLevelFromString(level),\n          message: util.format.apply(undefined, args),\n        },\n        {\n          input: [...args],\n          level,\n        },\n      );\n    });\n  }\n} Console.__initStatic();\n\nexport { Console };\n//# sourceMappingURL=console.js.map\n",
  "/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nconst DEBUG_BUILD = (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__);\n\nexport { DEBUG_BUILD };\n//# sourceMappingURL=debug-build.js.map\n",
  "import { _optionalChain } from '@sentry/utils';\nimport { URL } from 'url';\nimport { NODE_VERSION } from '../../nodeVersion.js';\n\n/**\n * Assembles a URL that's passed to the users to filter on.\n * It can include raw (potentially PII containing) data, which we'll allow users to access to filter\n * but won't include in spans or breadcrumbs.\n *\n * @param requestOptions RequestOptions object containing the component parts for a URL\n * @returns Fully-formed URL\n */\n// TODO (v8): This function should include auth, query and fragment (it's breaking, so we need to wait for v8)\nfunction extractRawUrl(requestOptions) {\n  const { protocol, hostname, port } = parseRequestOptions(requestOptions);\n  const path = requestOptions.path ? requestOptions.path : '/';\n  return `${protocol}//${hostname}${port}${path}`;\n}\n\n/**\n * Assemble a URL to be used for breadcrumbs and spans.\n *\n * @param requestOptions RequestOptions object containing the component parts for a URL\n * @returns Fully-formed URL\n */\nfunction extractUrl(requestOptions) {\n  const { protocol, hostname, port } = parseRequestOptions(requestOptions);\n\n  const path = requestOptions.pathname || '/';\n\n  // always filter authority, see https://develop.sentry.dev/sdk/data-handling/#structuring-data\n  const authority = requestOptions.auth ? redactAuthority(requestOptions.auth) : '';\n\n  return `${protocol}//${authority}${hostname}${port}${path}`;\n}\n\nfunction redactAuthority(auth) {\n  const [user, password] = auth.split(':');\n  return `${user ? '[Filtered]' : ''}:${password ? '[Filtered]' : ''}@`;\n}\n\n/**\n * Handle various edge cases in the span description (for spans representing http(s) requests).\n *\n * @param description current `description` property of the span representing the request\n * @param requestOptions Configuration data for the request\n * @param Request Request object\n *\n * @returns The cleaned description\n */\nfunction cleanSpanDescription(\n  description,\n  requestOptions,\n  request,\n) {\n  // nothing to clean\n  if (!description) {\n    return description;\n  }\n\n  // eslint-disable-next-line prefer-const\n  let [method, requestUrl] = description.split(' ');\n\n  // superagent sticks the protocol in a weird place (we check for host because if both host *and* protocol are missing,\n  // we're likely dealing with an internal route and this doesn't apply)\n  if (requestOptions.host && !requestOptions.protocol) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-explicit-any\n    requestOptions.protocol = _optionalChain([(request ), 'optionalAccess', _ => _.agent, 'optionalAccess', _2 => _2.protocol]); // worst comes to worst, this is undefined and nothing changes\n    // This URL contains the filtered authority ([filtered]:[filtered]@example.com) but no fragment or query params\n    requestUrl = extractUrl(requestOptions);\n  }\n\n  // internal routes can end up starting with a triple slash rather than a single one\n  if (_optionalChain([requestUrl, 'optionalAccess', _3 => _3.startsWith, 'call', _4 => _4('///')])) {\n    requestUrl = requestUrl.slice(2);\n  }\n\n  return `${method} ${requestUrl}`;\n}\n\n// the node types are missing a few properties which node's `urlToOptions` function spits out\n\n/**\n * Convert a URL object into a RequestOptions object.\n *\n * Copied from Node's internals (where it's used in http(s).request() and http(s).get()), modified only to use the\n * RequestOptions type above.\n *\n * See https://github.com/nodejs/node/blob/master/lib/internal/url.js.\n */\nfunction urlToOptions(url) {\n  const options = {\n    protocol: url.protocol,\n    hostname:\n      typeof url.hostname === 'string' && url.hostname.startsWith('[') ? url.hostname.slice(1, -1) : url.hostname,\n    hash: url.hash,\n    search: url.search,\n    pathname: url.pathname,\n    path: `${url.pathname || ''}${url.search || ''}`,\n    href: url.href,\n  };\n  if (url.port !== '') {\n    options.port = Number(url.port);\n  }\n  if (url.username || url.password) {\n    options.auth = `${url.username}:${url.password}`;\n  }\n  return options;\n}\n\n/**\n * Normalize inputs to `http(s).request()` and `http(s).get()`.\n *\n * Legal inputs to `http(s).request()` and `http(s).get()` can take one of ten forms:\n *     [ RequestOptions | string | URL ],\n *     [ RequestOptions | string | URL, RequestCallback ],\n *     [ string | URL, RequestOptions ], and\n *     [ string | URL, RequestOptions, RequestCallback ].\n *\n * This standardizes to one of two forms: [ RequestOptions ] and [ RequestOptions, RequestCallback ]. A similar thing is\n * done as the first step of `http(s).request()` and `http(s).get()`; this just does it early so that we can interact\n * with the args in a standard way.\n *\n * @param requestArgs The inputs to `http(s).request()` or `http(s).get()`, as an array.\n *\n * @returns Equivalent args of the form [ RequestOptions ] or [ RequestOptions, RequestCallback ].\n */\nfunction normalizeRequestArgs(\n  httpModule,\n  requestArgs,\n) {\n  let callback, requestOptions;\n\n  // pop off the callback, if there is one\n  if (typeof requestArgs[requestArgs.length - 1] === 'function') {\n    callback = requestArgs.pop() ;\n  }\n\n  // create a RequestOptions object of whatever's at index 0\n  if (typeof requestArgs[0] === 'string') {\n    requestOptions = urlToOptions(new URL(requestArgs[0]));\n  } else if (requestArgs[0] instanceof URL) {\n    requestOptions = urlToOptions(requestArgs[0]);\n  } else {\n    requestOptions = requestArgs[0];\n\n    try {\n      const parsed = new URL(\n        requestOptions.path || '',\n        `${requestOptions.protocol || 'http:'}//${requestOptions.hostname}`,\n      );\n      requestOptions = {\n        pathname: parsed.pathname,\n        search: parsed.search,\n        hash: parsed.hash,\n        ...requestOptions,\n      };\n    } catch (e) {\n      // ignore\n    }\n  }\n\n  // if the options were given separately from the URL, fold them in\n  if (requestArgs.length === 2) {\n    requestOptions = { ...requestOptions, ...requestArgs[1] };\n  }\n\n  // Figure out the protocol if it's currently missing\n  if (requestOptions.protocol === undefined) {\n    // Worst case we end up populating protocol with undefined, which it already is\n    /* eslint-disable @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-explicit-any */\n\n    // NOTE: Prior to Node 9, `https` used internals of `http` module, thus we don't patch it.\n    // Because of that, we cannot rely on `httpModule` to provide us with valid protocol,\n    // as it will always return `http`, even when using `https` module.\n    //\n    // See test/integrations/http.test.ts for more details on Node <=v8 protocol issue.\n    if (NODE_VERSION.major && NODE_VERSION.major > 8) {\n      requestOptions.protocol =\n        _optionalChain([(_optionalChain([httpModule, 'optionalAccess', _5 => _5.globalAgent]) ), 'optionalAccess', _6 => _6.protocol]) ||\n        _optionalChain([(requestOptions.agent ), 'optionalAccess', _7 => _7.protocol]) ||\n        _optionalChain([(requestOptions._defaultAgent ), 'optionalAccess', _8 => _8.protocol]);\n    } else {\n      requestOptions.protocol =\n        _optionalChain([(requestOptions.agent ), 'optionalAccess', _9 => _9.protocol]) ||\n        _optionalChain([(requestOptions._defaultAgent ), 'optionalAccess', _10 => _10.protocol]) ||\n        _optionalChain([(_optionalChain([httpModule, 'optionalAccess', _11 => _11.globalAgent]) ), 'optionalAccess', _12 => _12.protocol]);\n    }\n    /* eslint-enable @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-explicit-any */\n  }\n\n  // return args in standardized form\n  if (callback) {\n    return [requestOptions, callback];\n  } else {\n    return [requestOptions];\n  }\n}\n\nfunction parseRequestOptions(requestOptions)\n\n {\n  const protocol = requestOptions.protocol || '';\n  const hostname = requestOptions.hostname || requestOptions.host || '';\n  // Don't log standard :80 (http) and :443 (https) ports to reduce the noise\n  // Also don't add port if the hostname already includes a port\n  const port =\n    !requestOptions.port || requestOptions.port === 80 || requestOptions.port === 443 || /^(.*):(\\d+)$/.test(hostname)\n      ? ''\n      : `:${requestOptions.port}`;\n\n  return { protocol, hostname, port };\n}\n\nexport { cleanSpanDescription, extractRawUrl, extractUrl, normalizeRequestArgs, urlToOptions };\n//# sourceMappingURL=http.js.map\n",
  "import { _optionalChain } from '@sentry/utils';\nimport { URL } from 'url';\nimport { NODE_VERSION } from '../../nodeVersion.js';\n\n/**\n * Assembles a URL that's passed to the users to filter on.\n * It can include raw (potentially PII containing) data, which we'll allow users to access to filter\n * but won't include in spans or breadcrumbs.\n *\n * @param requestOptions RequestOptions object containing the component parts for a URL\n * @returns Fully-formed URL\n */\n// TODO (v8): This function should include auth, query and fragment (it's breaking, so we need to wait for v8)\nfunction extractRawUrl(requestOptions) {\n  const { protocol, hostname, port } = parseRequestOptions(requestOptions);\n  const path = requestOptions.path ? requestOptions.path : '/';\n  return `${protocol}//${hostname}${port}${path}`;\n}\n\n/**\n * Assemble a URL to be used for breadcrumbs and spans.\n *\n * @param requestOptions RequestOptions object containing the component parts for a URL\n * @returns Fully-formed URL\n */\nfunction extractUrl(requestOptions) {\n  const { protocol, hostname, port } = parseRequestOptions(requestOptions);\n\n  const path = requestOptions.pathname || '/';\n\n  // always filter authority, see https://develop.sentry.dev/sdk/data-handling/#structuring-data\n  const authority = requestOptions.auth ? redactAuthority(requestOptions.auth) : '';\n\n  return `${protocol}//${authority}${hostname}${port}${path}`;\n}\n\nfunction redactAuthority(auth) {\n  const [user, password] = auth.split(':');\n  return `${user ? '[Filtered]' : ''}:${password ? '[Filtered]' : ''}@`;\n}\n\n/**\n * Handle various edge cases in the span description (for spans representing http(s) requests).\n *\n * @param description current `description` property of the span representing the request\n * @param requestOptions Configuration data for the request\n * @param Request Request object\n *\n * @returns The cleaned description\n */\nfunction cleanSpanDescription(\n  description,\n  requestOptions,\n  request,\n) {\n  // nothing to clean\n  if (!description) {\n    return description;\n  }\n\n  // eslint-disable-next-line prefer-const\n  let [method, requestUrl] = description.split(' ');\n\n  // superagent sticks the protocol in a weird place (we check for host because if both host *and* protocol are missing,\n  // we're likely dealing with an internal route and this doesn't apply)\n  if (requestOptions.host && !requestOptions.protocol) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-explicit-any\n    requestOptions.protocol = _optionalChain([(request ), 'optionalAccess', _ => _.agent, 'optionalAccess', _2 => _2.protocol]); // worst comes to worst, this is undefined and nothing changes\n    // This URL contains the filtered authority ([filtered]:[filtered]@example.com) but no fragment or query params\n    requestUrl = extractUrl(requestOptions);\n  }\n\n  // internal routes can end up starting with a triple slash rather than a single one\n  if (_optionalChain([requestUrl, 'optionalAccess', _3 => _3.startsWith, 'call', _4 => _4('///')])) {\n    requestUrl = requestUrl.slice(2);\n  }\n\n  return `${method} ${requestUrl}`;\n}\n\n// the node types are missing a few properties which node's `urlToOptions` function spits out\n\n/**\n * Convert a URL object into a RequestOptions object.\n *\n * Copied from Node's internals (where it's used in http(s).request() and http(s).get()), modified only to use the\n * RequestOptions type above.\n *\n * See https://github.com/nodejs/node/blob/master/lib/internal/url.js.\n */\nfunction urlToOptions(url) {\n  const options = {\n    protocol: url.protocol,\n    hostname:\n      typeof url.hostname === 'string' && url.hostname.startsWith('[') ? url.hostname.slice(1, -1) : url.hostname,\n    hash: url.hash,\n    search: url.search,\n    pathname: url.pathname,\n    path: `${url.pathname || ''}${url.search || ''}`,\n    href: url.href,\n  };\n  if (url.port !== '') {\n    options.port = Number(url.port);\n  }\n  if (url.username || url.password) {\n    options.auth = `${url.username}:${url.password}`;\n  }\n  return options;\n}\n\n/**\n * Normalize inputs to `http(s).request()` and `http(s).get()`.\n *\n * Legal inputs to `http(s).request()` and `http(s).get()` can take one of ten forms:\n *     [ RequestOptions | string | URL ],\n *     [ RequestOptions | string | URL, RequestCallback ],\n *     [ string | URL, RequestOptions ], and\n *     [ string | URL, RequestOptions, RequestCallback ].\n *\n * This standardizes to one of two forms: [ RequestOptions ] and [ RequestOptions, RequestCallback ]. A similar thing is\n * done as the first step of `http(s).request()` and `http(s).get()`; this just does it early so that we can interact\n * with the args in a standard way.\n *\n * @param requestArgs The inputs to `http(s).request()` or `http(s).get()`, as an array.\n *\n * @returns Equivalent args of the form [ RequestOptions ] or [ RequestOptions, RequestCallback ].\n */\nfunction normalizeRequestArgs(\n  httpModule,\n  requestArgs,\n) {\n  let callback, requestOptions;\n\n  // pop off the callback, if there is one\n  if (typeof requestArgs[requestArgs.length - 1] === 'function') {\n    callback = requestArgs.pop() ;\n  }\n\n  // create a RequestOptions object of whatever's at index 0\n  if (typeof requestArgs[0] === 'string') {\n    requestOptions = urlToOptions(new URL(requestArgs[0]));\n  } else if (requestArgs[0] instanceof URL) {\n    requestOptions = urlToOptions(requestArgs[0]);\n  } else {\n    requestOptions = requestArgs[0];\n\n    try {\n      const parsed = new URL(\n        requestOptions.path || '',\n        `${requestOptions.protocol || 'http:'}//${requestOptions.hostname}`,\n      );\n      requestOptions = {\n        pathname: parsed.pathname,\n        search: parsed.search,\n        hash: parsed.hash,\n        ...requestOptions,\n      };\n    } catch (e) {\n      // ignore\n    }\n  }\n\n  // if the options were given separately from the URL, fold them in\n  if (requestArgs.length === 2) {\n    requestOptions = { ...requestOptions, ...requestArgs[1] };\n  }\n\n  // Figure out the protocol if it's currently missing\n  if (requestOptions.protocol === undefined) {\n    // Worst case we end up populating protocol with undefined, which it already is\n    /* eslint-disable @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-explicit-any */\n\n    // NOTE: Prior to Node 9, `https` used internals of `http` module, thus we don't patch it.\n    // Because of that, we cannot rely on `httpModule` to provide us with valid protocol,\n    // as it will always return `http`, even when using `https` module.\n    //\n    // See test/integrations/http.test.ts for more details on Node <=v8 protocol issue.\n    if (NODE_VERSION.major && NODE_VERSION.major > 8) {\n      requestOptions.protocol =\n        _optionalChain([(_optionalChain([httpModule, 'optionalAccess', _5 => _5.globalAgent]) ), 'optionalAccess', _6 => _6.protocol]) ||\n        _optionalChain([(requestOptions.agent ), 'optionalAccess', _7 => _7.protocol]) ||\n        _optionalChain([(requestOptions._defaultAgent ), 'optionalAccess', _8 => _8.protocol]);\n    } else {\n      requestOptions.protocol =\n        _optionalChain([(requestOptions.agent ), 'optionalAccess', _9 => _9.protocol]) ||\n        _optionalChain([(requestOptions._defaultAgent ), 'optionalAccess', _10 => _10.protocol]) ||\n        _optionalChain([(_optionalChain([httpModule, 'optionalAccess', _11 => _11.globalAgent]) ), 'optionalAccess', _12 => _12.protocol]);\n    }\n    /* eslint-enable @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-explicit-any */\n  }\n\n  // return args in standardized form\n  if (callback) {\n    return [requestOptions, callback];\n  } else {\n    return [requestOptions];\n  }\n}\n\nfunction parseRequestOptions(requestOptions)\n\n {\n  const protocol = requestOptions.protocol || '';\n  const hostname = requestOptions.hostname || requestOptions.host || '';\n  // Don't log standard :80 (http) and :443 (https) ports to reduce the noise\n  // Also don't add port if the hostname already includes a port\n  const port =\n    !requestOptions.port || requestOptions.port === 80 || requestOptions.port === 443 || /^(.*):(\\d+)$/.test(hostname)\n      ? ''\n      : `:${requestOptions.port}`;\n\n  return { protocol, hostname, port };\n}\n\nexport { cleanSpanDescription, extractRawUrl, extractUrl, normalizeRequestArgs, urlToOptions };\n//# sourceMappingURL=http.js.map\n",
  "import { _optionalChain } from '@sentry/utils';\nimport { isSentryRequestUrl, getCurrentHub, getDynamicSamplingContextFromClient } from '@sentry/core';\nimport { logger, fill, LRUMap, generateSentryTraceHeader, dynamicSamplingContextToSentryBaggageHeader, stringMatchesSomePattern } from '@sentry/utils';\nimport { DEBUG_BUILD } from '../debug-build.js';\nimport { NODE_VERSION } from '../nodeVersion.js';\nimport { normalizeRequestArgs, extractRawUrl, extractUrl, cleanSpanDescription } from './utils/http.js';\n\n/**\n * The http module integration instruments Node's internal http module. It creates breadcrumbs, transactions for outgoing\n * http requests and attaches trace data when tracing is enabled via its `tracing` option.\n */\nclass Http  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'Http';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = Http.id;}\n\n  /**\n   * @inheritDoc\n   */\n   constructor(options = {}) {Http.prototype.__init.call(this);\n    this._breadcrumbs = typeof options.breadcrumbs === 'undefined' ? true : options.breadcrumbs;\n    this._tracing = !options.tracing ? undefined : options.tracing === true ? {} : options.tracing;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce(\n    _addGlobalEventProcessor,\n    setupOnceGetCurrentHub,\n  ) {\n    // No need to instrument if we don't want to track anything\n    if (!this._breadcrumbs && !this._tracing) {\n      return;\n    }\n\n    const clientOptions = _optionalChain([setupOnceGetCurrentHub, 'call', _ => _(), 'access', _2 => _2.getClient, 'call', _3 => _3(), 'optionalAccess', _4 => _4.getOptions, 'call', _5 => _5()]);\n\n    // Do not auto-instrument for other instrumenter\n    if (clientOptions && clientOptions.instrumenter !== 'sentry') {\n      DEBUG_BUILD && logger.log('HTTP Integration is skipped because of instrumenter configuration.');\n      return;\n    }\n\n    const shouldCreateSpanForRequest =\n      // eslint-disable-next-line deprecation/deprecation\n      _optionalChain([this, 'access', _6 => _6._tracing, 'optionalAccess', _7 => _7.shouldCreateSpanForRequest]) || _optionalChain([clientOptions, 'optionalAccess', _8 => _8.shouldCreateSpanForRequest]);\n    // eslint-disable-next-line deprecation/deprecation\n    const tracePropagationTargets = _optionalChain([clientOptions, 'optionalAccess', _9 => _9.tracePropagationTargets]) || _optionalChain([this, 'access', _10 => _10._tracing, 'optionalAccess', _11 => _11.tracePropagationTargets]);\n\n    // eslint-disable-next-line @typescript-eslint/no-var-requires\n    const httpModule = require('http');\n    const wrappedHttpHandlerMaker = _createWrappedRequestMethodFactory(\n      httpModule,\n      this._breadcrumbs,\n      shouldCreateSpanForRequest,\n      tracePropagationTargets,\n    );\n    fill(httpModule, 'get', wrappedHttpHandlerMaker);\n    fill(httpModule, 'request', wrappedHttpHandlerMaker);\n\n    // NOTE: Prior to Node 9, `https` used internals of `http` module, thus we don't patch it.\n    // If we do, we'd get double breadcrumbs and double spans for `https` calls.\n    // It has been changed in Node 9, so for all versions equal and above, we patch `https` separately.\n    if (NODE_VERSION.major && NODE_VERSION.major > 8) {\n      // eslint-disable-next-line @typescript-eslint/no-var-requires\n      const httpsModule = require('https');\n      const wrappedHttpsHandlerMaker = _createWrappedRequestMethodFactory(\n        httpsModule,\n        this._breadcrumbs,\n        shouldCreateSpanForRequest,\n        tracePropagationTargets,\n      );\n      fill(httpsModule, 'get', wrappedHttpsHandlerMaker);\n      fill(httpsModule, 'request', wrappedHttpsHandlerMaker);\n    }\n  }\n}Http.__initStatic();\n\n// for ease of reading below\n\n/**\n * Function which creates a function which creates wrapped versions of internal `request` and `get` calls within `http`\n * and `https` modules. (NB: Not a typo - this is a creator^2!)\n *\n * @param breadcrumbsEnabled Whether or not to record outgoing requests as breadcrumbs\n * @param tracingEnabled Whether or not to record outgoing requests as tracing spans\n *\n * @returns A function which accepts the exiting handler and returns a wrapped handler\n */\nfunction _createWrappedRequestMethodFactory(\n  httpModule,\n  breadcrumbsEnabled,\n  shouldCreateSpanForRequest,\n  tracePropagationTargets,\n) {\n  // We're caching results so we don't have to recompute regexp every time we create a request.\n  const createSpanUrlMap = new LRUMap(100);\n  const headersUrlMap = new LRUMap(100);\n\n  const shouldCreateSpan = (url) => {\n    if (shouldCreateSpanForRequest === undefined) {\n      return true;\n    }\n\n    const cachedDecision = createSpanUrlMap.get(url);\n    if (cachedDecision !== undefined) {\n      return cachedDecision;\n    }\n\n    const decision = shouldCreateSpanForRequest(url);\n    createSpanUrlMap.set(url, decision);\n    return decision;\n  };\n\n  const shouldAttachTraceData = (url) => {\n    if (tracePropagationTargets === undefined) {\n      return true;\n    }\n\n    const cachedDecision = headersUrlMap.get(url);\n    if (cachedDecision !== undefined) {\n      return cachedDecision;\n    }\n\n    const decision = stringMatchesSomePattern(url, tracePropagationTargets);\n    headersUrlMap.set(url, decision);\n    return decision;\n  };\n\n  /**\n   * Captures Breadcrumb based on provided request/response pair\n   */\n  function addRequestBreadcrumb(\n    event,\n    requestSpanData,\n    req,\n    res,\n  ) {\n    if (!getCurrentHub().getIntegration(Http)) {\n      return;\n    }\n\n    getCurrentHub().addBreadcrumb(\n      {\n        category: 'http',\n        data: {\n          status_code: res && res.statusCode,\n          ...requestSpanData,\n        },\n        type: 'http',\n      },\n      {\n        event,\n        request: req,\n        response: res,\n      },\n    );\n  }\n\n  return function wrappedRequestMethodFactory(originalRequestMethod) {\n    return function wrappedMethod( ...args) {\n      const requestArgs = normalizeRequestArgs(httpModule, args);\n      const requestOptions = requestArgs[0];\n      // eslint-disable-next-line deprecation/deprecation\n      const rawRequestUrl = extractRawUrl(requestOptions);\n      const requestUrl = extractUrl(requestOptions);\n\n      // we don't want to record requests to Sentry as either breadcrumbs or spans, so just use the original method\n      if (isSentryRequestUrl(requestUrl, getCurrentHub())) {\n        return originalRequestMethod.apply(httpModule, requestArgs);\n      }\n\n      const hub = getCurrentHub();\n      const scope = hub.getScope();\n      const parentSpan = scope.getSpan();\n\n      const data = getRequestSpanData(requestUrl, requestOptions);\n\n      const requestSpan = shouldCreateSpan(rawRequestUrl)\n        ? _optionalChain([parentSpan, 'optionalAccess', _12 => _12.startChild, 'call', _13 => _13({\n            op: 'http.client',\n            origin: 'auto.http.node.http',\n            description: `${data['http.method']} ${data.url}`,\n            data,\n          })])\n        : undefined;\n\n      if (shouldAttachTraceData(rawRequestUrl)) {\n        if (requestSpan) {\n          const sentryTraceHeader = requestSpan.toTraceparent();\n          const dynamicSamplingContext = _optionalChain([requestSpan, 'optionalAccess', _14 => _14.transaction, 'optionalAccess', _15 => _15.getDynamicSamplingContext, 'call', _16 => _16()]);\n          addHeadersToRequestOptions(requestOptions, requestUrl, sentryTraceHeader, dynamicSamplingContext);\n        } else {\n          const client = hub.getClient();\n          const { traceId, sampled, dsc } = scope.getPropagationContext();\n          const sentryTraceHeader = generateSentryTraceHeader(traceId, undefined, sampled);\n          const dynamicSamplingContext =\n            dsc || (client ? getDynamicSamplingContextFromClient(traceId, client, scope) : undefined);\n          addHeadersToRequestOptions(requestOptions, requestUrl, sentryTraceHeader, dynamicSamplingContext);\n        }\n      } else {\n        DEBUG_BUILD &&\n          logger.log(\n            `[Tracing] Not adding sentry-trace header to outgoing request (${requestUrl}) due to mismatching tracePropagationTargets option.`,\n          );\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      return originalRequestMethod\n        .apply(httpModule, requestArgs)\n        .once('response', function ( res) {\n          // eslint-disable-next-line @typescript-eslint/no-this-alias\n          const req = this;\n          if (breadcrumbsEnabled) {\n            addRequestBreadcrumb('response', data, req, res);\n          }\n          if (requestSpan) {\n            if (res.statusCode) {\n              requestSpan.setHttpStatus(res.statusCode);\n            }\n            requestSpan.description = cleanSpanDescription(requestSpan.description, requestOptions, req);\n            requestSpan.finish();\n          }\n        })\n        .once('error', function () {\n          // eslint-disable-next-line @typescript-eslint/no-this-alias\n          const req = this;\n\n          if (breadcrumbsEnabled) {\n            addRequestBreadcrumb('error', data, req);\n          }\n          if (requestSpan) {\n            requestSpan.setHttpStatus(500);\n            requestSpan.description = cleanSpanDescription(requestSpan.description, requestOptions, req);\n            requestSpan.finish();\n          }\n        });\n    };\n  };\n}\n\nfunction addHeadersToRequestOptions(\n  requestOptions,\n  requestUrl,\n  sentryTraceHeader,\n  dynamicSamplingContext,\n) {\n  // Don't overwrite sentry-trace and baggage header if it's already set.\n  const headers = requestOptions.headers || {};\n  if (headers['sentry-trace']) {\n    return;\n  }\n\n  DEBUG_BUILD &&\n    logger.log(`[Tracing] Adding sentry-trace header ${sentryTraceHeader} to outgoing request to \"${requestUrl}\": `);\n  const sentryBaggage = dynamicSamplingContextToSentryBaggageHeader(dynamicSamplingContext);\n  const sentryBaggageHeader =\n    sentryBaggage && sentryBaggage.length > 0 ? normalizeBaggageHeader(requestOptions, sentryBaggage) : undefined;\n\n  requestOptions.headers = {\n    ...requestOptions.headers,\n    'sentry-trace': sentryTraceHeader,\n    // Setting a header to `undefined` will crash in node so we only set the baggage header when it's defined\n    ...(sentryBaggageHeader && { baggage: sentryBaggageHeader }),\n  };\n}\n\nfunction getRequestSpanData(requestUrl, requestOptions) {\n  const method = requestOptions.method || 'GET';\n  const data = {\n    url: requestUrl,\n    'http.method': method,\n  };\n  if (requestOptions.hash) {\n    // strip leading \"#\"\n    data['http.fragment'] = requestOptions.hash.substring(1);\n  }\n  if (requestOptions.search) {\n    // strip leading \"?\"\n    data['http.query'] = requestOptions.search.substring(1);\n  }\n  return data;\n}\n\nfunction normalizeBaggageHeader(\n  requestOptions,\n  sentryBaggageHeader,\n) {\n  if (!requestOptions.headers || !requestOptions.headers.baggage) {\n    return sentryBaggageHeader;\n  } else if (!sentryBaggageHeader) {\n    return requestOptions.headers.baggage ;\n  } else if (Array.isArray(requestOptions.headers.baggage)) {\n    return [...requestOptions.headers.baggage, sentryBaggageHeader];\n  }\n  // Type-cast explanation:\n  // Technically this the following could be of type `(number | string)[]` but for the sake of simplicity\n  // we say this is undefined behaviour, since it would not be baggage spec conform if the user did this.\n  return [requestOptions.headers.baggage, sentryBaggageHeader] ;\n}\n\nexport { Http };\n//# sourceMappingURL=http.js.map\n",
  "import { getClient } from '@sentry/core';\nimport { consoleSandbox, logger } from '@sentry/utils';\nimport { DEBUG_BUILD } from '../../debug-build.js';\n\nconst DEFAULT_SHUTDOWN_TIMEOUT = 2000;\n\n/**\n * @hidden\n */\nfunction logAndExitProcess(error) {\n  consoleSandbox(() => {\n    // eslint-disable-next-line no-console\n    console.error(error);\n  });\n\n  const client = getClient();\n\n  if (client === undefined) {\n    DEBUG_BUILD && logger.warn('No NodeClient was defined, we are exiting the process now.');\n    global.process.exit(1);\n  }\n\n  const options = client.getOptions();\n  const timeout =\n    (options && options.shutdownTimeout && options.shutdownTimeout > 0 && options.shutdownTimeout) ||\n    DEFAULT_SHUTDOWN_TIMEOUT;\n  client.close(timeout).then(\n    (result) => {\n      if (!result) {\n        DEBUG_BUILD && logger.warn('We reached the timeout for emptying the request buffer, still exiting now!');\n      }\n      global.process.exit(1);\n    },\n    error => {\n      DEBUG_BUILD && logger.error(error);\n    },\n  );\n}\n\nexport { logAndExitProcess };\n//# sourceMappingURL=errorhandling.js.map\n",
  "import { getClient, getCurrentHub } from '@sentry/core';\nimport { logger } from '@sentry/utils';\nimport { DEBUG_BUILD } from '../debug-build.js';\nimport { logAndExitProcess } from './utils/errorhandling.js';\n\n/** Global Exception handler */\nclass OnUncaughtException  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'OnUncaughtException';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = OnUncaughtException.id;}\n\n  /**\n   * @inheritDoc\n   */\n    __init2() {this.handler = this._makeErrorHandler();}\n\n  // CAREFUL: Please think twice before updating the way _options looks because the Next.js SDK depends on it in `index.server.ts`\n\n  /**\n   * @inheritDoc\n   */\n   constructor(options = {}) {OnUncaughtException.prototype.__init.call(this);OnUncaughtException.prototype.__init2.call(this);\n    this._options = {\n      exitEvenIfOtherHandlersAreRegistered: true,\n      ...options,\n    };\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce() {\n    global.process.on('uncaughtException', this.handler);\n  }\n\n  /**\n   * @hidden\n   */\n   _makeErrorHandler() {\n    const timeout = 2000;\n    let caughtFirstError = false;\n    let caughtSecondError = false;\n    let calledFatalError = false;\n    let firstError;\n\n    return (error) => {\n      let onFatalError = logAndExitProcess;\n      const client = getClient();\n\n      if (this._options.onFatalError) {\n        onFatalError = this._options.onFatalError;\n      } else if (client && client.getOptions().onFatalError) {\n        onFatalError = client.getOptions().onFatalError ;\n      }\n\n      // Attaching a listener to `uncaughtException` will prevent the node process from exiting. We generally do not\n      // want to alter this behaviour so we check for other listeners that users may have attached themselves and adjust\n      // exit behaviour of the SDK accordingly:\n      // - If other listeners are attached, do not exit.\n      // - If the only listener attached is ours, exit.\n      const userProvidedListenersCount = (\n        global.process.listeners('uncaughtException')\n      ).reduce((acc, listener) => {\n        if (\n          // There are 3 listeners we ignore:\n          listener.name === 'domainUncaughtExceptionClear' || // as soon as we're using domains this listener is attached by node itself\n          (listener.tag && listener.tag === 'sentry_tracingErrorCallback') || // the handler we register for tracing\n          listener === this.handler // the handler we register in this integration\n        ) {\n          return acc;\n        } else {\n          return acc + 1;\n        }\n      }, 0);\n\n      const processWouldExit = userProvidedListenersCount === 0;\n      const shouldApplyFatalHandlingLogic = this._options.exitEvenIfOtherHandlersAreRegistered || processWouldExit;\n\n      if (!caughtFirstError) {\n        const hub = getCurrentHub();\n\n        // this is the first uncaught error and the ultimate reason for shutting down\n        // we want to do absolutely everything possible to ensure it gets captured\n        // also we want to make sure we don't go recursion crazy if more errors happen after this one\n        firstError = error;\n        caughtFirstError = true;\n\n        if (hub.getIntegration(OnUncaughtException)) {\n          hub.withScope((scope) => {\n            scope.setLevel('fatal');\n            hub.captureException(error, {\n              originalException: error,\n              data: { mechanism: { handled: false, type: 'onuncaughtexception' } },\n            });\n            if (!calledFatalError && shouldApplyFatalHandlingLogic) {\n              calledFatalError = true;\n              onFatalError(error);\n            }\n          });\n        } else {\n          if (!calledFatalError && shouldApplyFatalHandlingLogic) {\n            calledFatalError = true;\n            onFatalError(error);\n          }\n        }\n      } else {\n        if (shouldApplyFatalHandlingLogic) {\n          if (calledFatalError) {\n            // we hit an error *after* calling onFatalError - pretty boned at this point, just shut it down\n            DEBUG_BUILD &&\n              logger.warn(\n                'uncaught exception after calling fatal error shutdown callback - this is bad! forcing shutdown',\n              );\n            logAndExitProcess(error);\n          } else if (!caughtSecondError) {\n            // two cases for how we can hit this branch:\n            //   - capturing of first error blew up and we just caught the exception from that\n            //     - quit trying to capture, proceed with shutdown\n            //   - a second independent error happened while waiting for first error to capture\n            //     - want to avoid causing premature shutdown before first error capture finishes\n            // it's hard to immediately tell case 1 from case 2 without doing some fancy/questionable domain stuff\n            // so let's instead just delay a bit before we proceed with our action here\n            // in case 1, we just wait a bit unnecessarily but ultimately do the same thing\n            // in case 2, the delay hopefully made us wait long enough for the capture to finish\n            // two potential nonideal outcomes:\n            //   nonideal case 1: capturing fails fast, we sit around for a few seconds unnecessarily before proceeding correctly by calling onFatalError\n            //   nonideal case 2: case 2 happens, 1st error is captured but slowly, timeout completes before capture and we treat second error as the sendErr of (nonexistent) failure from trying to capture first error\n            // note that after hitting this branch, we might catch more errors where (caughtSecondError && !calledFatalError)\n            //   we ignore them - they don't matter to us, we're just waiting for the second error timeout to finish\n            caughtSecondError = true;\n            setTimeout(() => {\n              if (!calledFatalError) {\n                // it was probably case 1, let's treat err as the sendErr and call onFatalError\n                calledFatalError = true;\n                onFatalError(firstError, error);\n              }\n            }, timeout); // capturing could take at least sendTimeout to fail, plus an arbitrary second for how long it takes to collect surrounding source etc\n          }\n        }\n      }\n    };\n  }\n} OnUncaughtException.__initStatic();\n\nexport { OnUncaughtException };\n//# sourceMappingURL=onuncaughtexception.js.map\n",
  "import { getCurrentHub } from '@sentry/core';\nimport { consoleSandbox } from '@sentry/utils';\nimport { logAndExitProcess } from './utils/errorhandling.js';\n\n/** Global Promise Rejection handler */\nclass OnUnhandledRejection  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'OnUnhandledRejection';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = OnUnhandledRejection.id;}\n\n  /**\n   * @inheritDoc\n   */\n   constructor(\n      _options\n\n = { mode: 'warn' },\n  ) {this._options = _options;OnUnhandledRejection.prototype.__init.call(this);}\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce() {\n    global.process.on('unhandledRejection', this.sendUnhandledPromise.bind(this));\n  }\n\n  /**\n   * Send an exception with reason\n   * @param reason string\n   * @param promise promise\n   */\n   sendUnhandledPromise(reason, promise) {\n    const hub = getCurrentHub();\n    if (hub.getIntegration(OnUnhandledRejection)) {\n      hub.withScope((scope) => {\n        scope.setExtra('unhandledPromiseRejection', true);\n        hub.captureException(reason, {\n          originalException: promise,\n          data: { mechanism: { handled: false, type: 'onunhandledrejection' } },\n        });\n      });\n    }\n    this._handleRejection(reason);\n  }\n\n  /**\n   * Handler for `mode` option\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n   _handleRejection(reason) {\n    // https://github.com/nodejs/node/blob/7cf6f9e964aa00772965391c23acda6d71972a9a/lib/internal/process/promises.js#L234-L240\n    const rejectionWarning =\n      'This error originated either by ' +\n      'throwing inside of an async function without a catch block, ' +\n      'or by rejecting a promise which was not handled with .catch().' +\n      ' The promise rejected with the reason:';\n\n    /* eslint-disable no-console */\n    if (this._options.mode === 'warn') {\n      consoleSandbox(() => {\n        console.warn(rejectionWarning);\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        console.error(reason && reason.stack ? reason.stack : reason);\n      });\n    } else if (this._options.mode === 'strict') {\n      consoleSandbox(() => {\n        console.warn(rejectionWarning);\n      });\n      logAndExitProcess(reason);\n    }\n    /* eslint-enable no-console */\n  }\n} OnUnhandledRejection.__initStatic();\n\nexport { OnUnhandledRejection };\n//# sourceMappingURL=onunhandledrejection.js.map\n",
  "import { existsSync, readFileSync } from 'fs';\nimport { dirname, join } from 'path';\n\nlet moduleCache;\n\n/** Extract information about paths */\nfunction getPaths() {\n  try {\n    return require.cache ? Object.keys(require.cache ) : [];\n  } catch (e) {\n    return [];\n  }\n}\n\n/** Extract information about package.json modules */\nfunction collectModules()\n\n {\n  const mainPaths = (require.main && require.main.paths) || [];\n  const paths = getPaths();\n  const infos\n\n = {};\n  const seen\n\n = {};\n\n  paths.forEach(path => {\n    let dir = path;\n\n    /** Traverse directories upward in the search of package.json file */\n    const updir = () => {\n      const orig = dir;\n      dir = dirname(orig);\n\n      if (!dir || orig === dir || seen[orig]) {\n        return undefined;\n      }\n      if (mainPaths.indexOf(dir) < 0) {\n        return updir();\n      }\n\n      const pkgfile = join(orig, 'package.json');\n      seen[orig] = true;\n\n      if (!existsSync(pkgfile)) {\n        return updir();\n      }\n\n      try {\n        const info = JSON.parse(readFileSync(pkgfile, 'utf8'))\n\n;\n        infos[info.name] = info.version;\n      } catch (_oO) {\n        // no-empty\n      }\n    };\n\n    updir();\n  });\n\n  return infos;\n}\n\n/** Add node modules / packages to the event */\nclass Modules  {constructor() { Modules.prototype.__init.call(this); }\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'Modules';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = Modules.id;}\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce(addGlobalEventProcessor, getCurrentHub) {\n    addGlobalEventProcessor(event => {\n      if (!getCurrentHub().getIntegration(Modules)) {\n        return event;\n      }\n      return {\n        ...event,\n        modules: {\n          ...event.modules,\n          ...this._getModules(),\n        },\n      };\n    });\n  }\n\n  /** Fetches the list of modules and the versions loaded by the entry file for your node.js app. */\n   _getModules() {\n    if (!moduleCache) {\n      moduleCache = collectModules();\n    }\n    return moduleCache;\n  }\n} Modules.__initStatic();\n\nexport { Modules };\n//# sourceMappingURL=modules.js.map\n",
  "import { _optionalChain } from '@sentry/utils';\nimport { readFile } from 'fs';\nimport { LRUMap, addContextToFrame } from '@sentry/utils';\n\nconst FILE_CONTENT_CACHE = new LRUMap(100);\nconst DEFAULT_LINES_OF_CONTEXT = 7;\n\n// TODO: Replace with promisify when minimum supported node >= v8\nfunction readTextFileAsync(path) {\n  return new Promise((resolve, reject) => {\n    readFile(path, 'utf8', (err, data) => {\n      if (err) reject(err);\n      else resolve(data);\n    });\n  });\n}\n\n/** Add node modules / packages to the event */\nclass ContextLines  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'ContextLines';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = ContextLines.id;}\n\n   constructor(  _options = {}) {this._options = _options;ContextLines.prototype.__init.call(this);}\n\n  /** Get's the number of context lines to add */\n   get _contextLines() {\n    return this._options.frameContextLines !== undefined ? this._options.frameContextLines : DEFAULT_LINES_OF_CONTEXT;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce(addGlobalEventProcessor, getCurrentHub) {\n    addGlobalEventProcessor(event => {\n      const self = getCurrentHub().getIntegration(ContextLines);\n      if (!self) {\n        return event;\n      }\n      return this.addSourceContext(event);\n    });\n  }\n\n  /** Processes an event and adds context lines */\n   async addSourceContext(event) {\n    // keep a lookup map of which files we've already enqueued to read,\n    // so we don't enqueue the same file multiple times which would cause multiple i/o reads\n    const enqueuedReadSourceFileTasks = {};\n    const readSourceFileTasks = [];\n\n    if (this._contextLines > 0 && _optionalChain([event, 'access', _2 => _2.exception, 'optionalAccess', _3 => _3.values])) {\n      for (const exception of event.exception.values) {\n        if (!_optionalChain([exception, 'access', _4 => _4.stacktrace, 'optionalAccess', _5 => _5.frames])) {\n          continue;\n        }\n\n        // We want to iterate in reverse order as calling cache.get will bump the file in our LRU cache.\n        // This ends up prioritizes source context for frames at the top of the stack instead of the bottom.\n        for (let i = exception.stacktrace.frames.length - 1; i >= 0; i--) {\n          const frame = exception.stacktrace.frames[i];\n          // Call cache.get to bump the file to the top of the cache and ensure we have not already\n          // enqueued a read operation for this filename\n          if (\n            frame.filename &&\n            !enqueuedReadSourceFileTasks[frame.filename] &&\n            !FILE_CONTENT_CACHE.get(frame.filename)\n          ) {\n            readSourceFileTasks.push(_readSourceFile(frame.filename));\n            enqueuedReadSourceFileTasks[frame.filename] = 1;\n          }\n        }\n      }\n    }\n\n    // check if files to read > 0, if so, await all of them to be read before adding source contexts.\n    // Normally, Promise.all here could be short circuited if one of the promises rejects, but we\n    // are guarding from that by wrapping the i/o read operation in a try/catch.\n    if (readSourceFileTasks.length > 0) {\n      await Promise.all(readSourceFileTasks);\n    }\n\n    // Perform the same loop as above, but this time we can assume all files are in the cache\n    // and attempt to add source context to frames.\n    if (this._contextLines > 0 && _optionalChain([event, 'access', _6 => _6.exception, 'optionalAccess', _7 => _7.values])) {\n      for (const exception of event.exception.values) {\n        if (exception.stacktrace && exception.stacktrace.frames) {\n          await this.addSourceContextToFrames(exception.stacktrace.frames);\n        }\n      }\n    }\n\n    return event;\n  }\n\n  /** Adds context lines to frames */\n   addSourceContextToFrames(frames) {\n    for (const frame of frames) {\n      // Only add context if we have a filename and it hasn't already been added\n      if (frame.filename && frame.context_line === undefined) {\n        const sourceFileLines = FILE_CONTENT_CACHE.get(frame.filename);\n\n        if (sourceFileLines) {\n          try {\n            addContextToFrame(sourceFileLines, frame, this._contextLines);\n          } catch (e) {\n            // anomaly, being defensive in case\n            // unlikely to ever happen in practice but can definitely happen in theory\n          }\n        }\n      }\n    }\n  }\n}ContextLines.__initStatic();\n\n/**\n * Reads file contents and caches them in a global LRU cache.\n * If reading fails, mark the file as null in the cache so we don't try again.\n *\n * @param filename filepath to read content from.\n */\nasync function _readSourceFile(filename) {\n  const cachedFile = FILE_CONTENT_CACHE.get(filename);\n\n  // We have already attempted to read this file and failed, do not try again\n  if (cachedFile === null) {\n    return null;\n  }\n\n  // We have a cache hit, return it\n  if (cachedFile !== undefined) {\n    return cachedFile;\n  }\n\n  // Guard from throwing if readFile fails, this enables us to use Promise.all and\n  // not have it short circuiting if one of the promises rejects + since context lines are added\n  // on a best effort basis, we want to throw here anyways.\n\n  // If we made it to here, it means that our file is not cache nor marked as failed, so attempt to read it\n  let content = null;\n  try {\n    const rawFileContents = await readTextFileAsync(filename);\n    content = rawFileContents.split('\\n');\n  } catch (_) {\n    // if we fail, we will mark the file as null in the cache and short circuit next time we try to read it\n  }\n\n  FILE_CONTENT_CACHE.set(filename, content);\n  return content;\n}\n\nexport { ContextLines };\n//# sourceMappingURL=contextlines.js.map\n",
  "import { _optionalChain } from '@sentry/utils';\nimport { readFile } from 'fs';\nimport { LRUMap, addContextToFrame } from '@sentry/utils';\n\nconst FILE_CONTENT_CACHE = new LRUMap(100);\nconst DEFAULT_LINES_OF_CONTEXT = 7;\n\n// TODO: Replace with promisify when minimum supported node >= v8\nfunction readTextFileAsync(path) {\n  return new Promise((resolve, reject) => {\n    readFile(path, 'utf8', (err, data) => {\n      if (err) reject(err);\n      else resolve(data);\n    });\n  });\n}\n\n/** Add node modules / packages to the event */\nclass ContextLines  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'ContextLines';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = ContextLines.id;}\n\n   constructor(  _options = {}) {this._options = _options;ContextLines.prototype.__init.call(this);}\n\n  /** Get's the number of context lines to add */\n   get _contextLines() {\n    return this._options.frameContextLines !== undefined ? this._options.frameContextLines : DEFAULT_LINES_OF_CONTEXT;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce(addGlobalEventProcessor, getCurrentHub) {\n    addGlobalEventProcessor(event => {\n      const self = getCurrentHub().getIntegration(ContextLines);\n      if (!self) {\n        return event;\n      }\n      return this.addSourceContext(event);\n    });\n  }\n\n  /** Processes an event and adds context lines */\n   async addSourceContext(event) {\n    // keep a lookup map of which files we've already enqueued to read,\n    // so we don't enqueue the same file multiple times which would cause multiple i/o reads\n    const enqueuedReadSourceFileTasks = {};\n    const readSourceFileTasks = [];\n\n    if (this._contextLines > 0 && _optionalChain([event, 'access', _2 => _2.exception, 'optionalAccess', _3 => _3.values])) {\n      for (const exception of event.exception.values) {\n        if (!_optionalChain([exception, 'access', _4 => _4.stacktrace, 'optionalAccess', _5 => _5.frames])) {\n          continue;\n        }\n\n        // We want to iterate in reverse order as calling cache.get will bump the file in our LRU cache.\n        // This ends up prioritizes source context for frames at the top of the stack instead of the bottom.\n        for (let i = exception.stacktrace.frames.length - 1; i >= 0; i--) {\n          const frame = exception.stacktrace.frames[i];\n          // Call cache.get to bump the file to the top of the cache and ensure we have not already\n          // enqueued a read operation for this filename\n          if (\n            frame.filename &&\n            !enqueuedReadSourceFileTasks[frame.filename] &&\n            !FILE_CONTENT_CACHE.get(frame.filename)\n          ) {\n            readSourceFileTasks.push(_readSourceFile(frame.filename));\n            enqueuedReadSourceFileTasks[frame.filename] = 1;\n          }\n        }\n      }\n    }\n\n    // check if files to read > 0, if so, await all of them to be read before adding source contexts.\n    // Normally, Promise.all here could be short circuited if one of the promises rejects, but we\n    // are guarding from that by wrapping the i/o read operation in a try/catch.\n    if (readSourceFileTasks.length > 0) {\n      await Promise.all(readSourceFileTasks);\n    }\n\n    // Perform the same loop as above, but this time we can assume all files are in the cache\n    // and attempt to add source context to frames.\n    if (this._contextLines > 0 && _optionalChain([event, 'access', _6 => _6.exception, 'optionalAccess', _7 => _7.values])) {\n      for (const exception of event.exception.values) {\n        if (exception.stacktrace && exception.stacktrace.frames) {\n          await this.addSourceContextToFrames(exception.stacktrace.frames);\n        }\n      }\n    }\n\n    return event;\n  }\n\n  /** Adds context lines to frames */\n   addSourceContextToFrames(frames) {\n    for (const frame of frames) {\n      // Only add context if we have a filename and it hasn't already been added\n      if (frame.filename && frame.context_line === undefined) {\n        const sourceFileLines = FILE_CONTENT_CACHE.get(frame.filename);\n\n        if (sourceFileLines) {\n          try {\n            addContextToFrame(sourceFileLines, frame, this._contextLines);\n          } catch (e) {\n            // anomaly, being defensive in case\n            // unlikely to ever happen in practice but can definitely happen in theory\n          }\n        }\n      }\n    }\n  }\n}ContextLines.__initStatic();\n\n/**\n * Reads file contents and caches them in a global LRU cache.\n * If reading fails, mark the file as null in the cache so we don't try again.\n *\n * @param filename filepath to read content from.\n */\nasync function _readSourceFile(filename) {\n  const cachedFile = FILE_CONTENT_CACHE.get(filename);\n\n  // We have already attempted to read this file and failed, do not try again\n  if (cachedFile === null) {\n    return null;\n  }\n\n  // We have a cache hit, return it\n  if (cachedFile !== undefined) {\n    return cachedFile;\n  }\n\n  // Guard from throwing if readFile fails, this enables us to use Promise.all and\n  // not have it short circuiting if one of the promises rejects + since context lines are added\n  // on a best effort basis, we want to throw here anyways.\n\n  // If we made it to here, it means that our file is not cache nor marked as failed, so attempt to read it\n  let content = null;\n  try {\n    const rawFileContents = await readTextFileAsync(filename);\n    content = rawFileContents.split('\\n');\n  } catch (_) {\n    // if we fail, we will mark the file as null in the cache and short circuit next time we try to read it\n  }\n\n  FILE_CONTENT_CACHE.set(filename, content);\n  return content;\n}\n\nexport { ContextLines };\n//# sourceMappingURL=contextlines.js.map\n",
  "import { _optionalChain } from '@sentry/utils';\nimport { execFile } from 'child_process';\nimport { readFile, readdir } from 'fs';\nimport * as os from 'os';\nimport { join } from 'path';\nimport { promisify } from 'util';\n\n// TODO: Required until we drop support for Node v8\nconst readFileAsync = promisify(readFile);\nconst readDirAsync = promisify(readdir);\n\n/** Add node modules / packages to the event */\nclass Context  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'Context';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = Context.id;}\n\n  /**\n   * Caches context so it's only evaluated once\n   */\n\n   constructor(\n      _options = {\n      app: true,\n      os: true,\n      device: true,\n      culture: true,\n      cloudResource: true,\n    },\n  ) {this._options = _options;Context.prototype.__init.call(this);}\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce(addGlobalEventProcessor) {\n    addGlobalEventProcessor(event => this.addContext(event));\n  }\n\n  /** Processes an event and adds context */\n   async addContext(event) {\n    if (this._cachedContext === undefined) {\n      this._cachedContext = this._getContexts();\n    }\n\n    const updatedContext = this._updateContext(await this._cachedContext);\n\n    event.contexts = {\n      ...event.contexts,\n      app: { ...updatedContext.app, ..._optionalChain([event, 'access', _ => _.contexts, 'optionalAccess', _2 => _2.app]) },\n      os: { ...updatedContext.os, ..._optionalChain([event, 'access', _3 => _3.contexts, 'optionalAccess', _4 => _4.os]) },\n      device: { ...updatedContext.device, ..._optionalChain([event, 'access', _5 => _5.contexts, 'optionalAccess', _6 => _6.device]) },\n      culture: { ...updatedContext.culture, ..._optionalChain([event, 'access', _7 => _7.contexts, 'optionalAccess', _8 => _8.culture]) },\n      cloud_resource: { ...updatedContext.cloud_resource, ..._optionalChain([event, 'access', _9 => _9.contexts, 'optionalAccess', _10 => _10.cloud_resource]) },\n    };\n\n    return event;\n  }\n\n  /**\n   * Updates the context with dynamic values that can change\n   */\n   _updateContext(contexts) {\n    // Only update properties if they exist\n    if (_optionalChain([contexts, 'optionalAccess', _11 => _11.app, 'optionalAccess', _12 => _12.app_memory])) {\n      contexts.app.app_memory = process.memoryUsage().rss;\n    }\n\n    if (_optionalChain([contexts, 'optionalAccess', _13 => _13.device, 'optionalAccess', _14 => _14.free_memory])) {\n      contexts.device.free_memory = os.freemem();\n    }\n\n    return contexts;\n  }\n\n  /**\n   * Gets the contexts for the current environment\n   */\n   async _getContexts() {\n    const contexts = {};\n\n    if (this._options.os) {\n      contexts.os = await getOsContext();\n    }\n\n    if (this._options.app) {\n      contexts.app = getAppContext();\n    }\n\n    if (this._options.device) {\n      contexts.device = getDeviceContext(this._options.device);\n    }\n\n    if (this._options.culture) {\n      const culture = getCultureContext();\n\n      if (culture) {\n        contexts.culture = culture;\n      }\n    }\n\n    if (this._options.cloudResource) {\n      contexts.cloud_resource = getCloudResourceContext();\n    }\n\n    return contexts;\n  }\n}Context.__initStatic();\n\n/**\n * Returns the operating system context.\n *\n * Based on the current platform, this uses a different strategy to provide the\n * most accurate OS information. Since this might involve spawning subprocesses\n * or accessing the file system, this should only be executed lazily and cached.\n *\n *  - On macOS (Darwin), this will execute the `sw_vers` utility. The context\n *    has a `name`, `version`, `build` and `kernel_version` set.\n *  - On Linux, this will try to load a distribution release from `/etc` and set\n *    the `name`, `version` and `kernel_version` fields.\n *  - On all other platforms, only a `name` and `version` will be returned. Note\n *    that `version` might actually be the kernel version.\n */\nasync function getOsContext() {\n  const platformId = os.platform();\n  switch (platformId) {\n    case 'darwin':\n      return getDarwinInfo();\n    case 'linux':\n      return getLinuxInfo();\n    default:\n      return {\n        name: PLATFORM_NAMES[platformId] || platformId,\n        version: os.release(),\n      };\n  }\n}\n\nfunction getCultureContext() {\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-explicit-any\n    if (typeof (process.versions ).icu !== 'string') {\n      // Node was built without ICU support\n      return;\n    }\n\n    // Check that node was built with full Intl support. Its possible it was built without support for non-English\n    // locales which will make resolvedOptions inaccurate\n    //\n    // https://nodejs.org/api/intl.html#detecting-internationalization-support\n    const january = new Date(9e8);\n    const spanish = new Intl.DateTimeFormat('es', { month: 'long' });\n    if (spanish.format(january) === 'enero') {\n      const options = Intl.DateTimeFormat().resolvedOptions();\n\n      return {\n        locale: options.locale,\n        timezone: options.timeZone,\n      };\n    }\n  } catch (err) {\n    //\n  }\n\n  return;\n}\n\nfunction getAppContext() {\n  const app_memory = process.memoryUsage().rss;\n  const app_start_time = new Date(Date.now() - process.uptime() * 1000).toISOString();\n\n  return { app_start_time, app_memory };\n}\n\n/**\n * Gets device information from os\n */\nfunction getDeviceContext(deviceOpt) {\n  const device = {};\n\n  // Sometimes os.uptime() throws due to lacking permissions: https://github.com/getsentry/sentry-javascript/issues/8202\n  let uptime;\n  try {\n    uptime = os.uptime && os.uptime();\n  } catch (e) {\n    // noop\n  }\n\n  // os.uptime or its return value seem to be undefined in certain environments (e.g. Azure functions).\n  // Hence, we only set boot time, if we get a valid uptime value.\n  // @see https://github.com/getsentry/sentry-javascript/issues/5856\n  if (typeof uptime === 'number') {\n    device.boot_time = new Date(Date.now() - uptime * 1000).toISOString();\n  }\n\n  device.arch = os.arch();\n\n  if (deviceOpt === true || deviceOpt.memory) {\n    device.memory_size = os.totalmem();\n    device.free_memory = os.freemem();\n  }\n\n  if (deviceOpt === true || deviceOpt.cpu) {\n    const cpuInfo = os.cpus();\n    if (cpuInfo && cpuInfo.length) {\n      const firstCpu = cpuInfo[0];\n\n      device.processor_count = cpuInfo.length;\n      device.cpu_description = firstCpu.model;\n      device.processor_frequency = firstCpu.speed;\n    }\n  }\n\n  return device;\n}\n\n/** Mapping of Node's platform names to actual OS names. */\nconst PLATFORM_NAMES = {\n  aix: 'IBM AIX',\n  freebsd: 'FreeBSD',\n  openbsd: 'OpenBSD',\n  sunos: 'SunOS',\n  win32: 'Windows',\n};\n\n/** Linux version file to check for a distribution. */\n\n/** Mapping of linux release files located in /etc to distributions. */\nconst LINUX_DISTROS = [\n  { name: 'fedora-release', distros: ['Fedora'] },\n  { name: 'redhat-release', distros: ['Red Hat Linux', 'Centos'] },\n  { name: 'redhat_version', distros: ['Red Hat Linux'] },\n  { name: 'SuSE-release', distros: ['SUSE Linux'] },\n  { name: 'lsb-release', distros: ['Ubuntu Linux', 'Arch Linux'] },\n  { name: 'debian_version', distros: ['Debian'] },\n  { name: 'debian_release', distros: ['Debian'] },\n  { name: 'arch-release', distros: ['Arch Linux'] },\n  { name: 'gentoo-release', distros: ['Gentoo Linux'] },\n  { name: 'novell-release', distros: ['SUSE Linux'] },\n  { name: 'alpine-release', distros: ['Alpine Linux'] },\n];\n\n/** Functions to extract the OS version from Linux release files. */\nconst LINUX_VERSIONS\n\n = {\n  alpine: content => content,\n  arch: content => matchFirst(/distrib_release=(.*)/, content),\n  centos: content => matchFirst(/release ([^ ]+)/, content),\n  debian: content => content,\n  fedora: content => matchFirst(/release (..)/, content),\n  mint: content => matchFirst(/distrib_release=(.*)/, content),\n  red: content => matchFirst(/release ([^ ]+)/, content),\n  suse: content => matchFirst(/VERSION = (.*)\\n/, content),\n  ubuntu: content => matchFirst(/distrib_release=(.*)/, content),\n};\n\n/**\n * Executes a regular expression with one capture group.\n *\n * @param regex A regular expression to execute.\n * @param text Content to execute the RegEx on.\n * @returns The captured string if matched; otherwise undefined.\n */\nfunction matchFirst(regex, text) {\n  const match = regex.exec(text);\n  return match ? match[1] : undefined;\n}\n\n/** Loads the macOS operating system context. */\nasync function getDarwinInfo() {\n  // Default values that will be used in case no operating system information\n  // can be loaded. The default version is computed via heuristics from the\n  // kernel version, but the build ID is missing.\n  const darwinInfo = {\n    kernel_version: os.release(),\n    name: 'Mac OS X',\n    version: `10.${Number(os.release().split('.')[0]) - 4}`,\n  };\n\n  try {\n    // We try to load the actual macOS version by executing the `sw_vers` tool.\n    // This tool should be available on every standard macOS installation. In\n    // case this fails, we stick with the values computed above.\n\n    const output = await new Promise((resolve, reject) => {\n      execFile('/usr/bin/sw_vers', (error, stdout) => {\n        if (error) {\n          reject(error);\n          return;\n        }\n        resolve(stdout);\n      });\n    });\n\n    darwinInfo.name = matchFirst(/^ProductName:\\s+(.*)$/m, output);\n    darwinInfo.version = matchFirst(/^ProductVersion:\\s+(.*)$/m, output);\n    darwinInfo.build = matchFirst(/^BuildVersion:\\s+(.*)$/m, output);\n  } catch (e) {\n    // ignore\n  }\n\n  return darwinInfo;\n}\n\n/** Returns a distribution identifier to look up version callbacks. */\nfunction getLinuxDistroId(name) {\n  return name.split(' ')[0].toLowerCase();\n}\n\n/** Loads the Linux operating system context. */\nasync function getLinuxInfo() {\n  // By default, we cannot assume anything about the distribution or Linux\n  // version. `os.release()` returns the kernel version and we assume a generic\n  // \"Linux\" name, which will be replaced down below.\n  const linuxInfo = {\n    kernel_version: os.release(),\n    name: 'Linux',\n  };\n\n  try {\n    // We start guessing the distribution by listing files in the /etc\n    // directory. This is were most Linux distributions (except Knoppix) store\n    // release files with certain distribution-dependent meta data. We search\n    // for exactly one known file defined in `LINUX_DISTROS` and exit if none\n    // are found. In case there are more than one file, we just stick with the\n    // first one.\n    const etcFiles = await readDirAsync('/etc');\n    const distroFile = LINUX_DISTROS.find(file => etcFiles.includes(file.name));\n    if (!distroFile) {\n      return linuxInfo;\n    }\n\n    // Once that file is known, load its contents. To make searching in those\n    // files easier, we lowercase the file contents. Since these files are\n    // usually quite small, this should not allocate too much memory and we only\n    // hold on to it for a very short amount of time.\n    const distroPath = join('/etc', distroFile.name);\n    const contents = ((await readFileAsync(distroPath, { encoding: 'utf-8' })) ).toLowerCase();\n\n    // Some Linux distributions store their release information in the same file\n    // (e.g. RHEL and Centos). In those cases, we scan the file for an\n    // identifier, that basically consists of the first word of the linux\n    // distribution name (e.g. \"red\" for Red Hat). In case there is no match, we\n    // just assume the first distribution in our list.\n    const { distros } = distroFile;\n    linuxInfo.name = distros.find(d => contents.indexOf(getLinuxDistroId(d)) >= 0) || distros[0];\n\n    // Based on the found distribution, we can now compute the actual version\n    // number. This is different for every distribution, so several strategies\n    // are computed in `LINUX_VERSIONS`.\n    const id = getLinuxDistroId(linuxInfo.name);\n    linuxInfo.version = LINUX_VERSIONS[id](contents);\n  } catch (e) {\n    // ignore\n  }\n\n  return linuxInfo;\n}\n\n/**\n * Grabs some information about hosting provider based on best effort.\n */\nfunction getCloudResourceContext() {\n  if (process.env.VERCEL) {\n    // https://vercel.com/docs/concepts/projects/environment-variables/system-environment-variables#system-environment-variables\n    return {\n      'cloud.provider': 'vercel',\n      'cloud.region': process.env.VERCEL_REGION,\n    };\n  } else if (process.env.AWS_REGION) {\n    // https://docs.aws.amazon.com/lambda/latest/dg/configuration-envvars.html\n    return {\n      'cloud.provider': 'aws',\n      'cloud.region': process.env.AWS_REGION,\n      'cloud.platform': process.env.AWS_EXECUTION_ENV,\n    };\n  } else if (process.env.GCP_PROJECT) {\n    // https://cloud.google.com/composer/docs/how-to/managing/environment-variables#reserved_variables\n    return {\n      'cloud.provider': 'gcp',\n    };\n  } else if (process.env.ALIYUN_REGION_ID) {\n    // TODO: find where I found these environment variables - at least gc.github.com returns something\n    return {\n      'cloud.provider': 'alibaba_cloud',\n      'cloud.region': process.env.ALIYUN_REGION_ID,\n    };\n  } else if (process.env.WEBSITE_SITE_NAME && process.env.REGION_NAME) {\n    // https://learn.microsoft.com/en-us/azure/app-service/reference-app-settings?tabs=kudu%2Cdotnet#app-environment\n    return {\n      'cloud.provider': 'azure',\n      'cloud.region': process.env.REGION_NAME,\n    };\n  } else if (process.env.IBM_CLOUD_REGION) {\n    // TODO: find where I found these environment variables - at least gc.github.com returns something\n    return {\n      'cloud.provider': 'ibm_cloud',\n      'cloud.region': process.env.IBM_CLOUD_REGION,\n    };\n  } else if (process.env.TENCENTCLOUD_REGION) {\n    // https://www.tencentcloud.com/document/product/583/32748\n    return {\n      'cloud.provider': 'tencent_cloud',\n      'cloud.region': process.env.TENCENTCLOUD_REGION,\n      'cloud.account.id': process.env.TENCENTCLOUD_APPID,\n      'cloud.availability_zone': process.env.TENCENTCLOUD_ZONE,\n    };\n  } else if (process.env.NETLIFY) {\n    // https://docs.netlify.com/configure-builds/environment-variables/#read-only-variables\n    return {\n      'cloud.provider': 'netlify',\n    };\n  } else if (process.env.FLY_REGION) {\n    // https://fly.io/docs/reference/runtime-environment/\n    return {\n      'cloud.provider': 'fly.io',\n      'cloud.region': process.env.FLY_REGION,\n    };\n  } else if (process.env.DYNO) {\n    // https://devcenter.heroku.com/articles/dynos#local-environment-variables\n    return {\n      'cloud.provider': 'heroku',\n    };\n  } else {\n    return undefined;\n  }\n}\n\nexport { Context, getDeviceContext, readDirAsync, readFileAsync };\n//# sourceMappingURL=context.js.map\n",
  "import { _optionalChain } from '@sentry/utils';\nimport { LRUMap, logger } from '@sentry/utils';\nimport { NODE_VERSION } from '../nodeVersion.js';\n\n/**\n * Creates a rate limiter\n * @param maxPerSecond Maximum number of calls per second\n * @param enable Callback to enable capture\n * @param disable Callback to disable capture\n * @returns A function to call to increment the rate limiter count\n */\nfunction createRateLimiter(\n  maxPerSecond,\n  enable,\n  disable,\n) {\n  let count = 0;\n  let retrySeconds = 5;\n  let disabledTimeout = 0;\n\n  setInterval(() => {\n    if (disabledTimeout === 0) {\n      if (count > maxPerSecond) {\n        retrySeconds *= 2;\n        disable(retrySeconds);\n\n        // Cap at one day\n        if (retrySeconds > 86400) {\n          retrySeconds = 86400;\n        }\n        disabledTimeout = retrySeconds;\n      }\n    } else {\n      disabledTimeout -= 1;\n\n      if (disabledTimeout === 0) {\n        enable();\n      }\n    }\n\n    count = 0;\n  }, 1000).unref();\n\n  return () => {\n    count += 1;\n  };\n}\n\n/** Creates a container for callbacks to be called sequentially */\nfunction createCallbackList(complete) {\n  // A collection of callbacks to be executed last to first\n  let callbacks = [];\n\n  let completedCalled = false;\n  function checkedComplete(result) {\n    callbacks = [];\n    if (completedCalled) {\n      return;\n    }\n    completedCalled = true;\n    complete(result);\n  }\n\n  // complete should be called last\n  callbacks.push(checkedComplete);\n\n  function add(fn) {\n    callbacks.push(fn);\n  }\n\n  function next(result) {\n    const popped = callbacks.pop() || checkedComplete;\n\n    try {\n      popped(result);\n    } catch (_) {\n      // If there is an error, we still want to call the complete callback\n      checkedComplete(result);\n    }\n  }\n\n  return { add, next };\n}\n\n/**\n * Promise API is available as `Experimental` and in Node 19 only.\n *\n * Callback-based API is `Stable` since v14 and `Experimental` since v8.\n * Because of that, we are creating our own `AsyncSession` class.\n *\n * https://nodejs.org/docs/latest-v19.x/api/inspector.html#promises-api\n * https://nodejs.org/docs/latest-v14.x/api/inspector.html\n */\nclass AsyncSession  {\n\n  /** Throws if inspector API is not available */\n   constructor() {\n    /*\n    TODO: We really should get rid of this require statement below for a couple of reasons:\n    1. It makes the integration unusable in the SvelteKit SDK, as it's not possible to use `require`\n       in SvelteKit server code (at least not by default).\n    2. Throwing in a constructor is bad practice\n\n    More context for a future attempt to fix this:\n    We already tried replacing it with import but didn't get it to work because of async problems.\n    We still called import in the constructor but assigned to a promise which we \"awaited\" in\n    `configureAndConnect`. However, this broke the Node integration tests as no local variables\n    were reported any more. We probably missed a place where we need to await the promise, too.\n    */\n\n    // Node can be built without inspector support so this can throw\n    // eslint-disable-next-line @typescript-eslint/no-var-requires\n    const { Session } = require('inspector');\n    this._session = new Session();\n  }\n\n  /** @inheritdoc */\n   configureAndConnect(onPause, captureAll) {\n    this._session.connect();\n\n    this._session.on('Debugger.paused', event => {\n      onPause(event, () => {\n        // After the pause work is complete, resume execution or the exception context memory is leaked\n        this._session.post('Debugger.resume');\n      });\n    });\n\n    this._session.post('Debugger.enable');\n    this._session.post('Debugger.setPauseOnExceptions', { state: captureAll ? 'all' : 'uncaught' });\n  }\n\n   setPauseOnExceptions(captureAll) {\n    this._session.post('Debugger.setPauseOnExceptions', { state: captureAll ? 'all' : 'uncaught' });\n  }\n\n  /** @inheritdoc */\n   getLocalVariables(objectId, complete) {\n    this._getProperties(objectId, props => {\n      const { add, next } = createCallbackList(complete);\n\n      for (const prop of props) {\n        if (_optionalChain([prop, 'optionalAccess', _2 => _2.value, 'optionalAccess', _3 => _3.objectId]) && _optionalChain([prop, 'optionalAccess', _4 => _4.value, 'access', _5 => _5.className]) === 'Array') {\n          const id = prop.value.objectId;\n          add(vars => this._unrollArray(id, prop.name, vars, next));\n        } else if (_optionalChain([prop, 'optionalAccess', _6 => _6.value, 'optionalAccess', _7 => _7.objectId]) && _optionalChain([prop, 'optionalAccess', _8 => _8.value, 'optionalAccess', _9 => _9.className]) === 'Object') {\n          const id = prop.value.objectId;\n          add(vars => this._unrollObject(id, prop.name, vars, next));\n        } else if (_optionalChain([prop, 'optionalAccess', _10 => _10.value, 'optionalAccess', _11 => _11.value]) || _optionalChain([prop, 'optionalAccess', _12 => _12.value, 'optionalAccess', _13 => _13.description])) {\n          add(vars => this._unrollOther(prop, vars, next));\n        }\n      }\n\n      next({});\n    });\n  }\n\n  /**\n   * Gets all the PropertyDescriptors of an object\n   */\n   _getProperties(objectId, next) {\n    this._session.post(\n      'Runtime.getProperties',\n      {\n        objectId,\n        ownProperties: true,\n      },\n      (err, params) => {\n        if (err) {\n          next([]);\n        } else {\n          next(params.result);\n        }\n      },\n    );\n  }\n\n  /**\n   * Unrolls an array property\n   */\n   _unrollArray(objectId, name, vars, next) {\n    this._getProperties(objectId, props => {\n      vars[name] = props\n        .filter(v => v.name !== 'length' && !isNaN(parseInt(v.name, 10)))\n        .sort((a, b) => parseInt(a.name, 10) - parseInt(b.name, 10))\n        .map(v => _optionalChain([v, 'optionalAccess', _14 => _14.value, 'optionalAccess', _15 => _15.value]));\n\n      next(vars);\n    });\n  }\n\n  /**\n   * Unrolls an object property\n   */\n   _unrollObject(objectId, name, vars, next) {\n    this._getProperties(objectId, props => {\n      vars[name] = props\n        .map(v => [v.name, _optionalChain([v, 'optionalAccess', _16 => _16.value, 'optionalAccess', _17 => _17.value])])\n        .reduce((obj, [key, val]) => {\n          obj[key] = val;\n          return obj;\n        }, {} );\n\n      next(vars);\n    });\n  }\n\n  /**\n   * Unrolls other properties\n   */\n   _unrollOther(prop, vars, next) {\n    if (_optionalChain([prop, 'optionalAccess', _18 => _18.value, 'optionalAccess', _19 => _19.value])) {\n      vars[prop.name] = prop.value.value;\n    } else if (_optionalChain([prop, 'optionalAccess', _20 => _20.value, 'optionalAccess', _21 => _21.description]) && _optionalChain([prop, 'optionalAccess', _22 => _22.value, 'optionalAccess', _23 => _23.type]) !== 'function') {\n      vars[prop.name] = `<${prop.value.description}>`;\n    }\n\n    next(vars);\n  }\n}\n\n/**\n * When using Vercel pkg, the inspector module is not available.\n * https://github.com/getsentry/sentry-javascript/issues/6769\n */\nfunction tryNewAsyncSession() {\n  try {\n    return new AsyncSession();\n  } catch (e) {\n    return undefined;\n  }\n}\n\n// Add types for the exception event data\n\n/** Could this be an anonymous function? */\nfunction isAnonymous(name) {\n  return name !== undefined && ['', '?', '<anonymous>'].includes(name);\n}\n\n/** Do the function names appear to match? */\nfunction functionNamesMatch(a, b) {\n  return a === b || (isAnonymous(a) && isAnonymous(b));\n}\n\n/** Creates a unique hash from stack frames */\nfunction hashFrames(frames) {\n  if (frames === undefined) {\n    return;\n  }\n\n  // Only hash the 10 most recent frames (ie. the last 10)\n  return frames.slice(-10).reduce((acc, frame) => `${acc},${frame.function},${frame.lineno},${frame.colno}`, '');\n}\n\n/**\n * We use the stack parser to create a unique hash from the exception stack trace\n * This is used to lookup vars when the exception passes through the event processor\n */\nfunction hashFromStack(stackParser, stack) {\n  if (stack === undefined) {\n    return undefined;\n  }\n\n  return hashFrames(stackParser(stack, 1));\n}\n\n/**\n * Adds local variables to exception frames\n *\n * Default: 50\n */\nclass LocalVariables  {\n   static __initStatic() {this.id = 'LocalVariables';}\n\n    __init() {this.name = LocalVariables.id;}\n\n    __init2() {this._cachedFrames = new LRUMap(20);}\n\n   constructor(\n      _options = {},\n      _session = tryNewAsyncSession(),\n  ) {this._options = _options;this._session = _session;LocalVariables.prototype.__init.call(this);LocalVariables.prototype.__init2.call(this);}\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce(addGlobalEventProcessor, getCurrentHub) {\n    this._setup(addGlobalEventProcessor, _optionalChain([getCurrentHub, 'call', _24 => _24(), 'access', _25 => _25.getClient, 'call', _26 => _26(), 'optionalAccess', _27 => _27.getOptions, 'call', _28 => _28()]));\n  }\n\n  /** Setup in a way that's easier to call from tests */\n   _setup(\n    addGlobalEventProcessor,\n    clientOptions,\n  ) {\n    if (this._session && _optionalChain([clientOptions, 'optionalAccess', _29 => _29.includeLocalVariables])) {\n      // Only setup this integration if the Node version is >= v18\n      // https://github.com/getsentry/sentry-javascript/issues/7697\n      const unsupportedNodeVersion = (NODE_VERSION.major || 0) < 18;\n\n      if (unsupportedNodeVersion) {\n        logger.log('The `LocalVariables` integration is only supported on Node >= v18.');\n        return;\n      }\n\n      const captureAll = this._options.captureAllExceptions !== false;\n\n      this._session.configureAndConnect(\n        (ev, complete) =>\n          this._handlePaused(clientOptions.stackParser, ev , complete),\n        captureAll,\n      );\n\n      if (captureAll) {\n        const max = this._options.maxExceptionsPerSecond || 50;\n\n        this._rateLimiter = createRateLimiter(\n          max,\n          () => {\n            logger.log('Local variables rate-limit lifted.');\n            _optionalChain([this, 'access', _30 => _30._session, 'optionalAccess', _31 => _31.setPauseOnExceptions, 'call', _32 => _32(true)]);\n          },\n          seconds => {\n            logger.log(\n              `Local variables rate-limit exceeded. Disabling capturing of caught exceptions for ${seconds} seconds.`,\n            );\n            _optionalChain([this, 'access', _33 => _33._session, 'optionalAccess', _34 => _34.setPauseOnExceptions, 'call', _35 => _35(false)]);\n          },\n        );\n      }\n\n      addGlobalEventProcessor(async event => this._addLocalVariables(event));\n    }\n  }\n\n  /**\n   * Handle the pause event\n   */\n   _handlePaused(\n    stackParser,\n    { params: { reason, data, callFrames } },\n    complete,\n  ) {\n    if (reason !== 'exception' && reason !== 'promiseRejection') {\n      complete();\n      return;\n    }\n\n    _optionalChain([this, 'access', _36 => _36._rateLimiter, 'optionalCall', _37 => _37()]);\n\n    // data.description contains the original error.stack\n    const exceptionHash = hashFromStack(stackParser, _optionalChain([data, 'optionalAccess', _38 => _38.description]));\n\n    if (exceptionHash == undefined) {\n      complete();\n      return;\n    }\n\n    const { add, next } = createCallbackList(frames => {\n      this._cachedFrames.set(exceptionHash, frames);\n      complete();\n    });\n\n    // Because we're queuing up and making all these calls synchronously, we can potentially overflow the stack\n    // For this reason we only attempt to get local variables for the first 5 frames\n    for (let i = 0; i < Math.min(callFrames.length, 5); i++) {\n      const { scopeChain, functionName, this: obj } = callFrames[i];\n\n      const localScope = scopeChain.find(scope => scope.type === 'local');\n\n      // obj.className is undefined in ESM modules\n      const fn = obj.className === 'global' || !obj.className ? functionName : `${obj.className}.${functionName}`;\n\n      if (_optionalChain([localScope, 'optionalAccess', _39 => _39.object, 'access', _40 => _40.objectId]) === undefined) {\n        add(frames => {\n          frames[i] = { function: fn };\n          next(frames);\n        });\n      } else {\n        const id = localScope.object.objectId;\n        add(frames =>\n          _optionalChain([this, 'access', _41 => _41._session, 'optionalAccess', _42 => _42.getLocalVariables, 'call', _43 => _43(id, vars => {\n            frames[i] = { function: fn, vars };\n            next(frames);\n          })]),\n        );\n      }\n    }\n\n    next([]);\n  }\n\n  /**\n   * Adds local variables event stack frames.\n   */\n   _addLocalVariables(event) {\n    for (const exception of _optionalChain([event, 'optionalAccess', _44 => _44.exception, 'optionalAccess', _45 => _45.values]) || []) {\n      this._addLocalVariablesToException(exception);\n    }\n\n    return event;\n  }\n\n  /**\n   * Adds local variables to the exception stack frames.\n   */\n   _addLocalVariablesToException(exception) {\n    const hash = hashFrames(_optionalChain([exception, 'optionalAccess', _46 => _46.stacktrace, 'optionalAccess', _47 => _47.frames]));\n\n    if (hash === undefined) {\n      return;\n    }\n\n    // Check if we have local variables for an exception that matches the hash\n    // remove is identical to get but also removes the entry from the cache\n    const cachedFrames = this._cachedFrames.remove(hash);\n\n    if (cachedFrames === undefined) {\n      return;\n    }\n\n    const frameCount = _optionalChain([exception, 'access', _48 => _48.stacktrace, 'optionalAccess', _49 => _49.frames, 'optionalAccess', _50 => _50.length]) || 0;\n\n    for (let i = 0; i < frameCount; i++) {\n      // Sentry frames are in reverse order\n      const frameIndex = frameCount - i - 1;\n\n      // Drop out if we run out of frames to match up\n      if (!_optionalChain([exception, 'optionalAccess', _51 => _51.stacktrace, 'optionalAccess', _52 => _52.frames, 'optionalAccess', _53 => _53[frameIndex]]) || !cachedFrames[i]) {\n        break;\n      }\n\n      if (\n        // We need to have vars to add\n        cachedFrames[i].vars === undefined ||\n        // We're not interested in frames that are not in_app because the vars are not relevant\n        exception.stacktrace.frames[frameIndex].in_app === false ||\n        // The function names need to match\n        !functionNamesMatch(exception.stacktrace.frames[frameIndex].function, cachedFrames[i].function)\n      ) {\n        continue;\n      }\n\n      exception.stacktrace.frames[frameIndex].vars = cachedFrames[i].vars;\n    }\n  }\n}LocalVariables.__initStatic();\n\nexport { LocalVariables, createCallbackList, createRateLimiter };\n//# sourceMappingURL=localvariables.js.map\n",
  "import { _optionalChain } from '@sentry/utils';\nimport { getCurrentHub, isSentryRequestUrl, getDynamicSamplingContextFromClient } from '@sentry/core';\nimport { LRUMap, dynamicRequire, dynamicSamplingContextToSentryBaggageHeader, generateSentryTraceHeader, parseUrl, stringMatchesSomePattern, getSanitizedUrlString } from '@sentry/utils';\nimport { NODE_VERSION } from '../../nodeVersion.js';\n\nvar ChannelName;(function (ChannelName) {\n  // https://github.com/nodejs/undici/blob/e6fc80f809d1217814c044f52ed40ef13f21e43c/docs/api/DiagnosticsChannel.md#undicirequestcreate\n  const RequestCreate = 'undici:request:create'; ChannelName[\"RequestCreate\"] = RequestCreate;\n  const RequestEnd = 'undici:request:headers'; ChannelName[\"RequestEnd\"] = RequestEnd;\n  const RequestError = 'undici:request:error'; ChannelName[\"RequestError\"] = RequestError;\n})(ChannelName || (ChannelName = {}));\n\n// Please note that you cannot use `console.log` to debug the callbacks registered to the `diagnostics_channel` API.\n// To debug, you can use `writeFileSync` to write to a file:\n// https://nodejs.org/api/async_hooks.html#printing-in-asynchook-callbacks\n//\n// import { writeFileSync } from 'fs';\n// import { format } from 'util';\n//\n// function debug(...args: any): void {\n//   // Use a function like this one when debugging inside an AsyncHook callback\n//   // @ts-expect-error any\n//   writeFileSync('log.out', `${format(...args)}\\n`, { flag: 'a' });\n// }\n\n/**\n * Instruments outgoing HTTP requests made with the `undici` package via\n * Node's `diagnostics_channel` API.\n *\n * Supports Undici 4.7.0 or higher.\n *\n * Requires Node 16.17.0 or higher.\n */\nclass Undici  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'Undici';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = Undici.id;}\n\n    __init2() {this._createSpanUrlMap = new LRUMap(100);}\n    __init3() {this._headersUrlMap = new LRUMap(100);}\n\n   constructor(_options = {}) {Undici.prototype.__init.call(this);Undici.prototype.__init2.call(this);Undici.prototype.__init3.call(this);Undici.prototype.__init4.call(this);Undici.prototype.__init5.call(this);Undici.prototype.__init6.call(this);\n    this._options = {\n      breadcrumbs: _options.breadcrumbs === undefined ? true : _options.breadcrumbs,\n      shouldCreateSpanForRequest: _options.shouldCreateSpanForRequest,\n    };\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce(_addGlobalEventProcessor) {\n    // Requires Node 16+ to use the diagnostics_channel API.\n    if (NODE_VERSION.major && NODE_VERSION.major < 16) {\n      return;\n    }\n\n    let ds;\n    try {\n      // eslint-disable-next-line @typescript-eslint/no-var-requires\n      ds = dynamicRequire(module, 'diagnostics_channel') ;\n    } catch (e) {\n      // no-op\n    }\n\n    if (!ds || !ds.subscribe) {\n      return;\n    }\n\n    // https://github.com/nodejs/undici/blob/e6fc80f809d1217814c044f52ed40ef13f21e43c/docs/api/DiagnosticsChannel.md\n    ds.subscribe(ChannelName.RequestCreate, this._onRequestCreate);\n    ds.subscribe(ChannelName.RequestEnd, this._onRequestEnd);\n    ds.subscribe(ChannelName.RequestError, this._onRequestError);\n  }\n\n  /** Helper that wraps shouldCreateSpanForRequest option */\n   _shouldCreateSpan(url) {\n    if (this._options.shouldCreateSpanForRequest === undefined) {\n      return true;\n    }\n\n    const cachedDecision = this._createSpanUrlMap.get(url);\n    if (cachedDecision !== undefined) {\n      return cachedDecision;\n    }\n\n    const decision = this._options.shouldCreateSpanForRequest(url);\n    this._createSpanUrlMap.set(url, decision);\n    return decision;\n  }\n\n   __init4() {this._onRequestCreate = (message) => {\n    const hub = getCurrentHub();\n    if (!hub.getIntegration(Undici)) {\n      return;\n    }\n\n    const { request } = message ;\n\n    const stringUrl = request.origin ? request.origin.toString() + request.path : request.path;\n\n    if (isSentryRequestUrl(stringUrl, hub) || request.__sentry_span__ !== undefined) {\n      return;\n    }\n\n    const client = hub.getClient();\n    if (!client) {\n      return;\n    }\n\n    const clientOptions = client.getOptions();\n    const scope = hub.getScope();\n\n    const parentSpan = scope.getSpan();\n\n    const span = this._shouldCreateSpan(stringUrl) ? createRequestSpan(parentSpan, request, stringUrl) : undefined;\n    if (span) {\n      request.__sentry_span__ = span;\n    }\n\n    const shouldAttachTraceData = (url) => {\n      if (clientOptions.tracePropagationTargets === undefined) {\n        return true;\n      }\n\n      const cachedDecision = this._headersUrlMap.get(url);\n      if (cachedDecision !== undefined) {\n        return cachedDecision;\n      }\n\n      const decision = stringMatchesSomePattern(url, clientOptions.tracePropagationTargets);\n      this._headersUrlMap.set(url, decision);\n      return decision;\n    };\n\n    if (shouldAttachTraceData(stringUrl)) {\n      if (span) {\n        const dynamicSamplingContext = _optionalChain([span, 'optionalAccess', _4 => _4.transaction, 'optionalAccess', _5 => _5.getDynamicSamplingContext, 'call', _6 => _6()]);\n        const sentryBaggageHeader = dynamicSamplingContextToSentryBaggageHeader(dynamicSamplingContext);\n\n        setHeadersOnRequest(request, span.toTraceparent(), sentryBaggageHeader);\n      } else {\n        const { traceId, sampled, dsc } = scope.getPropagationContext();\n        const sentryTrace = generateSentryTraceHeader(traceId, undefined, sampled);\n        const dynamicSamplingContext = dsc || getDynamicSamplingContextFromClient(traceId, client, scope);\n        const sentryBaggageHeader = dynamicSamplingContextToSentryBaggageHeader(dynamicSamplingContext);\n        setHeadersOnRequest(request, sentryTrace, sentryBaggageHeader);\n      }\n    }\n  };}\n\n   __init5() {this._onRequestEnd = (message) => {\n    const hub = getCurrentHub();\n    if (!hub.getIntegration(Undici)) {\n      return;\n    }\n\n    const { request, response } = message ;\n\n    const stringUrl = request.origin ? request.origin.toString() + request.path : request.path;\n\n    if (isSentryRequestUrl(stringUrl, hub)) {\n      return;\n    }\n\n    const span = request.__sentry_span__;\n    if (span) {\n      span.setHttpStatus(response.statusCode);\n      span.finish();\n    }\n\n    if (this._options.breadcrumbs) {\n      hub.addBreadcrumb(\n        {\n          category: 'http',\n          data: {\n            method: request.method,\n            status_code: response.statusCode,\n            url: stringUrl,\n          },\n          type: 'http',\n        },\n        {\n          event: 'response',\n          request,\n          response,\n        },\n      );\n    }\n  };}\n\n   __init6() {this._onRequestError = (message) => {\n    const hub = getCurrentHub();\n    if (!hub.getIntegration(Undici)) {\n      return;\n    }\n\n    const { request } = message ;\n\n    const stringUrl = request.origin ? request.origin.toString() + request.path : request.path;\n\n    if (isSentryRequestUrl(stringUrl, hub)) {\n      return;\n    }\n\n    const span = request.__sentry_span__;\n    if (span) {\n      span.setStatus('internal_error');\n      span.finish();\n    }\n\n    if (this._options.breadcrumbs) {\n      hub.addBreadcrumb(\n        {\n          category: 'http',\n          data: {\n            method: request.method,\n            url: stringUrl,\n          },\n          level: 'error',\n          type: 'http',\n        },\n        {\n          event: 'error',\n          request,\n        },\n      );\n    }\n  };}\n}Undici.__initStatic();\n\nfunction setHeadersOnRequest(\n  request,\n  sentryTrace,\n  sentryBaggageHeader,\n) {\n  const headerLines = request.headers.split('\\r\\n');\n  const hasSentryHeaders = headerLines.some(headerLine => headerLine.startsWith('sentry-trace:'));\n\n  if (hasSentryHeaders) {\n    return;\n  }\n\n  request.addHeader('sentry-trace', sentryTrace);\n  if (sentryBaggageHeader) {\n    request.addHeader('baggage', sentryBaggageHeader);\n  }\n}\n\nfunction createRequestSpan(\n  activeSpan,\n  request,\n  stringUrl,\n) {\n  const url = parseUrl(stringUrl);\n\n  const method = request.method || 'GET';\n  const data = {\n    'http.method': method,\n  };\n  if (url.search) {\n    data['http.query'] = url.search;\n  }\n  if (url.hash) {\n    data['http.fragment'] = url.hash;\n  }\n  return _optionalChain([activeSpan, 'optionalAccess', _7 => _7.startChild, 'call', _8 => _8({\n    op: 'http.client',\n    origin: 'auto.http.node.undici',\n    description: `${method} ${getSanitizedUrlString(url)}`,\n    data,\n  })]);\n}\n\nexport { ChannelName, Undici };\n//# sourceMappingURL=index.js.map\n",
  "import { _optionalChain } from '@sentry/utils';\nimport * as http from 'http';\nimport { URL } from 'url';\nimport { logger, serializeEnvelope } from '@sentry/utils';\n\n/**\n * Use this integration to send errors and transactions to Spotlight.\n *\n * Learn more about spotlight at https://spotlightjs.com\n *\n * Important: This integration only works with Node 18 or newer\n */\nclass Spotlight  {\n   static __initStatic() {this.id = 'Spotlight';}\n   __init() {this.name = Spotlight.id;}\n\n   constructor(options) {Spotlight.prototype.__init.call(this);\n    this._options = {\n      sidecarUrl: _optionalChain([options, 'optionalAccess', _ => _.sidecarUrl]) || 'http://localhost:8969/stream',\n    };\n  }\n\n  /**\n   * JSDoc\n   */\n   setupOnce() {\n    // empty but otherwise TS complains\n  }\n\n  /**\n   * Sets up forwarding envelopes to the Spotlight Sidecar\n   */\n   setup(client) {\n    if (process.env.NODE_ENV !== 'development') {\n      logger.warn(\"[Spotlight] It seems you're not in dev mode. Do you really want to have Spoltight enabled?\");\n    }\n    connectToSpotlight(client, this._options);\n  }\n}Spotlight.__initStatic();\n\nfunction connectToSpotlight(client, options) {\n  const spotlightUrl = parseSidecarUrl(options.sidecarUrl);\n  if (!spotlightUrl) {\n    return;\n  }\n\n  let failedRequests = 0;\n\n  if (typeof client.on !== 'function') {\n    logger.warn('[Spotlight] Cannot connect to spotlight due to missing method on SDK client (`client.on`)');\n    return;\n  }\n\n  client.on('beforeEnvelope', (envelope) => {\n    if (failedRequests > 3) {\n      logger.warn('[Spotlight] Disabled Sentry -> Spotlight integration due to too many failed requests');\n      return;\n    }\n\n    const serializedEnvelope = serializeEnvelope(envelope);\n\n    const req = http.request(\n      {\n        method: 'POST',\n        path: spotlightUrl.pathname,\n        hostname: spotlightUrl.hostname,\n        port: spotlightUrl.port,\n        headers: {\n          'Content-Type': 'application/x-sentry-envelope',\n        },\n      },\n      res => {\n        res.on('data', () => {\n          // Drain socket\n        });\n\n        res.on('end', () => {\n          // Drain socket\n        });\n        res.setEncoding('utf8');\n      },\n    );\n\n    req.on('error', () => {\n      failedRequests++;\n      logger.warn('[Spotlight] Failed to send envelope to Spotlight Sidecar');\n    });\n    req.write(serializedEnvelope);\n    req.end();\n  });\n}\n\nfunction parseSidecarUrl(url) {\n  try {\n    return new URL(`${url}`);\n  } catch (e) {\n    logger.warn(`[Spotlight] Invalid sidecar URL: ${url}`);\n    return undefined;\n  }\n}\n\nexport { Spotlight };\n//# sourceMappingURL=spotlight.js.map\n",
  "import { _optionalChain } from '@sentry/utils';\nimport * as http from 'http';\nimport { URL } from 'url';\nimport { logger, serializeEnvelope } from '@sentry/utils';\n\n/**\n * Use this integration to send errors and transactions to Spotlight.\n *\n * Learn more about spotlight at https://spotlightjs.com\n *\n * Important: This integration only works with Node 18 or newer\n */\nclass Spotlight  {\n   static __initStatic() {this.id = 'Spotlight';}\n   __init() {this.name = Spotlight.id;}\n\n   constructor(options) {Spotlight.prototype.__init.call(this);\n    this._options = {\n      sidecarUrl: _optionalChain([options, 'optionalAccess', _ => _.sidecarUrl]) || 'http://localhost:8969/stream',\n    };\n  }\n\n  /**\n   * JSDoc\n   */\n   setupOnce() {\n    // empty but otherwise TS complains\n  }\n\n  /**\n   * Sets up forwarding envelopes to the Spotlight Sidecar\n   */\n   setup(client) {\n    if (process.env.NODE_ENV !== 'development') {\n      logger.warn(\"[Spotlight] It seems you're not in dev mode. Do you really want to have Spoltight enabled?\");\n    }\n    connectToSpotlight(client, this._options);\n  }\n}Spotlight.__initStatic();\n\nfunction connectToSpotlight(client, options) {\n  const spotlightUrl = parseSidecarUrl(options.sidecarUrl);\n  if (!spotlightUrl) {\n    return;\n  }\n\n  let failedRequests = 0;\n\n  if (typeof client.on !== 'function') {\n    logger.warn('[Spotlight] Cannot connect to spotlight due to missing method on SDK client (`client.on`)');\n    return;\n  }\n\n  client.on('beforeEnvelope', (envelope) => {\n    if (failedRequests > 3) {\n      logger.warn('[Spotlight] Disabled Sentry -> Spotlight integration due to too many failed requests');\n      return;\n    }\n\n    const serializedEnvelope = serializeEnvelope(envelope);\n\n    const req = http.request(\n      {\n        method: 'POST',\n        path: spotlightUrl.pathname,\n        hostname: spotlightUrl.hostname,\n        port: spotlightUrl.port,\n        headers: {\n          'Content-Type': 'application/x-sentry-envelope',\n        },\n      },\n      res => {\n        res.on('data', () => {\n          // Drain socket\n        });\n\n        res.on('end', () => {\n          // Drain socket\n        });\n        res.setEncoding('utf8');\n      },\n    );\n\n    req.on('error', () => {\n      failedRequests++;\n      logger.warn('[Spotlight] Failed to send envelope to Spotlight Sidecar');\n    });\n    req.write(serializedEnvelope);\n    req.end();\n  });\n}\n\nfunction parseSidecarUrl(url) {\n  try {\n    return new URL(`${url}`);\n  } catch (e) {\n    logger.warn(`[Spotlight] Invalid sidecar URL: ${url}`);\n    return undefined;\n  }\n}\n\nexport { Spotlight };\n//# sourceMappingURL=spotlight.js.map\n",
  "import { _optionalChain } from '@sentry/utils';\nimport { Integrations, RequestData, getMainCarrier, getIntegrationsToSetup, initAndBind, getCurrentHub } from '@sentry/core';\nimport { createStackParser, nodeStackLineParser, stackParserFromStackParserOptions, GLOBAL_OBJ, tracingContextFromHeaders } from '@sentry/utils';\nimport { isAnrChildProcess } from './anr/index.js';\nimport { setNodeAsyncContextStrategy } from './async/index.js';\nimport { NodeClient } from './client.js';\nimport { Console } from './integrations/console.js';\nimport { Http } from './integrations/http.js';\nimport { OnUncaughtException } from './integrations/onuncaughtexception.js';\nimport { OnUnhandledRejection } from './integrations/onunhandledrejection.js';\nimport { Modules } from './integrations/modules.js';\nimport { ContextLines } from './integrations/contextlines.js';\nimport { Context } from './integrations/context.js';\nimport { LocalVariables } from './integrations/localvariables.js';\nimport { Undici } from './integrations/undici/index.js';\nimport { Spotlight } from './integrations/spotlight.js';\nimport { getModuleFromFilename } from './module.js';\nimport { makeNodeTransport } from './transports/http.js';\n\n/* eslint-disable max-lines */\n\nconst defaultIntegrations = [\n  // Common\n  new Integrations.InboundFilters(),\n  new Integrations.FunctionToString(),\n  new Integrations.LinkedErrors(),\n  // Native Wrappers\n  new Console(),\n  new Http(),\n  new Undici(),\n  // Global Handlers\n  new OnUncaughtException(),\n  new OnUnhandledRejection(),\n  // Event Info\n  new ContextLines(),\n  new LocalVariables(),\n  new Context(),\n  new Modules(),\n  new RequestData(),\n];\n\n/**\n * The Sentry Node SDK Client.\n *\n * To use this SDK, call the {@link init} function as early as possible in the\n * main entry module. To set context information or send manual events, use the\n * provided methods.\n *\n * @example\n * ```\n *\n * const { init } = require('@sentry/node');\n *\n * init({\n *   dsn: '__DSN__',\n *   // ...\n * });\n * ```\n *\n * @example\n * ```\n *\n * const { configureScope } = require('@sentry/node');\n * configureScope((scope: Scope) => {\n *   scope.setExtra({ battery: 0.7 });\n *   scope.setTag({ user_mode: 'admin' });\n *   scope.setUser({ id: '4711' });\n * });\n * ```\n *\n * @example\n * ```\n *\n * const { addBreadcrumb } = require('@sentry/node');\n * addBreadcrumb({\n *   message: 'My Breadcrumb',\n *   // ...\n * });\n * ```\n *\n * @example\n * ```\n *\n * const Sentry = require('@sentry/node');\n * Sentry.captureMessage('Hello, world!');\n * Sentry.captureException(new Error('Good bye'));\n * Sentry.captureEvent({\n *   message: 'Manual',\n *   stacktrace: [\n *     // ...\n *   ],\n * });\n * ```\n *\n * @see {@link NodeOptions} for documentation on configuration options.\n */\n// eslint-disable-next-line complexity\nfunction init(options = {}) {\n  if (isAnrChildProcess()) {\n    options.autoSessionTracking = false;\n    options.tracesSampleRate = 0;\n  }\n\n  const carrier = getMainCarrier();\n\n  setNodeAsyncContextStrategy();\n\n  const autoloadedIntegrations = _optionalChain([carrier, 'access', _ => _.__SENTRY__, 'optionalAccess', _2 => _2.integrations]) || [];\n\n  options.defaultIntegrations =\n    options.defaultIntegrations === false\n      ? []\n      : [\n          ...(Array.isArray(options.defaultIntegrations) ? options.defaultIntegrations : defaultIntegrations),\n          ...autoloadedIntegrations,\n        ];\n\n  if (options.dsn === undefined && process.env.SENTRY_DSN) {\n    options.dsn = process.env.SENTRY_DSN;\n  }\n\n  const sentryTracesSampleRate = process.env.SENTRY_TRACES_SAMPLE_RATE;\n  if (options.tracesSampleRate === undefined && sentryTracesSampleRate) {\n    const tracesSampleRate = parseFloat(sentryTracesSampleRate);\n    if (isFinite(tracesSampleRate)) {\n      options.tracesSampleRate = tracesSampleRate;\n    }\n  }\n\n  if (options.release === undefined) {\n    const detectedRelease = getSentryRelease();\n    if (detectedRelease !== undefined) {\n      options.release = detectedRelease;\n    } else {\n      // If release is not provided, then we should disable autoSessionTracking\n      options.autoSessionTracking = false;\n    }\n  }\n\n  if (options.environment === undefined && process.env.SENTRY_ENVIRONMENT) {\n    options.environment = process.env.SENTRY_ENVIRONMENT;\n  }\n\n  if (options.autoSessionTracking === undefined && options.dsn !== undefined) {\n    options.autoSessionTracking = true;\n  }\n\n  if (options.instrumenter === undefined) {\n    options.instrumenter = 'sentry';\n  }\n\n  // TODO(v7): Refactor this to reduce the logic above\n  const clientOptions = {\n    ...options,\n    stackParser: stackParserFromStackParserOptions(options.stackParser || defaultStackParser),\n    integrations: getIntegrationsToSetup(options),\n    transport: options.transport || makeNodeTransport,\n  };\n\n  initAndBind(options.clientClass || NodeClient, clientOptions);\n\n  if (options.autoSessionTracking) {\n    startSessionTracking();\n  }\n\n  updateScopeFromEnvVariables();\n\n  if (options.spotlight) {\n    const client = getCurrentHub().getClient();\n    if (client && client.addIntegration) {\n      // force integrations to be setup even if no DSN was set\n      client.setupIntegrations(true);\n      client.addIntegration(\n        new Spotlight({ sidecarUrl: typeof options.spotlight === 'string' ? options.spotlight : undefined }),\n      );\n    }\n  }\n}\n\n/**\n * Function that takes an instance of NodeClient and checks if autoSessionTracking option is enabled for that client\n */\nfunction isAutoSessionTrackingEnabled(client) {\n  if (client === undefined) {\n    return false;\n  }\n  const clientOptions = client && client.getOptions();\n  if (clientOptions && clientOptions.autoSessionTracking !== undefined) {\n    return clientOptions.autoSessionTracking;\n  }\n  return false;\n}\n\n/**\n * Returns a release dynamically from environment variables.\n */\nfunction getSentryRelease(fallback) {\n  // Always read first as Sentry takes this as precedence\n  if (process.env.SENTRY_RELEASE) {\n    return process.env.SENTRY_RELEASE;\n  }\n\n  // This supports the variable that sentry-webpack-plugin injects\n  if (GLOBAL_OBJ.SENTRY_RELEASE && GLOBAL_OBJ.SENTRY_RELEASE.id) {\n    return GLOBAL_OBJ.SENTRY_RELEASE.id;\n  }\n\n  return (\n    // GitHub Actions - https://help.github.com/en/actions/configuring-and-managing-workflows/using-environment-variables#default-environment-variables\n    process.env.GITHUB_SHA ||\n    // Netlify - https://docs.netlify.com/configure-builds/environment-variables/#build-metadata\n    process.env.COMMIT_REF ||\n    // Vercel - https://vercel.com/docs/v2/build-step#system-environment-variables\n    process.env.VERCEL_GIT_COMMIT_SHA ||\n    process.env.VERCEL_GITHUB_COMMIT_SHA ||\n    process.env.VERCEL_GITLAB_COMMIT_SHA ||\n    process.env.VERCEL_BITBUCKET_COMMIT_SHA ||\n    // Zeit (now known as Vercel)\n    process.env.ZEIT_GITHUB_COMMIT_SHA ||\n    process.env.ZEIT_GITLAB_COMMIT_SHA ||\n    process.env.ZEIT_BITBUCKET_COMMIT_SHA ||\n    fallback\n  );\n}\n\n/** Node.js stack parser */\nconst defaultStackParser = createStackParser(nodeStackLineParser(getModuleFromFilename));\n\n/**\n * Enable automatic Session Tracking for the node process.\n */\nfunction startSessionTracking() {\n  const hub = getCurrentHub();\n  hub.startSession();\n  // Emitted in the case of healthy sessions, error of `mechanism.handled: true` and unhandledrejections because\n  // The 'beforeExit' event is not emitted for conditions causing explicit termination,\n  // such as calling process.exit() or uncaught exceptions.\n  // Ref: https://nodejs.org/api/process.html#process_event_beforeexit\n  process.on('beforeExit', () => {\n    const session = hub.getScope().getSession();\n    const terminalStates = ['exited', 'crashed'];\n    // Only call endSession, if the Session exists on Scope and SessionStatus is not a\n    // Terminal Status i.e. Exited or Crashed because\n    // \"When a session is moved away from ok it must not be updated anymore.\"\n    // Ref: https://develop.sentry.dev/sdk/sessions/\n    if (session && !terminalStates.includes(session.status)) hub.endSession();\n  });\n}\n\n/**\n * Update scope and propagation context based on environmental variables.\n *\n * See https://github.com/getsentry/rfcs/blob/main/text/0071-continue-trace-over-process-boundaries.md\n * for more details.\n */\nfunction updateScopeFromEnvVariables() {\n  const sentryUseEnvironment = (process.env.SENTRY_USE_ENVIRONMENT || '').toLowerCase();\n  if (!['false', 'n', 'no', 'off', '0'].includes(sentryUseEnvironment)) {\n    const sentryTraceEnv = process.env.SENTRY_TRACE;\n    const baggageEnv = process.env.SENTRY_BAGGAGE;\n    const { propagationContext } = tracingContextFromHeaders(sentryTraceEnv, baggageEnv);\n    getCurrentHub().getScope().setPropagationContext(propagationContext);\n  }\n}\n\nexport { defaultIntegrations, defaultStackParser, getSentryRelease, init, isAutoSessionTrackingEnabled };\n//# sourceMappingURL=sdk.js.map\n",
  "import { _optionalChain } from '@sentry/utils';\nimport { Integrations, RequestData, getMainCarrier, getIntegrationsToSetup, initAndBind, getCurrentHub } from '@sentry/core';\nimport { createStackParser, nodeStackLineParser, stackParserFromStackParserOptions, GLOBAL_OBJ, tracingContextFromHeaders } from '@sentry/utils';\nimport { isAnrChildProcess } from './anr/index.js';\nimport { setNodeAsyncContextStrategy } from './async/index.js';\nimport { NodeClient } from './client.js';\nimport { Console } from './integrations/console.js';\nimport { Http } from './integrations/http.js';\nimport { OnUncaughtException } from './integrations/onuncaughtexception.js';\nimport { OnUnhandledRejection } from './integrations/onunhandledrejection.js';\nimport { Modules } from './integrations/modules.js';\nimport { ContextLines } from './integrations/contextlines.js';\nimport { Context } from './integrations/context.js';\nimport { LocalVariables } from './integrations/localvariables.js';\nimport { Undici } from './integrations/undici/index.js';\nimport { Spotlight } from './integrations/spotlight.js';\nimport { getModuleFromFilename } from './module.js';\nimport { makeNodeTransport } from './transports/http.js';\n\n/* eslint-disable max-lines */\n\nconst defaultIntegrations = [\n  // Common\n  new Integrations.InboundFilters(),\n  new Integrations.FunctionToString(),\n  new Integrations.LinkedErrors(),\n  // Native Wrappers\n  new Console(),\n  new Http(),\n  new Undici(),\n  // Global Handlers\n  new OnUncaughtException(),\n  new OnUnhandledRejection(),\n  // Event Info\n  new ContextLines(),\n  new LocalVariables(),\n  new Context(),\n  new Modules(),\n  new RequestData(),\n];\n\n/**\n * The Sentry Node SDK Client.\n *\n * To use this SDK, call the {@link init} function as early as possible in the\n * main entry module. To set context information or send manual events, use the\n * provided methods.\n *\n * @example\n * ```\n *\n * const { init } = require('@sentry/node');\n *\n * init({\n *   dsn: '__DSN__',\n *   // ...\n * });\n * ```\n *\n * @example\n * ```\n *\n * const { configureScope } = require('@sentry/node');\n * configureScope((scope: Scope) => {\n *   scope.setExtra({ battery: 0.7 });\n *   scope.setTag({ user_mode: 'admin' });\n *   scope.setUser({ id: '4711' });\n * });\n * ```\n *\n * @example\n * ```\n *\n * const { addBreadcrumb } = require('@sentry/node');\n * addBreadcrumb({\n *   message: 'My Breadcrumb',\n *   // ...\n * });\n * ```\n *\n * @example\n * ```\n *\n * const Sentry = require('@sentry/node');\n * Sentry.captureMessage('Hello, world!');\n * Sentry.captureException(new Error('Good bye'));\n * Sentry.captureEvent({\n *   message: 'Manual',\n *   stacktrace: [\n *     // ...\n *   ],\n * });\n * ```\n *\n * @see {@link NodeOptions} for documentation on configuration options.\n */\n// eslint-disable-next-line complexity\nfunction init(options = {}) {\n  if (isAnrChildProcess()) {\n    options.autoSessionTracking = false;\n    options.tracesSampleRate = 0;\n  }\n\n  const carrier = getMainCarrier();\n\n  setNodeAsyncContextStrategy();\n\n  const autoloadedIntegrations = _optionalChain([carrier, 'access', _ => _.__SENTRY__, 'optionalAccess', _2 => _2.integrations]) || [];\n\n  options.defaultIntegrations =\n    options.defaultIntegrations === false\n      ? []\n      : [\n          ...(Array.isArray(options.defaultIntegrations) ? options.defaultIntegrations : defaultIntegrations),\n          ...autoloadedIntegrations,\n        ];\n\n  if (options.dsn === undefined && process.env.SENTRY_DSN) {\n    options.dsn = process.env.SENTRY_DSN;\n  }\n\n  const sentryTracesSampleRate = process.env.SENTRY_TRACES_SAMPLE_RATE;\n  if (options.tracesSampleRate === undefined && sentryTracesSampleRate) {\n    const tracesSampleRate = parseFloat(sentryTracesSampleRate);\n    if (isFinite(tracesSampleRate)) {\n      options.tracesSampleRate = tracesSampleRate;\n    }\n  }\n\n  if (options.release === undefined) {\n    const detectedRelease = getSentryRelease();\n    if (detectedRelease !== undefined) {\n      options.release = detectedRelease;\n    } else {\n      // If release is not provided, then we should disable autoSessionTracking\n      options.autoSessionTracking = false;\n    }\n  }\n\n  if (options.environment === undefined && process.env.SENTRY_ENVIRONMENT) {\n    options.environment = process.env.SENTRY_ENVIRONMENT;\n  }\n\n  if (options.autoSessionTracking === undefined && options.dsn !== undefined) {\n    options.autoSessionTracking = true;\n  }\n\n  if (options.instrumenter === undefined) {\n    options.instrumenter = 'sentry';\n  }\n\n  // TODO(v7): Refactor this to reduce the logic above\n  const clientOptions = {\n    ...options,\n    stackParser: stackParserFromStackParserOptions(options.stackParser || defaultStackParser),\n    integrations: getIntegrationsToSetup(options),\n    transport: options.transport || makeNodeTransport,\n  };\n\n  initAndBind(options.clientClass || NodeClient, clientOptions);\n\n  if (options.autoSessionTracking) {\n    startSessionTracking();\n  }\n\n  updateScopeFromEnvVariables();\n\n  if (options.spotlight) {\n    const client = getCurrentHub().getClient();\n    if (client && client.addIntegration) {\n      // force integrations to be setup even if no DSN was set\n      client.setupIntegrations(true);\n      client.addIntegration(\n        new Spotlight({ sidecarUrl: typeof options.spotlight === 'string' ? options.spotlight : undefined }),\n      );\n    }\n  }\n}\n\n/**\n * Function that takes an instance of NodeClient and checks if autoSessionTracking option is enabled for that client\n */\nfunction isAutoSessionTrackingEnabled(client) {\n  if (client === undefined) {\n    return false;\n  }\n  const clientOptions = client && client.getOptions();\n  if (clientOptions && clientOptions.autoSessionTracking !== undefined) {\n    return clientOptions.autoSessionTracking;\n  }\n  return false;\n}\n\n/**\n * Returns a release dynamically from environment variables.\n */\nfunction getSentryRelease(fallback) {\n  // Always read first as Sentry takes this as precedence\n  if (process.env.SENTRY_RELEASE) {\n    return process.env.SENTRY_RELEASE;\n  }\n\n  // This supports the variable that sentry-webpack-plugin injects\n  if (GLOBAL_OBJ.SENTRY_RELEASE && GLOBAL_OBJ.SENTRY_RELEASE.id) {\n    return GLOBAL_OBJ.SENTRY_RELEASE.id;\n  }\n\n  return (\n    // GitHub Actions - https://help.github.com/en/actions/configuring-and-managing-workflows/using-environment-variables#default-environment-variables\n    process.env.GITHUB_SHA ||\n    // Netlify - https://docs.netlify.com/configure-builds/environment-variables/#build-metadata\n    process.env.COMMIT_REF ||\n    // Vercel - https://vercel.com/docs/v2/build-step#system-environment-variables\n    process.env.VERCEL_GIT_COMMIT_SHA ||\n    process.env.VERCEL_GITHUB_COMMIT_SHA ||\n    process.env.VERCEL_GITLAB_COMMIT_SHA ||\n    process.env.VERCEL_BITBUCKET_COMMIT_SHA ||\n    // Zeit (now known as Vercel)\n    process.env.ZEIT_GITHUB_COMMIT_SHA ||\n    process.env.ZEIT_GITLAB_COMMIT_SHA ||\n    process.env.ZEIT_BITBUCKET_COMMIT_SHA ||\n    fallback\n  );\n}\n\n/** Node.js stack parser */\nconst defaultStackParser = createStackParser(nodeStackLineParser(getModuleFromFilename));\n\n/**\n * Enable automatic Session Tracking for the node process.\n */\nfunction startSessionTracking() {\n  const hub = getCurrentHub();\n  hub.startSession();\n  // Emitted in the case of healthy sessions, error of `mechanism.handled: true` and unhandledrejections because\n  // The 'beforeExit' event is not emitted for conditions causing explicit termination,\n  // such as calling process.exit() or uncaught exceptions.\n  // Ref: https://nodejs.org/api/process.html#process_event_beforeexit\n  process.on('beforeExit', () => {\n    const session = hub.getScope().getSession();\n    const terminalStates = ['exited', 'crashed'];\n    // Only call endSession, if the Session exists on Scope and SessionStatus is not a\n    // Terminal Status i.e. Exited or Crashed because\n    // \"When a session is moved away from ok it must not be updated anymore.\"\n    // Ref: https://develop.sentry.dev/sdk/sessions/\n    if (session && !terminalStates.includes(session.status)) hub.endSession();\n  });\n}\n\n/**\n * Update scope and propagation context based on environmental variables.\n *\n * See https://github.com/getsentry/rfcs/blob/main/text/0071-continue-trace-over-process-boundaries.md\n * for more details.\n */\nfunction updateScopeFromEnvVariables() {\n  const sentryUseEnvironment = (process.env.SENTRY_USE_ENVIRONMENT || '').toLowerCase();\n  if (!['false', 'n', 'no', 'off', '0'].includes(sentryUseEnvironment)) {\n    const sentryTraceEnv = process.env.SENTRY_TRACE;\n    const baggageEnv = process.env.SENTRY_BAGGAGE;\n    const { propagationContext } = tracingContextFromHeaders(sentryTraceEnv, baggageEnv);\n    getCurrentHub().getScope().setPropagationContext(propagationContext);\n  }\n}\n\nexport { defaultIntegrations, defaultStackParser, getSentryRelease, init, isAutoSessionTrackingEnabled };\n//# sourceMappingURL=sdk.js.map\n",
  "import { Integrations } from '@sentry/core';\nexport { Hub, SDK_VERSION, Scope, addBreadcrumb, addGlobalEventProcessor, addIntegration, captureCheckIn, captureEvent, captureException, captureMessage, close, configureScope, continueTrace, createTransport, extractTraceparentData, flush, getActiveSpan, getActiveTransaction, getClient, getCurrentHub, getHubFromCarrier, lastEventId, makeMain, runWithAsyncContext, setContext, setExtra, setExtras, setMeasurement, setTag, setTags, setUser, spanStatusfromHttpCode, startActiveSpan, startInactiveSpan, startSpan, startSpanManual, startTransaction, trace, withMonitor, withScope } from '@sentry/core';\nexport { autoDiscoverNodePerformanceMonitoringIntegrations } from './tracing/index.js';\nexport { NodeClient } from './client.js';\nexport { makeNodeTransport } from './transports/http.js';\nexport { defaultIntegrations, defaultStackParser, getSentryRelease, init } from './sdk.js';\nexport { DEFAULT_USER_INCLUDES, addRequestDataToEvent, extractRequestData } from '@sentry/utils';\nexport { deepReadDirSync } from './utils.js';\nexport { getModuleFromFilename } from './module.js';\nexport { enableAnrDetection } from './anr/index.js';\nimport * as handlers from './handlers.js';\nexport { handlers as Handlers };\nimport * as index from './integrations/index.js';\nimport * as integrations from './tracing/integrations.js';\n\nconst INTEGRATIONS = {\n  ...Integrations,\n  ...index,\n  ...integrations,\n};\n\nexport { INTEGRATIONS as Integrations };\n//# sourceMappingURL=index.js.map\n",
  "import * as os from 'os';\nimport { ServerRuntimeClient, SDK_VERSION } from '@sentry/core';\n\n/**\n * The Sentry Bun SDK Client.\n *\n * @see BunClientOptions for documentation on configuration options.\n * @see SentryClient for usage documentation.\n */\nclass BunClient extends ServerRuntimeClient {\n  /**\n   * Creates a new Bun SDK instance.\n   * @param options Configuration options for this SDK.\n   */\n   constructor(options) {\n    options._metadata = options._metadata || {};\n    options._metadata.sdk = options._metadata.sdk || {\n      name: 'sentry.javascript.bun',\n      packages: [\n        {\n          name: 'npm:@sentry/bun',\n          version: SDK_VERSION,\n        },\n      ],\n      version: SDK_VERSION,\n    };\n\n    const clientOptions = {\n      ...options,\n      platform: 'javascript',\n      runtime: { name: 'bun', version: Bun.version },\n      serverName: options.serverName || global.process.env.SENTRY_NAME || os.hostname(),\n    };\n\n    super(clientOptions);\n  }\n}\n\nexport { BunClient };\n//# sourceMappingURL=client.js.map\n",
  "import * as os from 'os';\nimport { ServerRuntimeClient, SDK_VERSION } from '@sentry/core';\n\n/**\n * The Sentry Bun SDK Client.\n *\n * @see BunClientOptions for documentation on configuration options.\n * @see SentryClient for usage documentation.\n */\nclass BunClient extends ServerRuntimeClient {\n  /**\n   * Creates a new Bun SDK instance.\n   * @param options Configuration options for this SDK.\n   */\n   constructor(options) {\n    options._metadata = options._metadata || {};\n    options._metadata.sdk = options._metadata.sdk || {\n      name: 'sentry.javascript.bun',\n      packages: [\n        {\n          name: 'npm:@sentry/bun',\n          version: SDK_VERSION,\n        },\n      ],\n      version: SDK_VERSION,\n    };\n\n    const clientOptions = {\n      ...options,\n      platform: 'javascript',\n      runtime: { name: 'bun', version: Bun.version },\n      serverName: options.serverName || global.process.env.SENTRY_NAME || os.hostname(),\n    };\n\n    super(clientOptions);\n  }\n}\n\nexport { BunClient };\n//# sourceMappingURL=client.js.map\n",
  "import { _optionalChain } from '@sentry/utils';\nimport { runWithAsyncContext, continueTrace, startSpan, Transaction, captureException } from '@sentry/core';\nimport { parseUrl, getSanitizedUrlString } from '@sentry/utils';\n\n/**\n * Instruments `Bun.serve` to automatically create transactions and capture errors.\n */\nclass BunServer  {constructor() { BunServer.prototype.__init.call(this); }\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'BunServer';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = BunServer.id;}\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce() {\n    instrumentBunServe();\n  }\n}BunServer.__initStatic();\n\n/**\n * Instruments Bun.serve by patching it's options.\n */\nfunction instrumentBunServe() {\n  Bun.serve = new Proxy(Bun.serve, {\n    apply(serveTarget, serveThisArg, serveArgs) {\n      instrumentBunServeOptions(serveArgs[0]);\n      return serveTarget.apply(serveThisArg, serveArgs);\n    },\n  });\n}\n\n/**\n * Instruments Bun.serve `fetch` option to automatically create spans and capture errors.\n */\nfunction instrumentBunServeOptions(serveOptions) {\n  serveOptions.fetch = new Proxy(serveOptions.fetch, {\n    apply(fetchTarget, fetchThisArg, fetchArgs) {\n      return runWithAsyncContext(() => {\n        const request = fetchArgs[0];\n        const upperCaseMethod = request.method.toUpperCase();\n        if (upperCaseMethod === 'OPTIONS' || upperCaseMethod === 'HEAD') {\n          return fetchTarget.apply(fetchThisArg, fetchArgs);\n        }\n\n        const parsedUrl = parseUrl(request.url);\n        const data = {\n          'http.request.method': request.method || 'GET',\n        };\n        if (parsedUrl.search) {\n          data['http.query'] = parsedUrl.search;\n        }\n\n        const url = getSanitizedUrlString(parsedUrl);\n\n        return continueTrace(\n          { sentryTrace: request.headers.get('sentry-trace') || '', baggage: request.headers.get('baggage') },\n          ctx => {\n            return startSpan(\n              {\n                op: 'http.server',\n                name: `${request.method} ${parsedUrl.path || '/'}`,\n                origin: 'auto.http.bun.serve',\n                ...ctx,\n                data,\n                metadata: {\n                  ...ctx.metadata,\n                  source: 'url',\n                  request: {\n                    url,\n                    method: request.method,\n                    headers: request.headers.toJSON(),\n                  },\n                },\n              },\n              async span => {\n                try {\n                  const response = await (fetchTarget.apply(fetchThisArg, fetchArgs)\n\n);\n                  if (response && response.status) {\n                    _optionalChain([span, 'optionalAccess', _ => _.setHttpStatus, 'call', _2 => _2(response.status)]);\n                    _optionalChain([span, 'optionalAccess', _3 => _3.setData, 'call', _4 => _4('http.response.status_code', response.status)]);\n                    if (span instanceof Transaction) {\n                      span.setContext('response', {\n                        headers: response.headers.toJSON(),\n                        status_code: response.status,\n                      });\n                    }\n                  }\n                  return response;\n                } catch (e) {\n                  captureException(e, {\n                    mechanism: {\n                      type: 'bun',\n                      handled: false,\n                      data: {\n                        function: 'serve',\n                      },\n                    },\n                  });\n                  throw e;\n                }\n              },\n            );\n          },\n        );\n      });\n    },\n  });\n}\n\nexport { BunServer, instrumentBunServe };\n//# sourceMappingURL=bunserver.js.map\n",
  "import { createTransport } from '@sentry/core';\nimport { rejectedSyncPromise } from '@sentry/utils';\n\n/**\n * Creates a Transport that uses the Fetch API to send events to Sentry.\n */\nfunction makeFetchTransport(options) {\n  function makeRequest(request) {\n    const requestOptions = {\n      body: request.body,\n      method: 'POST',\n      headers: options.headers,\n    };\n\n    try {\n      return fetch(options.url, requestOptions).then(response => {\n        return {\n          statusCode: response.status,\n          headers: {\n            'x-sentry-rate-limits': response.headers.get('X-Sentry-Rate-Limits'),\n            'retry-after': response.headers.get('Retry-After'),\n          },\n        };\n      });\n    } catch (e) {\n      return rejectedSyncPromise(e);\n    }\n  }\n\n  return createTransport(options, makeRequest);\n}\n\nexport { makeFetchTransport };\n//# sourceMappingURL=index.js.map\n",
  "import { Integrations } from '@sentry/core';\nimport { Integrations as Integrations$1, init as init$1 } from '@sentry/node';\nimport { BunClient } from './client.js';\nimport { BunServer } from './integrations/bunserver.js';\nimport { makeFetchTransport } from './transports/index.js';\n\n/* eslint-disable max-lines */\n\nconst defaultIntegrations = [\n  // Common\n  new Integrations.InboundFilters(),\n  new Integrations.FunctionToString(),\n  new Integrations.LinkedErrors(),\n  // Native Wrappers\n  new Integrations$1.Console(),\n  new Integrations$1.Http(),\n  new Integrations$1.Undici(),\n  // Global Handlers # TODO (waiting for https://github.com/oven-sh/bun/issues/5091)\n  // new NodeIntegrations.OnUncaughtException(),\n  // new NodeIntegrations.OnUnhandledRejection(),\n  // Event Info\n  new Integrations$1.ContextLines(),\n  // new NodeIntegrations.LocalVariables(), # does't work with Bun\n  new Integrations$1.Context(),\n  new Integrations$1.Modules(),\n  new Integrations$1.RequestData(),\n  // Bun Specific\n  new BunServer(),\n];\n\n/**\n * The Sentry Bun SDK Client.\n *\n * To use this SDK, call the {@link init} function as early as possible in the\n * main entry module. To set context information or send manual events, use the\n * provided methods.\n *\n * @example\n * ```\n *\n * const { init } = require('@sentry/bun');\n *\n * init({\n *   dsn: '__DSN__',\n *   // ...\n * });\n * ```\n *\n * @example\n * ```\n *\n * const { configureScope } = require('@sentry/node');\n * configureScope((scope: Scope) => {\n *   scope.setExtra({ battery: 0.7 });\n *   scope.setTag({ user_mode: 'admin' });\n *   scope.setUser({ id: '4711' });\n * });\n * ```\n *\n * @example\n * ```\n *\n * const { addBreadcrumb } = require('@sentry/node');\n * addBreadcrumb({\n *   message: 'My Breadcrumb',\n *   // ...\n * });\n * ```\n *\n * @example\n * ```\n *\n * const Sentry = require('@sentry/node');\n * Sentry.captureMessage('Hello, world!');\n * Sentry.captureException(new Error('Good bye'));\n * Sentry.captureEvent({\n *   message: 'Manual',\n *   stacktrace: [\n *     // ...\n *   ],\n * });\n * ```\n *\n * @see {@link BunOptions} for documentation on configuration options.\n */\nfunction init(options = {}) {\n  options.clientClass = BunClient;\n  options.transport = options.transport || makeFetchTransport;\n\n  options.defaultIntegrations =\n    options.defaultIntegrations === false\n      ? []\n      : [...(Array.isArray(options.defaultIntegrations) ? options.defaultIntegrations : defaultIntegrations)];\n  init$1(options);\n}\n\nexport { defaultIntegrations, init };\n//# sourceMappingURL=sdk.js.map\n",
  "import { Integrations } from '@sentry/core';\nexport { Hub, SDK_VERSION, Scope, addBreadcrumb, addGlobalEventProcessor, addIntegration, captureCheckIn, captureEvent, captureException, captureMessage, close, configureScope, continueTrace, createTransport, extractTraceparentData, flush, getActiveSpan, getActiveTransaction, getClient, getCurrentHub, getHubFromCarrier, lastEventId, makeMain, runWithAsyncContext, setContext, setExtra, setExtras, setMeasurement, setTag, setTags, setUser, spanStatusfromHttpCode, startInactiveSpan, startSpan, startSpanManual, startTransaction, trace, withMonitor, withScope } from '@sentry/core';\nimport { Integrations as Integrations$1 } from '@sentry/node';\nexport { autoDiscoverNodePerformanceMonitoringIntegrations } from '@sentry/node';\nexport { BunClient } from './client.js';\nexport { defaultIntegrations, init } from './sdk.js';\nimport * as index from './integrations/index.js';\n\nconst INTEGRATIONS = {\n  ...Integrations,\n  ...Integrations$1,\n  ...index,\n};\n\nexport { INTEGRATIONS as Integrations };\n//# sourceMappingURL=index.js.map\n",
  "import { Post, Req } from '../server/handler/handle';\nimport OpenAI from 'openai';\nimport * as Sentry from \"@sentry/bun\";\n\nclass HTTPException extends Error {\n  status: number;\n  message: string;\n\n  constructor(status: number, message: string) {\n    super(message);\n    this.status = status;\n    this.message = message;\n    Object.setPrototypeOf(this, HTTPException.prototype);\n  }\n}\n\nfunction getApiKey(req: Req) {\n  if (process.env.OPENAI_KEY) {\n    return process.env.OPENAI_KEY;\n  }\n\n  const authHeader = req.headers.get('Authorization');\n  if (!authHeader) throw new HTTPException(401, 'Missing API key');\n  const apiKey = authHeader.split(' ')[1];\n  if (!apiKey) throw new HTTPException(401, 'Wrong API key');\n  return apiKey;\n}\n\nconst openai = new OpenAI({ apiKey: process.env.OPENAI_KEY });\n\nasync function runAssistant(threadId: string, assistantId: string) {\n  try {\n\n    // console.log('Running assistant:', assistantId);\n    const run = await openai.beta.threads.runs.create(\n      threadId,\n      {\n        assistant_id: assistantId,\n        instructions: \"You're Emma, bilingual English Coach at E4CC. Always keep responses really short, focus on teaching English to Spanish speakers. Stay friendly and encouraging, avoid off-topic discussions.\",\n      }\n    );\n    // console.log('Run created:', run);\n    return run;\n  } catch (error) {\n    // Log the error to Sentry\n    Sentry.captureException(error);\n\n    throw new HTTPException(500, `Error in run_assistant: ${error}`);\n  }\n}\n\nasync function getStatus(threadId: string, runId: string) {\n  try {\n    const run = await openai.beta.threads.runs.retrieve(threadId, runId);\n    // console.log('Run status:', run.status);\n    return run.status;\n  } catch (error) {\n    // Log the error to Sentry\n    Sentry.captureException(error);\n\n    throw new HTTPException(500, `Error getting status: ${error}`);\n  }\n}\n\nasync function getMessages(threadId: string) {\n  try {\n    // console.log('Getting messages from thread:', threadId);\n    const response = await openai.beta.threads.messages.list(threadId);\n\n    if (!response.data || response.data.length === 0) {\n      throw new HTTPException(404, 'No messages found in the thread');\n    }\n\n    // Find the latest message from the assistant\n    const latestAssistantMessage = response.data.find(message => message.role === 'assistant');\n\n    if (!latestAssistantMessage) {\n      throw new HTTPException(404, 'No assistant messages found in the thread');\n    }\n\n    // Extract the text from the latest assistant's message\n    const latestMessageText = latestAssistantMessage.content\n      .filter(content => content.type === 'text')\n      .map(textContent => {\n        if (textContent.type === 'text') {\n          return textContent.text.value;\n        }\n        return '';\n      })\n      .join('\\n');\n\n    // console.log('Latest message:', latestMessageText);\n    return latestMessageText;\n\n  } catch (error) {\n    // Log the error to Sentry\n    Sentry.captureException(error);\n\n    throw new HTTPException(500, `Error getting messages: ${error}`);\n  }\n}\n\nexport default async function (req: Post<{ text: string; assistantId: string; threadId: string }>) {\n\n  try {\n    const apiKey = getApiKey(req);\n    const { text, assistantId, threadId } = req.body; // Assuming req.body has these fields\n\n    await openai.beta.threads.messages.create(\n      threadId,\n      {\n        role: 'user',\n        content: text,\n      });\n\n    const runResult = await runAssistant(threadId, assistantId);\n    const runId = runResult.id;\n    let retries = 0;\n    const maxRetries = 600;\n    let statusResponse;\n\n    while (retries < maxRetries) {\n      statusResponse = await getStatus(threadId, runId);\n      if (statusResponse === 'completed') {\n        break;\n      }\n      // Implement exponential backoff logic\n      retries++;\n    }\n\n    if (retries === maxRetries) {\n      throw new HTTPException(408, 'Request timed out');\n    }\n\n    const latestMessageText = await getMessages(threadId);\n    return latestMessageText;\n\n  } catch (error) {\n    if (error instanceof HTTPException) {\n      // Handle known HTTP exceptions\n      throw error;\n    } else {\n      // Log the error to Sentry\n      Sentry.captureException(error);\n\n      // Handle unknown errors\n      console.error('Unexpected error:', error);\n      throw new HTTPException(500, 'Internal Server Error');\n    }\n  }\n}\n"
  ],
  "mappings": "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,IAAM,OAAM,MAAK,KAAM,EAAU,OAAQ,GAAM,MAAM,CAAkB,EAIvE,MAAM,EAAiB,GAFT,SAAW,QAAQ,MAAQ,QAAQ,KAAK,UAAY,GAAQ,OAAO,QAAQ,IAAI,KAK7F,IAAI,EAAO,EAEX,GAAI,IAAQ,OAAS,IAAQ,QAAU,IAAQ,OAC7C,EAAO,EAAK,MAAM,EAAG,EAAI,QAAS,CAAE,EAGtC,IAAK,IAAS,EAEZ,EAAM,IAGR,IAAI,EAAI,EAAI,YAAY,gBAAgB,EACxC,GAAI,GAAI,EAEN,MAAO,GAAG,EAAI,MAAM,EAAI,EAAE,EAAE,QAAQ,MAAO,GAAG,KAAK,IAMrD,GAFA,EAAI,GAAG,KAAO,YAAY,EAAgB,CAAC,EAEvC,IAAM,EAAG,CACX,IAAI,EAAa,EAAI,MAAM,EAAe,MAAM,EAAE,QAAQ,MAAO,GAAG,EACpE,GAAI,EACF,GAAc,IAGhB,OADA,GAAc,EACP,EAET,OAAO,GAxDH,GAAoB,KAAQACjgggggBlCEA,IAAM,EAAe,GAAY,QAAQ,SAAS,IAAIACjgggggBtDCAAChgggggBAEA,+BAOA,IAAS,WAA4B,EAAG,CACtC,IAAK,GACH,GAAe,IAAmB,qBAGpC,SAAS,CAAa,EAAG,CACvB,OAAO,GAAa,SAAS,EAG/B,SAAS,CAAY,CAAC,EAAQ,CAC5B,MAAM,EAAU,CAAC,EAEjB,OADA,GAAmB,EAAS,CAAM,EAC3B,GAAkB,CAAO,EAGlC,SAAS,CAAmB,CAAC,EAAU,EAAS,CAC9C,MAAM,EAAc,EAAc,EAElC,GAAI,GAAe,EAAe,CAAC,EAAS,iBAAkB,KAAK,EAAE,aAAa,CAAC,EAGjF,OAAO,EAAS,EAGlB,MAAM,EAAS,EAAa,CAAW,EAEvC,OAAO,GAAa,IAAI,EAAQ,IAAM,CACpC,OAAO,EAAS,EACjB,EAGH,GAAwB,CAAE,gBAAe,qBAAoB,CAAC,GApC5DACngggggBJUA,IAAS,WAA2B,EAAG,CACrC,GAAI,EAAa,OAAS,EAAa,OAAS,GAC9C,GAA6B,MAE7B,IAA8BAC7gggggBlCAAAC/////fAKA,IAAM,UAAsB,mBAAqB,aAAeACpgggggBhECA,cAASAChgggggBTgGA,IAAS,WAAkC,CAC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",
  "debugId": "7A8549A3EED9337464756e2164756e21",
  "names": []
}